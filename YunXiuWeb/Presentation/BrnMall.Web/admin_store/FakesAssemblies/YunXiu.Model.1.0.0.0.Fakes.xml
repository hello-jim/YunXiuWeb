<?xml version="1.0"?>
<doc>
    <assembly>
        <name>YunXiu.Model.1.0.0.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:YunXiu.Model.Fakes.ShimAttributeValue">
            <summary>YunXiu.Model.AttributeValue 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimAttributeValue.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimAttributeValue.#ctor(YunXiu.Model.AttributeValue)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimAttributeValue.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimAttributeValue.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimAttributeValue.AttrGet">
            <summary>设置 AttributeValue.get_Attr() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimAttributeValue.AttrSetCateAttribute">
            <summary>设置 AttributeValue.set_Attr(CateAttribute value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimAttributeValue.AttrValGet">
            <summary>设置 AttributeValue.get_AttrVal() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimAttributeValue.AttrValIDGet">
            <summary>设置 AttributeValue.get_AttrValID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimAttributeValue.AttrValIDSetInt32">
            <summary>设置 AttributeValue.set_AttrValID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimAttributeValue.AttrValSetString">
            <summary>设置 AttributeValue.set_AttrVal(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimAttributeValue.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimAttributeValue.Constructor">
            <summary>设置 AttributeValue.AttributeValue() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimAttributeValue.IsInputGet">
            <summary>设置 AttributeValue.get_IsInput() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimAttributeValue.IsInputSetString">
            <summary>设置 AttributeValue.set_IsInput(String value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimAttributeValue.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimAttributeValue.AllInstances.AttrGet">
            <summary>设置 AttributeValue.get_Attr() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimAttributeValue.AllInstances.AttrSetCateAttribute">
            <summary>设置 AttributeValue.set_Attr(CateAttribute value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimAttributeValue.AllInstances.AttrValGet">
            <summary>设置 AttributeValue.get_AttrVal() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimAttributeValue.AllInstances.AttrValIDGet">
            <summary>设置 AttributeValue.get_AttrValID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimAttributeValue.AllInstances.AttrValIDSetInt32">
            <summary>设置 AttributeValue.set_AttrValID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimAttributeValue.AllInstances.AttrValSetString">
            <summary>设置 AttributeValue.set_AttrVal(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimAttributeValue.AllInstances.IsInputGet">
            <summary>设置 AttributeValue.get_IsInput() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimAttributeValue.AllInstances.IsInputSetString">
            <summary>设置 AttributeValue.set_IsInput(String value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimBanner">
            <summary>YunXiu.Model.Banner 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimBanner.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimBanner.#ctor(YunXiu.Model.Banner)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimBanner.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimBanner.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBanner.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBanner.Constructor">
            <summary>设置 Banner.Banner() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBanner.EndDateGet">
            <summary>设置 Banner.get_EndDate() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBanner.EndDateSetDateTime">
            <summary>设置 Banner.set_EndDate(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBanner.IDGet">
            <summary>设置 Banner.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBanner.IDSetInt32">
            <summary>设置 Banner.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBanner.ImgGet">
            <summary>设置 Banner.get_Img() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBanner.ImgSetString">
            <summary>设置 Banner.set_Img(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBanner.IsShowGet">
            <summary>设置 Banner.get_IsShow() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBanner.IsShowSetBoolean">
            <summary>设置 Banner.set_IsShow(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBanner.SortGet">
            <summary>设置 Banner.get_Sort() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBanner.SortSetInt32">
            <summary>设置 Banner.set_Sort(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBanner.StartDateGet">
            <summary>设置 Banner.get_StartDate() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBanner.StartDateSetDateTime">
            <summary>设置 Banner.set_StartDate(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBanner.TitleGet">
            <summary>设置 Banner.get_Title() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBanner.TitleSetString">
            <summary>设置 Banner.set_Title(String value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimBanner.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBanner.AllInstances.EndDateGet">
            <summary>设置 Banner.get_EndDate() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBanner.AllInstances.EndDateSetDateTime">
            <summary>设置 Banner.set_EndDate(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBanner.AllInstances.IDGet">
            <summary>设置 Banner.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBanner.AllInstances.IDSetInt32">
            <summary>设置 Banner.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBanner.AllInstances.ImgGet">
            <summary>设置 Banner.get_Img() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBanner.AllInstances.ImgSetString">
            <summary>设置 Banner.set_Img(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBanner.AllInstances.IsShowGet">
            <summary>设置 Banner.get_IsShow() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBanner.AllInstances.IsShowSetBoolean">
            <summary>设置 Banner.set_IsShow(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBanner.AllInstances.SortGet">
            <summary>设置 Banner.get_Sort() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBanner.AllInstances.SortSetInt32">
            <summary>设置 Banner.set_Sort(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBanner.AllInstances.StartDateGet">
            <summary>设置 Banner.get_StartDate() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBanner.AllInstances.StartDateSetDateTime">
            <summary>设置 Banner.set_StartDate(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBanner.AllInstances.TitleGet">
            <summary>设置 Banner.get_Title() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBanner.AllInstances.TitleSetString">
            <summary>设置 Banner.set_Title(String value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimBase">
            <summary>YunXiu.Model.Base 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimBase.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimBase.#ctor(YunXiu.Model.Base)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBase.Constructor">
            <summary>设置 Base.Base() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBase.CreateDateGet">
            <summary>设置 Base.get_CreateDate() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBase.CreateDateSetNullableOfDateTime">
            <summary>设置 Base.set_CreateDate(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBase.CreateUserGet">
            <summary>设置 Base.get_CreateUser() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBase.CreateUserSetUser">
            <summary>设置 Base.set_CreateUser(User value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBase.LastUpdateDateGet">
            <summary>设置 Base.get_LastUpdateDate() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBase.LastUpdateDateSetNullableOfDateTime">
            <summary>设置 Base.set_LastUpdateDate(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBase.LastUpdateUserGet">
            <summary>设置 Base.get_LastUpdateUser() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBase.LastUpdateUserSetUser">
            <summary>设置 Base.set_LastUpdateUser(User value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBase.AllInstances.CreateDateGet">
            <summary>设置 Base.get_CreateDate() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBase.AllInstances.CreateDateSetNullableOfDateTime">
            <summary>设置 Base.set_CreateDate(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBase.AllInstances.CreateUserGet">
            <summary>设置 Base.get_CreateUser() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBase.AllInstances.CreateUserSetUser">
            <summary>设置 Base.set_CreateUser(User value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBase.AllInstances.LastUpdateDateGet">
            <summary>设置 Base.get_LastUpdateDate() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBase.AllInstances.LastUpdateDateSetNullableOfDateTime">
            <summary>设置 Base.set_LastUpdateDate(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBase.AllInstances.LastUpdateUserGet">
            <summary>设置 Base.get_LastUpdateUser() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBase.AllInstances.LastUpdateUserSetUser">
            <summary>设置 Base.set_LastUpdateUser(User value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimBid">
            <summary>YunXiu.Model.Bid 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimBid.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimBid.#ctor(YunXiu.Model.Bid)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimBid.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimBid.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBid.BStoreGet">
            <summary>设置 Bid.get_BStore() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBid.BStoreSetStore">
            <summary>设置 Bid.set_BStore(Store value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBid.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBid.BidPriceGet">
            <summary>设置 Bid.get_BidPrice() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBid.BidPriceSetDecimal">
            <summary>设置 Bid.set_BidPrice(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBid.BigBookGet">
            <summary>设置 Bid.get_BigBook() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBid.BigBookSetString">
            <summary>设置 Bid.set_BigBook(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBid.Constructor">
            <summary>设置 Bid.Bid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBid.IDGet">
            <summary>设置 Bid.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBid.IDSetInt32">
            <summary>设置 Bid.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBid.TenderGet">
            <summary>设置 Bid.get_Tender() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBid.TenderSetTender">
            <summary>设置 Bid.set_Tender(Tender value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimBid.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBid.AllInstances.BStoreGet">
            <summary>设置 Bid.get_BStore() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBid.AllInstances.BStoreSetStore">
            <summary>设置 Bid.set_BStore(Store value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBid.AllInstances.BidPriceGet">
            <summary>设置 Bid.get_BidPrice() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBid.AllInstances.BidPriceSetDecimal">
            <summary>设置 Bid.set_BidPrice(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBid.AllInstances.BigBookGet">
            <summary>设置 Bid.get_BigBook() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBid.AllInstances.BigBookSetString">
            <summary>设置 Bid.set_BigBook(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBid.AllInstances.IDGet">
            <summary>设置 Bid.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBid.AllInstances.IDSetInt32">
            <summary>设置 Bid.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBid.AllInstances.TenderGet">
            <summary>设置 Bid.get_Tender() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBid.AllInstances.TenderSetTender">
            <summary>设置 Bid.set_Tender(Tender value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimBrand">
            <summary>YunXiu.Model.Brand 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimBrand.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimBrand.#ctor(YunXiu.Model.Brand)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimBrand.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimBrand.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrand.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrand.BrandDynamicGet">
            <summary>设置 Brand.get_BrandDynamic() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrand.BrandDynamicSetString">
            <summary>设置 Brand.set_BrandDynamic(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrand.BrandIDGet">
            <summary>设置 Brand.get_BrandID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrand.BrandIDSetInt32">
            <summary>设置 Brand.set_BrandID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrand.CategoryGet">
            <summary>设置 Brand.get_Category() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrand.CategorySetCategory">
            <summary>设置 Brand.set_Category(Category value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrand.Constructor">
            <summary>设置 Brand.Brand() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrand.IsHotBrandGet">
            <summary>设置 Brand.get_IsHotBrand() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrand.IsHotBrandSetBoolean">
            <summary>设置 Brand.set_IsHotBrand(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrand.IsShowDynamicGet">
            <summary>设置 Brand.get_IsShowDynamic() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrand.IsShowDynamicSetBoolean">
            <summary>设置 Brand.set_IsShowDynamic(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrand.LogoGet">
            <summary>设置 Brand.get_Logo() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrand.LogoSetString">
            <summary>设置 Brand.set_Logo(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrand.NameGet">
            <summary>设置 Brand.get_Name() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrand.NameSetString">
            <summary>设置 Brand.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrand.ShowDynamicSortGet">
            <summary>设置 Brand.get_ShowDynamicSort() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrand.ShowDynamicSortSetInt32">
            <summary>设置 Brand.set_ShowDynamicSort(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrand.SortGet">
            <summary>设置 Brand.get_Sort() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrand.SortSetInt32">
            <summary>设置 Brand.set_Sort(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimBrand.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrand.AllInstances.BrandDynamicGet">
            <summary>设置 Brand.get_BrandDynamic() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrand.AllInstances.BrandDynamicSetString">
            <summary>设置 Brand.set_BrandDynamic(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrand.AllInstances.BrandIDGet">
            <summary>设置 Brand.get_BrandID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrand.AllInstances.BrandIDSetInt32">
            <summary>设置 Brand.set_BrandID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrand.AllInstances.CategoryGet">
            <summary>设置 Brand.get_Category() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrand.AllInstances.CategorySetCategory">
            <summary>设置 Brand.set_Category(Category value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrand.AllInstances.IsHotBrandGet">
            <summary>设置 Brand.get_IsHotBrand() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrand.AllInstances.IsHotBrandSetBoolean">
            <summary>设置 Brand.set_IsHotBrand(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrand.AllInstances.IsShowDynamicGet">
            <summary>设置 Brand.get_IsShowDynamic() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrand.AllInstances.IsShowDynamicSetBoolean">
            <summary>设置 Brand.set_IsShowDynamic(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrand.AllInstances.LogoGet">
            <summary>设置 Brand.get_Logo() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrand.AllInstances.LogoSetString">
            <summary>设置 Brand.set_Logo(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrand.AllInstances.NameGet">
            <summary>设置 Brand.get_Name() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrand.AllInstances.NameSetString">
            <summary>设置 Brand.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrand.AllInstances.ShowDynamicSortGet">
            <summary>设置 Brand.get_ShowDynamicSort() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrand.AllInstances.ShowDynamicSortSetInt32">
            <summary>设置 Brand.set_ShowDynamicSort(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrand.AllInstances.SortGet">
            <summary>设置 Brand.get_Sort() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrand.AllInstances.SortSetInt32">
            <summary>设置 Brand.set_Sort(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimBrowseHistorie">
            <summary>YunXiu.Model.BrowseHistorie 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimBrowseHistorie.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimBrowseHistorie.#ctor(YunXiu.Model.BrowseHistorie)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimBrowseHistorie.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimBrowseHistorie.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrowseHistorie.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrowseHistorie.Constructor">
            <summary>设置 BrowseHistorie.BrowseHistorie() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrowseHistorie.HIDGet">
            <summary>设置 BrowseHistorie.get_HID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrowseHistorie.HIDSetInt32">
            <summary>设置 BrowseHistorie.set_HID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrowseHistorie.ProductGet">
            <summary>设置 BrowseHistorie.get_Product() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrowseHistorie.ProductSetProduct">
            <summary>设置 BrowseHistorie.set_Product(Product value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrowseHistorie.UserGet">
            <summary>设置 BrowseHistorie.get_User() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrowseHistorie.UserSetUser">
            <summary>设置 BrowseHistorie.set_User(User value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimBrowseHistorie.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrowseHistorie.AllInstances.HIDGet">
            <summary>设置 BrowseHistorie.get_HID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrowseHistorie.AllInstances.HIDSetInt32">
            <summary>设置 BrowseHistorie.set_HID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrowseHistorie.AllInstances.ProductGet">
            <summary>设置 BrowseHistorie.get_Product() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrowseHistorie.AllInstances.ProductSetProduct">
            <summary>设置 BrowseHistorie.set_Product(Product value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrowseHistorie.AllInstances.UserGet">
            <summary>设置 BrowseHistorie.get_User() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBrowseHistorie.AllInstances.UserSetUser">
            <summary>设置 BrowseHistorie.set_User(User value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimBuyApply">
            <summary>YunXiu.Model.BuyApply 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimBuyApply.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimBuyApply.#ctor(YunXiu.Model.BuyApply)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimBuyApply.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimBuyApply.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBuyApply.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBuyApply.BuyCountGet">
            <summary>设置 BuyApply.get_BuyCount() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBuyApply.BuyCountSetInt32">
            <summary>设置 BuyApply.set_BuyCount(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBuyApply.BuyProductGet">
            <summary>设置 BuyApply.get_BuyProduct() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBuyApply.BuyProductSetProduct">
            <summary>设置 BuyApply.set_BuyProduct(Product value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBuyApply.BuyUserGet">
            <summary>设置 BuyApply.get_BuyUser() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBuyApply.BuyUserSetUser">
            <summary>设置 BuyApply.set_BuyUser(User value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBuyApply.Constructor">
            <summary>设置 BuyApply.BuyApply() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBuyApply.IDGet">
            <summary>设置 BuyApply.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBuyApply.IDSetInt32">
            <summary>设置 BuyApply.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimBuyApply.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBuyApply.AllInstances.BuyCountGet">
            <summary>设置 BuyApply.get_BuyCount() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBuyApply.AllInstances.BuyCountSetInt32">
            <summary>设置 BuyApply.set_BuyCount(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBuyApply.AllInstances.BuyProductGet">
            <summary>设置 BuyApply.get_BuyProduct() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBuyApply.AllInstances.BuyProductSetProduct">
            <summary>设置 BuyApply.set_BuyProduct(Product value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBuyApply.AllInstances.BuyUserGet">
            <summary>设置 BuyApply.get_BuyUser() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBuyApply.AllInstances.BuyUserSetUser">
            <summary>设置 BuyApply.set_BuyUser(User value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBuyApply.AllInstances.IDGet">
            <summary>设置 BuyApply.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBuyApply.AllInstances.IDSetInt32">
            <summary>设置 BuyApply.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimBuyProduct">
            <summary>YunXiu.Model.BuyProduct 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimBuyProduct.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimBuyProduct.#ctor(YunXiu.Model.BuyProduct)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimBuyProduct.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimBuyProduct.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBuyProduct.BProductGet">
            <summary>设置 BuyProduct.get_BProduct() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBuyProduct.BProductSetProduct">
            <summary>设置 BuyProduct.set_BProduct(Product value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBuyProduct.BUserGet">
            <summary>设置 BuyProduct.get_BUser() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBuyProduct.BUserSetUser">
            <summary>设置 BuyProduct.set_BUser(User value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBuyProduct.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBuyProduct.Constructor">
            <summary>设置 BuyProduct.BuyProduct() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBuyProduct.IDGet">
            <summary>设置 BuyProduct.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBuyProduct.IDSetInt32">
            <summary>设置 BuyProduct.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimBuyProduct.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBuyProduct.AllInstances.BProductGet">
            <summary>设置 BuyProduct.get_BProduct() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBuyProduct.AllInstances.BProductSetProduct">
            <summary>设置 BuyProduct.set_BProduct(Product value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBuyProduct.AllInstances.BUserGet">
            <summary>设置 BuyProduct.get_BUser() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBuyProduct.AllInstances.BUserSetUser">
            <summary>设置 BuyProduct.set_BUser(User value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBuyProduct.AllInstances.IDGet">
            <summary>设置 BuyProduct.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimBuyProduct.AllInstances.IDSetInt32">
            <summary>设置 BuyProduct.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimCateAttribute">
            <summary>YunXiu.Model.CateAttribute 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimCateAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimCateAttribute.#ctor(YunXiu.Model.CateAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimCateAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimCateAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCateAttribute.AttrIDGet">
            <summary>设置 CateAttribute.get_AttrID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCateAttribute.AttrIDSetInt32">
            <summary>设置 CateAttribute.set_AttrID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCateAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCateAttribute.CateGet">
            <summary>设置 CateAttribute.get_Cate() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCateAttribute.CateSetCategory">
            <summary>设置 CateAttribute.set_Cate(Category value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCateAttribute.Constructor">
            <summary>设置 CateAttribute.CateAttribute() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCateAttribute.NameGet">
            <summary>设置 CateAttribute.get_Name() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCateAttribute.NameSetString">
            <summary>设置 CateAttribute.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimCateAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCateAttribute.AllInstances.AttrIDGet">
            <summary>设置 CateAttribute.get_AttrID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCateAttribute.AllInstances.AttrIDSetInt32">
            <summary>设置 CateAttribute.set_AttrID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCateAttribute.AllInstances.CateGet">
            <summary>设置 CateAttribute.get_Cate() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCateAttribute.AllInstances.CateSetCategory">
            <summary>设置 CateAttribute.set_Cate(Category value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCateAttribute.AllInstances.NameGet">
            <summary>设置 CateAttribute.get_Name() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCateAttribute.AllInstances.NameSetString">
            <summary>设置 CateAttribute.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimCategory">
            <summary>YunXiu.Model.Category 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimCategory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimCategory.#ctor(YunXiu.Model.Category)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimCategory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimCategory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCategory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCategory.CateIdGet">
            <summary>设置 Category.get_CateId() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCategory.CateIdSetInt32">
            <summary>设置 Category.set_CateId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCategory.Constructor">
            <summary>设置 Category.Category() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCategory.HasChildGet">
            <summary>设置 Category.get_HasChild() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCategory.HasChildSetInt32">
            <summary>设置 Category.set_HasChild(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCategory.LayerGet">
            <summary>设置 Category.get_Layer() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCategory.LayerSetInt32">
            <summary>设置 Category.set_Layer(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCategory.NameGet">
            <summary>设置 Category.get_Name() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCategory.NameSetString">
            <summary>设置 Category.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCategory.ParentIdGet">
            <summary>设置 Category.get_ParentId() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCategory.ParentIdSetInt32">
            <summary>设置 Category.set_ParentId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCategory.PathGet">
            <summary>设置 Category.get_Path() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCategory.PathSetString">
            <summary>设置 Category.set_Path(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCategory.SortGet">
            <summary>设置 Category.get_Sort() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCategory.SortSetInt32">
            <summary>设置 Category.set_Sort(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimCategory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCategory.AllInstances.CateIdGet">
            <summary>设置 Category.get_CateId() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCategory.AllInstances.CateIdSetInt32">
            <summary>设置 Category.set_CateId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCategory.AllInstances.HasChildGet">
            <summary>设置 Category.get_HasChild() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCategory.AllInstances.HasChildSetInt32">
            <summary>设置 Category.set_HasChild(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCategory.AllInstances.LayerGet">
            <summary>设置 Category.get_Layer() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCategory.AllInstances.LayerSetInt32">
            <summary>设置 Category.set_Layer(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCategory.AllInstances.NameGet">
            <summary>设置 Category.get_Name() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCategory.AllInstances.NameSetString">
            <summary>设置 Category.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCategory.AllInstances.ParentIdGet">
            <summary>设置 Category.get_ParentId() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCategory.AllInstances.ParentIdSetInt32">
            <summary>设置 Category.set_ParentId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCategory.AllInstances.PathGet">
            <summary>设置 Category.get_Path() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCategory.AllInstances.PathSetString">
            <summary>设置 Category.set_Path(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCategory.AllInstances.SortGet">
            <summary>设置 Category.get_Sort() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCategory.AllInstances.SortSetInt32">
            <summary>设置 Category.set_Sort(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimCertificate">
            <summary>YunXiu.Model.Certificate 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimCertificate.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimCertificate.#ctor(YunXiu.Model.Certificate)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimCertificate.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimCertificate.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCertificate.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCertificate.Constructor">
            <summary>设置 Certificate.Certificate() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCertificate.IDGet">
            <summary>设置 Certificate.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCertificate.IDSetInt32">
            <summary>设置 Certificate.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCertificate.ImgGet">
            <summary>设置 Certificate.get_Img() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCertificate.ImgSetString">
            <summary>设置 Certificate.set_Img(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCertificate.StoreGet">
            <summary>设置 Certificate.get_Store() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCertificate.StoreSetStore">
            <summary>设置 Certificate.set_Store(Store value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCertificate.TypeGet">
            <summary>设置 Certificate.get_Type() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCertificate.TypeSetCertificateType">
            <summary>设置 Certificate.set_Type(CertificateType value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimCertificate.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCertificate.AllInstances.IDGet">
            <summary>设置 Certificate.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCertificate.AllInstances.IDSetInt32">
            <summary>设置 Certificate.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCertificate.AllInstances.ImgGet">
            <summary>设置 Certificate.get_Img() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCertificate.AllInstances.ImgSetString">
            <summary>设置 Certificate.set_Img(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCertificate.AllInstances.StoreGet">
            <summary>设置 Certificate.get_Store() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCertificate.AllInstances.StoreSetStore">
            <summary>设置 Certificate.set_Store(Store value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCertificate.AllInstances.TypeGet">
            <summary>设置 Certificate.get_Type() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCertificate.AllInstances.TypeSetCertificateType">
            <summary>设置 Certificate.set_Type(CertificateType value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimCertificateType">
            <summary>YunXiu.Model.CertificateType 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimCertificateType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimCertificateType.#ctor(YunXiu.Model.CertificateType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimCertificateType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimCertificateType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCertificateType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCertificateType.Constructor">
            <summary>设置 CertificateType.CertificateType() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCertificateType.IDGet">
            <summary>设置 CertificateType.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCertificateType.IDSetInt32">
            <summary>设置 CertificateType.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCertificateType.TypeNameGet">
            <summary>设置 CertificateType.get_TypeName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCertificateType.TypeNameSetString">
            <summary>设置 CertificateType.set_TypeName(String value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimCertificateType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCertificateType.AllInstances.IDGet">
            <summary>设置 CertificateType.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCertificateType.AllInstances.IDSetInt32">
            <summary>设置 CertificateType.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCertificateType.AllInstances.TypeNameGet">
            <summary>设置 CertificateType.get_TypeName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimCertificateType.AllInstances.TypeNameSetString">
            <summary>设置 CertificateType.set_TypeName(String value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimConsultation">
            <summary>YunXiu.Model.Consultation 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimConsultation.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimConsultation.#ctor(YunXiu.Model.Consultation)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimConsultation.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimConsultation.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultation.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultation.CContentGet">
            <summary>设置 Consultation.get_CContent() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultation.CContentSetString">
            <summary>设置 Consultation.set_CContent(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultation.CProductGet">
            <summary>设置 Consultation.get_CProduct() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultation.CProductSetProduct">
            <summary>设置 Consultation.set_CProduct(Product value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultation.CTypeGet">
            <summary>设置 Consultation.get_CType() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultation.CTypeSetConsultationType">
            <summary>设置 Consultation.set_CType(ConsultationType value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultation.Constructor">
            <summary>设置 Consultation.Consultation() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultation.IDGet">
            <summary>设置 Consultation.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultation.IDSetInt32">
            <summary>设置 Consultation.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimConsultation.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultation.AllInstances.CContentGet">
            <summary>设置 Consultation.get_CContent() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultation.AllInstances.CContentSetString">
            <summary>设置 Consultation.set_CContent(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultation.AllInstances.CProductGet">
            <summary>设置 Consultation.get_CProduct() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultation.AllInstances.CProductSetProduct">
            <summary>设置 Consultation.set_CProduct(Product value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultation.AllInstances.CTypeGet">
            <summary>设置 Consultation.get_CType() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultation.AllInstances.CTypeSetConsultationType">
            <summary>设置 Consultation.set_CType(ConsultationType value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultation.AllInstances.IDGet">
            <summary>设置 Consultation.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultation.AllInstances.IDSetInt32">
            <summary>设置 Consultation.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimConsultationReply">
            <summary>YunXiu.Model.ConsultationReply 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimConsultationReply.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimConsultationReply.#ctor(YunXiu.Model.ConsultationReply)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimConsultationReply.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimConsultationReply.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultationReply.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultationReply.Constructor">
            <summary>设置 ConsultationReply.ConsultationReply() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultationReply.RConsultationGet">
            <summary>设置 ConsultationReply.get_RConsultation() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultationReply.RConsultationSetConsultation">
            <summary>设置 ConsultationReply.set_RConsultation(Consultation value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultationReply.RContentGet">
            <summary>设置 ConsultationReply.get_RContent() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultationReply.RContentSetString">
            <summary>设置 ConsultationReply.set_RContent(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultationReply.RIDGet">
            <summary>设置 ConsultationReply.get_RID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultationReply.RIDSetInt32">
            <summary>设置 ConsultationReply.set_RID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultationReply.RProductGet">
            <summary>设置 ConsultationReply.get_RProduct() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultationReply.RProductSetProduct">
            <summary>设置 ConsultationReply.set_RProduct(Product value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultationReply.RUserGet">
            <summary>设置 ConsultationReply.get_RUser() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultationReply.RUserSetUser">
            <summary>设置 ConsultationReply.set_RUser(User value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimConsultationReply.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultationReply.AllInstances.RConsultationGet">
            <summary>设置 ConsultationReply.get_RConsultation() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultationReply.AllInstances.RConsultationSetConsultation">
            <summary>设置 ConsultationReply.set_RConsultation(Consultation value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultationReply.AllInstances.RContentGet">
            <summary>设置 ConsultationReply.get_RContent() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultationReply.AllInstances.RContentSetString">
            <summary>设置 ConsultationReply.set_RContent(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultationReply.AllInstances.RIDGet">
            <summary>设置 ConsultationReply.get_RID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultationReply.AllInstances.RIDSetInt32">
            <summary>设置 ConsultationReply.set_RID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultationReply.AllInstances.RProductGet">
            <summary>设置 ConsultationReply.get_RProduct() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultationReply.AllInstances.RProductSetProduct">
            <summary>设置 ConsultationReply.set_RProduct(Product value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultationReply.AllInstances.RUserGet">
            <summary>设置 ConsultationReply.get_RUser() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultationReply.AllInstances.RUserSetUser">
            <summary>设置 ConsultationReply.set_RUser(User value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimConsultationResult">
            <summary>YunXiu.Model.ConsultationResult 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimConsultationResult.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimConsultationResult.#ctor(YunXiu.Model.ConsultationResult)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimConsultationResult.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimConsultationResult.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultationResult.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultationResult.Constructor">
            <summary>设置 ConsultationResult.ConsultationResult() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultationResult.ConsultationListGet">
            <summary>设置 ConsultationResult.get_ConsultationList() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultationResult.ConsultationListSetListOfConsultation">
            <summary>设置 ConsultationResult.set_ConsultationList(List`1&lt;Consultation&gt; value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultationResult.ReplyListGet">
            <summary>设置 ConsultationResult.get_ReplyList() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultationResult.ReplyListSetListOfConsultationReply">
            <summary>设置 ConsultationResult.set_ReplyList(List`1&lt;ConsultationReply&gt; value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimConsultationResult.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultationResult.AllInstances.ConsultationListGet">
            <summary>设置 ConsultationResult.get_ConsultationList() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultationResult.AllInstances.ConsultationListSetListOfConsultation">
            <summary>设置 ConsultationResult.set_ConsultationList(List`1&lt;Consultation&gt; value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultationResult.AllInstances.ReplyListGet">
            <summary>设置 ConsultationResult.get_ReplyList() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultationResult.AllInstances.ReplyListSetListOfConsultationReply">
            <summary>设置 ConsultationResult.set_ReplyList(List`1&lt;ConsultationReply&gt; value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimConsultationType">
            <summary>YunXiu.Model.ConsultationType 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimConsultationType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimConsultationType.#ctor(YunXiu.Model.ConsultationType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimConsultationType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimConsultationType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultationType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultationType.CTypeNameGet">
            <summary>设置 ConsultationType.get_CTypeName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultationType.CTypeNameSetString">
            <summary>设置 ConsultationType.set_CTypeName(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultationType.Constructor">
            <summary>设置 ConsultationType.ConsultationType() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultationType.IDGet">
            <summary>设置 ConsultationType.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultationType.IDSetInt32">
            <summary>设置 ConsultationType.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimConsultationType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultationType.AllInstances.CTypeNameGet">
            <summary>设置 ConsultationType.get_CTypeName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultationType.AllInstances.CTypeNameSetString">
            <summary>设置 ConsultationType.set_CTypeName(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultationType.AllInstances.IDGet">
            <summary>设置 ConsultationType.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimConsultationType.AllInstances.IDSetInt32">
            <summary>设置 ConsultationType.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimExtTable">
            <summary>YunXiu.Model.ExtTable 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimExtTable.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimExtTable.#ctor(YunXiu.Model.ExtTable)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimExtTable.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimExtTable.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimExtTable.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimExtTable.Constructor">
            <summary>设置 ExtTable.ExtTable() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimExtTable.ContantIdGet">
            <summary>设置 ExtTable.get_ContantId() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimExtTable.ContantIdSetInt32">
            <summary>设置 ExtTable.set_ContantId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimExtTable.ContantTableNameGet">
            <summary>设置 ExtTable.get_ContantTableName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimExtTable.ContantTableNameSetString">
            <summary>设置 ExtTable.set_ContantTableName(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimExtTable.CreateUidGet">
            <summary>设置 ExtTable.get_CreateUid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimExtTable.CreateUidSetInt32">
            <summary>设置 ExtTable.set_CreateUid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimExtTable.ExtIdGet">
            <summary>设置 ExtTable.get_ExtId() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimExtTable.ExtIdSetInt32">
            <summary>设置 ExtTable.set_ExtId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimExtTable.ExtNameGet">
            <summary>设置 ExtTable.get_ExtName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimExtTable.ExtNameSetString">
            <summary>设置 ExtTable.set_ExtName(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimExtTable.ExtValueGet">
            <summary>设置 ExtTable.get_ExtValue() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimExtTable.ExtValueSetString">
            <summary>设置 ExtTable.set_ExtValue(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimExtTable.LastUpdateUidGet">
            <summary>设置 ExtTable.get_LastUpdateUid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimExtTable.LastUpdateUidSetInt32">
            <summary>设置 ExtTable.set_LastUpdateUid(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimExtTable.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimExtTable.AllInstances.ContantIdGet">
            <summary>设置 ExtTable.get_ContantId() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimExtTable.AllInstances.ContantIdSetInt32">
            <summary>设置 ExtTable.set_ContantId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimExtTable.AllInstances.ContantTableNameGet">
            <summary>设置 ExtTable.get_ContantTableName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimExtTable.AllInstances.ContantTableNameSetString">
            <summary>设置 ExtTable.set_ContantTableName(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimExtTable.AllInstances.CreateUidGet">
            <summary>设置 ExtTable.get_CreateUid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimExtTable.AllInstances.CreateUidSetInt32">
            <summary>设置 ExtTable.set_CreateUid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimExtTable.AllInstances.ExtIdGet">
            <summary>设置 ExtTable.get_ExtId() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimExtTable.AllInstances.ExtIdSetInt32">
            <summary>设置 ExtTable.set_ExtId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimExtTable.AllInstances.ExtNameGet">
            <summary>设置 ExtTable.get_ExtName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimExtTable.AllInstances.ExtNameSetString">
            <summary>设置 ExtTable.set_ExtName(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimExtTable.AllInstances.ExtValueGet">
            <summary>设置 ExtTable.get_ExtValue() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimExtTable.AllInstances.ExtValueSetString">
            <summary>设置 ExtTable.set_ExtValue(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimExtTable.AllInstances.LastUpdateUidGet">
            <summary>设置 ExtTable.get_LastUpdateUid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimExtTable.AllInstances.LastUpdateUidSetInt32">
            <summary>设置 ExtTable.set_LastUpdateUid(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimFavoriteProduct">
            <summary>YunXiu.Model.FavoriteProduct 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimFavoriteProduct.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimFavoriteProduct.#ctor(YunXiu.Model.FavoriteProduct)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimFavoriteProduct.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimFavoriteProduct.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimFavoriteProduct.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimFavoriteProduct.Constructor">
            <summary>设置 FavoriteProduct.FavoriteProduct() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimFavoriteProduct.FIDGet">
            <summary>设置 FavoriteProduct.get_FID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimFavoriteProduct.FIDSetInt32">
            <summary>设置 FavoriteProduct.set_FID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimFavoriteProduct.FProductGet">
            <summary>设置 FavoriteProduct.get_FProduct() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimFavoriteProduct.FProductSetProduct">
            <summary>设置 FavoriteProduct.set_FProduct(Product value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimFavoriteProduct.FUserGet">
            <summary>设置 FavoriteProduct.get_FUser() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimFavoriteProduct.FUserSetUser">
            <summary>设置 FavoriteProduct.set_FUser(User value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimFavoriteProduct.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimFavoriteProduct.AllInstances.FIDGet">
            <summary>设置 FavoriteProduct.get_FID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimFavoriteProduct.AllInstances.FIDSetInt32">
            <summary>设置 FavoriteProduct.set_FID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimFavoriteProduct.AllInstances.FProductGet">
            <summary>设置 FavoriteProduct.get_FProduct() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimFavoriteProduct.AllInstances.FProductSetProduct">
            <summary>设置 FavoriteProduct.set_FProduct(Product value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimFavoriteProduct.AllInstances.FUserGet">
            <summary>设置 FavoriteProduct.get_FUser() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimFavoriteProduct.AllInstances.FUserSetUser">
            <summary>设置 FavoriteProduct.set_FUser(User value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimFavoriteProductModel">
            <summary>YunXiu.Model.FavoriteProductModel 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimFavoriteProductModel.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimFavoriteProductModel.#ctor(YunXiu.Model.FavoriteProductModel)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimFavoriteProductModel.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimFavoriteProductModel.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimFavoriteProductModel.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimFavoriteProductModel.Constructor">
            <summary>设置 FavoriteProductModel.FavoriteProductModel() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimFavoriteProductModel.TotalCountGet">
            <summary>设置 FavoriteProductModel.get_TotalCount() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimFavoriteProductModel.TotalCountSetInt32">
            <summary>设置 FavoriteProductModel.set_TotalCount(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimFavoriteProductModel.lssGet">
            <summary>设置 FavoriteProductModel.get_lss() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimFavoriteProductModel.lssSetListOfFavoriteProduct">
            <summary>设置 FavoriteProductModel.set_lss(List`1&lt;FavoriteProduct&gt; value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimFavoriteProductModel.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimFavoriteProductModel.AllInstances.TotalCountGet">
            <summary>设置 FavoriteProductModel.get_TotalCount() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimFavoriteProductModel.AllInstances.TotalCountSetInt32">
            <summary>设置 FavoriteProductModel.set_TotalCount(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimFavoriteProductModel.AllInstances.lssGet">
            <summary>设置 FavoriteProductModel.get_lss() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimFavoriteProductModel.AllInstances.lssSetListOfFavoriteProduct">
            <summary>设置 FavoriteProductModel.set_lss(List`1&lt;FavoriteProduct&gt; value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimFavoriteStore">
            <summary>YunXiu.Model.FavoriteStore 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimFavoriteStore.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimFavoriteStore.#ctor(YunXiu.Model.FavoriteStore)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimFavoriteStore.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimFavoriteStore.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimFavoriteStore.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimFavoriteStore.Constructor">
            <summary>设置 FavoriteStore.FavoriteStore() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimFavoriteStore.FIDGet">
            <summary>设置 FavoriteStore.get_FID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimFavoriteStore.FIDSetInt32">
            <summary>设置 FavoriteStore.set_FID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimFavoriteStore.StoreGet">
            <summary>设置 FavoriteStore.get_Store() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimFavoriteStore.StoreSetStore">
            <summary>设置 FavoriteStore.set_Store(Store value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimFavoriteStore.UserGet">
            <summary>设置 FavoriteStore.get_User() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimFavoriteStore.UserSetUser">
            <summary>设置 FavoriteStore.set_User(User value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimFavoriteStore.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimFavoriteStore.AllInstances.FIDGet">
            <summary>设置 FavoriteStore.get_FID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimFavoriteStore.AllInstances.FIDSetInt32">
            <summary>设置 FavoriteStore.set_FID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimFavoriteStore.AllInstances.StoreGet">
            <summary>设置 FavoriteStore.get_Store() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimFavoriteStore.AllInstances.StoreSetStore">
            <summary>设置 FavoriteStore.set_Store(Store value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimFavoriteStore.AllInstances.UserGet">
            <summary>设置 FavoriteStore.get_User() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimFavoriteStore.AllInstances.UserSetUser">
            <summary>设置 FavoriteStore.set_User(User value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimFavoriteStoreModel">
            <summary>YunXiu.Model.FavoriteStoreModel 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimFavoriteStoreModel.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimFavoriteStoreModel.#ctor(YunXiu.Model.FavoriteStoreModel)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimFavoriteStoreModel.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimFavoriteStoreModel.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimFavoriteStoreModel.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimFavoriteStoreModel.Constructor">
            <summary>设置 FavoriteStoreModel.FavoriteStoreModel() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimFavoriteStoreModel.TotalCountGet">
            <summary>设置 FavoriteStoreModel.get_TotalCount() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimFavoriteStoreModel.TotalCountSetInt32">
            <summary>设置 FavoriteStoreModel.set_TotalCount(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimFavoriteStoreModel.lssGet">
            <summary>设置 FavoriteStoreModel.get_lss() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimFavoriteStoreModel.lssSetListOfFavoriteStore">
            <summary>设置 FavoriteStoreModel.set_lss(List`1&lt;FavoriteStore&gt; value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimFavoriteStoreModel.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimFavoriteStoreModel.AllInstances.TotalCountGet">
            <summary>设置 FavoriteStoreModel.get_TotalCount() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimFavoriteStoreModel.AllInstances.TotalCountSetInt32">
            <summary>设置 FavoriteStoreModel.set_TotalCount(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimFavoriteStoreModel.AllInstances.lssGet">
            <summary>设置 FavoriteStoreModel.get_lss() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimFavoriteStoreModel.AllInstances.lssSetListOfFavoriteStore">
            <summary>设置 FavoriteStoreModel.set_lss(List`1&lt;FavoriteStore&gt; value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimInvoice">
            <summary>YunXiu.Model.Invoice 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimInvoice.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimInvoice.#ctor(YunXiu.Model.Invoice)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimInvoice.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimInvoice.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimInvoice.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimInvoice.Constructor">
            <summary>设置 Invoice.Invoice() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimInvoice.IDGet">
            <summary>设置 Invoice.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimInvoice.IDSetInt32">
            <summary>设置 Invoice.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimInvoice.LogisticCodeGet">
            <summary>设置 Invoice.get_LogisticCode() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimInvoice.LogisticCodeSetString">
            <summary>设置 Invoice.set_LogisticCode(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimInvoice.OrderGet">
            <summary>设置 Invoice.get_Order() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimInvoice.OrderSetOrder">
            <summary>设置 Invoice.set_Order(Order value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimInvoice.ShipperCodeGet">
            <summary>设置 Invoice.get_ShipperCode() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimInvoice.ShipperCodeSetString">
            <summary>设置 Invoice.set_ShipperCode(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimInvoice.StoreGet">
            <summary>设置 Invoice.get_Store() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimInvoice.StoreSetStore">
            <summary>设置 Invoice.set_Store(Store value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimInvoice.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimInvoice.AllInstances.IDGet">
            <summary>设置 Invoice.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimInvoice.AllInstances.IDSetInt32">
            <summary>设置 Invoice.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimInvoice.AllInstances.LogisticCodeGet">
            <summary>设置 Invoice.get_LogisticCode() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimInvoice.AllInstances.LogisticCodeSetString">
            <summary>设置 Invoice.set_LogisticCode(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimInvoice.AllInstances.OrderGet">
            <summary>设置 Invoice.get_Order() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimInvoice.AllInstances.OrderSetOrder">
            <summary>设置 Invoice.set_Order(Order value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimInvoice.AllInstances.ShipperCodeGet">
            <summary>设置 Invoice.get_ShipperCode() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimInvoice.AllInstances.ShipperCodeSetString">
            <summary>设置 Invoice.set_ShipperCode(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimInvoice.AllInstances.StoreGet">
            <summary>设置 Invoice.get_Store() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimInvoice.AllInstances.StoreSetStore">
            <summary>设置 Invoice.set_Store(Store value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimLoginInfo">
            <summary>YunXiu.Model.LoginInfo 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimLoginInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimLoginInfo.#ctor(YunXiu.Model.LoginInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimLoginInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimLoginInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLoginInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLoginInfo.Constructor">
            <summary>设置 LoginInfo.LoginInfo() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLoginInfo.LoginStateGet">
            <summary>设置 LoginInfo.get_LoginState() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLoginInfo.LoginStateSetInt32">
            <summary>设置 LoginInfo.set_LoginState(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLoginInfo.UserGet">
            <summary>设置 LoginInfo.get_User() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLoginInfo.UserSetUser">
            <summary>设置 LoginInfo.set_User(User value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimLoginInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLoginInfo.AllInstances.LoginStateGet">
            <summary>设置 LoginInfo.get_LoginState() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLoginInfo.AllInstances.LoginStateSetInt32">
            <summary>设置 LoginInfo.set_LoginState(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLoginInfo.AllInstances.UserGet">
            <summary>设置 LoginInfo.get_User() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLoginInfo.AllInstances.UserSetUser">
            <summary>设置 LoginInfo.set_User(User value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimLoginfaillogs">
            <summary>YunXiu.Model.Loginfaillogs 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimLoginfaillogs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimLoginfaillogs.#ctor(YunXiu.Model.Loginfaillogs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimLoginfaillogs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimLoginfaillogs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLoginfaillogs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLoginfaillogs.Constructor">
            <summary>设置 Loginfaillogs.Loginfaillogs() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLoginfaillogs.failtimesGet">
            <summary>设置 Loginfaillogs.get_failtimes() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLoginfaillogs.failtimesSetInt32">
            <summary>设置 Loginfaillogs.set_failtimes(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLoginfaillogs.idGet">
            <summary>设置 Loginfaillogs.get_id() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLoginfaillogs.idSetInt32">
            <summary>设置 Loginfaillogs.set_id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLoginfaillogs.lastlogintimeGet">
            <summary>设置 Loginfaillogs.get_lastlogintime() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLoginfaillogs.lastlogintimeSetDateTime">
            <summary>设置 Loginfaillogs.set_lastlogintime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLoginfaillogs.loginipGet">
            <summary>设置 Loginfaillogs.get_loginip() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLoginfaillogs.loginipSetInt32">
            <summary>设置 Loginfaillogs.set_loginip(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimLoginfaillogs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLoginfaillogs.AllInstances.failtimesGet">
            <summary>设置 Loginfaillogs.get_failtimes() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLoginfaillogs.AllInstances.failtimesSetInt32">
            <summary>设置 Loginfaillogs.set_failtimes(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLoginfaillogs.AllInstances.idGet">
            <summary>设置 Loginfaillogs.get_id() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLoginfaillogs.AllInstances.idSetInt32">
            <summary>设置 Loginfaillogs.set_id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLoginfaillogs.AllInstances.lastlogintimeGet">
            <summary>设置 Loginfaillogs.get_lastlogintime() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLoginfaillogs.AllInstances.lastlogintimeSetDateTime">
            <summary>设置 Loginfaillogs.set_lastlogintime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLoginfaillogs.AllInstances.loginipGet">
            <summary>设置 Loginfaillogs.get_loginip() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLoginfaillogs.AllInstances.loginipSetInt32">
            <summary>设置 Loginfaillogs.set_loginip(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimLogistics">
            <summary>YunXiu.Model.Logistics 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimLogistics.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimLogistics.#ctor(YunXiu.Model.Logistics)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimLogistics.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimLogistics.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLogistics.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLogistics.Constructor">
            <summary>设置 Logistics.Logistics() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLogistics.EBusinessIDGet">
            <summary>设置 Logistics.get_EBusinessID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLogistics.EBusinessIDSetString">
            <summary>设置 Logistics.set_EBusinessID(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLogistics.IDGet">
            <summary>设置 Logistics.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLogistics.IDSetInt32">
            <summary>设置 Logistics.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLogistics.LogisticCodeGet">
            <summary>设置 Logistics.get_LogisticCode() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLogistics.LogisticCodeSetString">
            <summary>设置 Logistics.set_LogisticCode(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLogistics.OrderCodeGet">
            <summary>设置 Logistics.get_OrderCode() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLogistics.OrderCodeSetString">
            <summary>设置 Logistics.set_OrderCode(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLogistics.ReasonGet">
            <summary>设置 Logistics.get_Reason() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLogistics.ReasonSetString">
            <summary>设置 Logistics.set_Reason(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLogistics.ShipperCodeGet">
            <summary>设置 Logistics.get_ShipperCode() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLogistics.ShipperCodeSetString">
            <summary>设置 Logistics.set_ShipperCode(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLogistics.StateGet">
            <summary>设置 Logistics.get_State() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLogistics.StateSetString">
            <summary>设置 Logistics.set_State(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLogistics.SuccessGet">
            <summary>设置 Logistics.get_Success() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLogistics.SuccessSetBoolean">
            <summary>设置 Logistics.set_Success(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLogistics.TracesGet">
            <summary>设置 Logistics.get_Traces() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLogistics.TracesSetListOfTrace">
            <summary>设置 Logistics.set_Traces(List`1&lt;Trace&gt; value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimLogistics.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLogistics.AllInstances.EBusinessIDGet">
            <summary>设置 Logistics.get_EBusinessID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLogistics.AllInstances.EBusinessIDSetString">
            <summary>设置 Logistics.set_EBusinessID(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLogistics.AllInstances.IDGet">
            <summary>设置 Logistics.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLogistics.AllInstances.IDSetInt32">
            <summary>设置 Logistics.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLogistics.AllInstances.LogisticCodeGet">
            <summary>设置 Logistics.get_LogisticCode() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLogistics.AllInstances.LogisticCodeSetString">
            <summary>设置 Logistics.set_LogisticCode(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLogistics.AllInstances.OrderCodeGet">
            <summary>设置 Logistics.get_OrderCode() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLogistics.AllInstances.OrderCodeSetString">
            <summary>设置 Logistics.set_OrderCode(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLogistics.AllInstances.ReasonGet">
            <summary>设置 Logistics.get_Reason() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLogistics.AllInstances.ReasonSetString">
            <summary>设置 Logistics.set_Reason(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLogistics.AllInstances.ShipperCodeGet">
            <summary>设置 Logistics.get_ShipperCode() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLogistics.AllInstances.ShipperCodeSetString">
            <summary>设置 Logistics.set_ShipperCode(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLogistics.AllInstances.StateGet">
            <summary>设置 Logistics.get_State() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLogistics.AllInstances.StateSetString">
            <summary>设置 Logistics.set_State(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLogistics.AllInstances.SuccessGet">
            <summary>设置 Logistics.get_Success() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLogistics.AllInstances.SuccessSetBoolean">
            <summary>设置 Logistics.set_Success(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLogistics.AllInstances.TracesGet">
            <summary>设置 Logistics.get_Traces() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimLogistics.AllInstances.TracesSetListOfTrace">
            <summary>设置 Logistics.set_Traces(List`1&lt;Trace&gt; value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimMessageTb">
            <summary>YunXiu.Model.MessageTb 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimMessageTb.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimMessageTb.#ctor(YunXiu.Model.MessageTb)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimMessageTb.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimMessageTb.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimMessageTb.AttachmentGet">
            <summary>设置 MessageTb.get_Attachment() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimMessageTb.AttachmentSetString">
            <summary>设置 MessageTb.set_Attachment(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimMessageTb.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimMessageTb.Constructor">
            <summary>设置 MessageTb.MessageTb() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimMessageTb.CreateUidGet">
            <summary>设置 MessageTb.get_CreateUid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimMessageTb.CreateUidSetInt32">
            <summary>设置 MessageTb.set_CreateUid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimMessageTb.DeleteFlagGet">
            <summary>设置 MessageTb.get_DeleteFlag() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimMessageTb.DeleteFlagSetInt32">
            <summary>设置 MessageTb.set_DeleteFlag(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimMessageTb.IsReplyGet">
            <summary>设置 MessageTb.get_IsReply() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimMessageTb.IsReplySetInt32">
            <summary>设置 MessageTb.set_IsReply(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimMessageTb.LastUpdateUIdGet">
            <summary>设置 MessageTb.get_LastUpdateUId() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimMessageTb.LastUpdateUIdSetInt32">
            <summary>设置 MessageTb.set_LastUpdateUId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimMessageTb.MessageBodyGet">
            <summary>设置 MessageTb.get_MessageBody() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimMessageTb.MessageBodySetString">
            <summary>设置 MessageTb.set_MessageBody(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimMessageTb.MessageToUIdGet">
            <summary>设置 MessageTb.get_MessageToUId() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimMessageTb.MessageToUIdSetInt32">
            <summary>设置 MessageTb.set_MessageToUId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimMessageTb.MidGet">
            <summary>设置 MessageTb.get_Mid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimMessageTb.MidSetInt32">
            <summary>设置 MessageTb.set_Mid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimMessageTb.PMidGet">
            <summary>设置 MessageTb.get_PMid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimMessageTb.PMidSetInt32">
            <summary>设置 MessageTb.set_PMid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimMessageTb.TitleGet">
            <summary>设置 MessageTb.get_Title() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimMessageTb.TitleSetString">
            <summary>设置 MessageTb.set_Title(String value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimMessageTb.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimMessageTb.AllInstances.AttachmentGet">
            <summary>设置 MessageTb.get_Attachment() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimMessageTb.AllInstances.AttachmentSetString">
            <summary>设置 MessageTb.set_Attachment(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimMessageTb.AllInstances.CreateUidGet">
            <summary>设置 MessageTb.get_CreateUid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimMessageTb.AllInstances.CreateUidSetInt32">
            <summary>设置 MessageTb.set_CreateUid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimMessageTb.AllInstances.DeleteFlagGet">
            <summary>设置 MessageTb.get_DeleteFlag() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimMessageTb.AllInstances.DeleteFlagSetInt32">
            <summary>设置 MessageTb.set_DeleteFlag(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimMessageTb.AllInstances.IsReplyGet">
            <summary>设置 MessageTb.get_IsReply() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimMessageTb.AllInstances.IsReplySetInt32">
            <summary>设置 MessageTb.set_IsReply(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimMessageTb.AllInstances.LastUpdateUIdGet">
            <summary>设置 MessageTb.get_LastUpdateUId() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimMessageTb.AllInstances.LastUpdateUIdSetInt32">
            <summary>设置 MessageTb.set_LastUpdateUId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimMessageTb.AllInstances.MessageBodyGet">
            <summary>设置 MessageTb.get_MessageBody() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimMessageTb.AllInstances.MessageBodySetString">
            <summary>设置 MessageTb.set_MessageBody(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimMessageTb.AllInstances.MessageToUIdGet">
            <summary>设置 MessageTb.get_MessageToUId() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimMessageTb.AllInstances.MessageToUIdSetInt32">
            <summary>设置 MessageTb.set_MessageToUId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimMessageTb.AllInstances.MidGet">
            <summary>设置 MessageTb.get_Mid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimMessageTb.AllInstances.MidSetInt32">
            <summary>设置 MessageTb.set_Mid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimMessageTb.AllInstances.PMidGet">
            <summary>设置 MessageTb.get_PMid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimMessageTb.AllInstances.PMidSetInt32">
            <summary>设置 MessageTb.set_PMid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimMessageTb.AllInstances.TitleGet">
            <summary>设置 MessageTb.get_Title() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimMessageTb.AllInstances.TitleSetString">
            <summary>设置 MessageTb.set_Title(String value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimOrder">
            <summary>YunXiu.Model.Order 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimOrder.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimOrder.#ctor(YunXiu.Model.Order)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimOrder.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimOrder.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOrder.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOrder.BuyNumberGet">
            <summary>设置 Order.get_BuyNumber() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOrder.BuyNumberSetInt32">
            <summary>设置 Order.set_BuyNumber(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOrder.BuyProductGet">
            <summary>设置 Order.get_BuyProduct() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOrder.BuyProductSetProduct">
            <summary>设置 Order.set_BuyProduct(Product value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOrder.BuyUnitPriceGet">
            <summary>设置 Order.get_BuyUnitPrice() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOrder.BuyUnitPriceSetDecimal">
            <summary>设置 Order.set_BuyUnitPrice(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOrder.BuyUserGet">
            <summary>设置 Order.get_BuyUser() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOrder.BuyUserSetUser">
            <summary>设置 Order.set_BuyUser(User value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOrder.Constructor">
            <summary>设置 Order.Order() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOrder.OIDGet">
            <summary>设置 Order.get_OID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOrder.OIDSetInt32">
            <summary>设置 Order.set_OID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOrder.OSNGet">
            <summary>设置 Order.get_OSN() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOrder.OSNSetString">
            <summary>设置 Order.set_OSN(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOrder.OrderStateGet">
            <summary>设置 Order.get_OrderState() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOrder.OrderStateSetInt32">
            <summary>设置 Order.set_OrderState(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOrder.ReceiptAddressGet">
            <summary>设置 Order.get_ReceiptAddress() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOrder.ReceiptAddressSetReceiptAddress">
            <summary>设置 Order.set_ReceiptAddress(ReceiptAddress value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimOrder.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOrder.AllInstances.BuyNumberGet">
            <summary>设置 Order.get_BuyNumber() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOrder.AllInstances.BuyNumberSetInt32">
            <summary>设置 Order.set_BuyNumber(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOrder.AllInstances.BuyProductGet">
            <summary>设置 Order.get_BuyProduct() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOrder.AllInstances.BuyProductSetProduct">
            <summary>设置 Order.set_BuyProduct(Product value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOrder.AllInstances.BuyUnitPriceGet">
            <summary>设置 Order.get_BuyUnitPrice() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOrder.AllInstances.BuyUnitPriceSetDecimal">
            <summary>设置 Order.set_BuyUnitPrice(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOrder.AllInstances.BuyUserGet">
            <summary>设置 Order.get_BuyUser() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOrder.AllInstances.BuyUserSetUser">
            <summary>设置 Order.set_BuyUser(User value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOrder.AllInstances.OIDGet">
            <summary>设置 Order.get_OID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOrder.AllInstances.OIDSetInt32">
            <summary>设置 Order.set_OID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOrder.AllInstances.OSNGet">
            <summary>设置 Order.get_OSN() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOrder.AllInstances.OSNSetString">
            <summary>设置 Order.set_OSN(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOrder.AllInstances.OrderStateGet">
            <summary>设置 Order.get_OrderState() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOrder.AllInstances.OrderStateSetInt32">
            <summary>设置 Order.set_OrderState(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOrder.AllInstances.ReceiptAddressGet">
            <summary>设置 Order.get_ReceiptAddress() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOrder.AllInstances.ReceiptAddressSetReceiptAddress">
            <summary>设置 Order.set_ReceiptAddress(ReceiptAddress value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimOrderPayOrder">
            <summary>YunXiu.Model.OrderPayOrder 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimOrderPayOrder.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimOrderPayOrder.#ctor(YunXiu.Model.OrderPayOrder)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimOrderPayOrder.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimOrderPayOrder.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOrderPayOrder.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOrderPayOrder.Constructor">
            <summary>设置 OrderPayOrder.OrderPayOrder() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOrderPayOrder.IDGet">
            <summary>设置 OrderPayOrder.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOrderPayOrder.IDSetInt32">
            <summary>设置 OrderPayOrder.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOrderPayOrder.OrderGet">
            <summary>设置 OrderPayOrder.get_Order() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOrderPayOrder.OrderSetOrder">
            <summary>设置 OrderPayOrder.set_Order(Order value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOrderPayOrder.PayOrderGet">
            <summary>设置 OrderPayOrder.get_PayOrder() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOrderPayOrder.PayOrderSetPayOrder">
            <summary>设置 OrderPayOrder.set_PayOrder(PayOrder value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimOrderPayOrder.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOrderPayOrder.AllInstances.IDGet">
            <summary>设置 OrderPayOrder.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOrderPayOrder.AllInstances.IDSetInt32">
            <summary>设置 OrderPayOrder.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOrderPayOrder.AllInstances.OrderGet">
            <summary>设置 OrderPayOrder.get_Order() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOrderPayOrder.AllInstances.OrderSetOrder">
            <summary>设置 OrderPayOrder.set_Order(Order value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOrderPayOrder.AllInstances.PayOrderGet">
            <summary>设置 OrderPayOrder.get_PayOrder() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOrderPayOrder.AllInstances.PayOrderSetPayOrder">
            <summary>设置 OrderPayOrder.set_PayOrder(PayOrder value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimOutStore">
            <summary>YunXiu.Model.OutStore 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimOutStore.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimOutStore.#ctor(YunXiu.Model.OutStore)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimOutStore.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimOutStore.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOutStore.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOutStore.Constructor">
            <summary>设置 OutStore.OutStore() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOutStore.IDGet">
            <summary>设置 OutStore.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOutStore.IDSetInt32">
            <summary>设置 OutStore.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOutStore.NumberGet">
            <summary>设置 OutStore.get_Number() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOutStore.NumberSetInt32">
            <summary>设置 OutStore.set_Number(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOutStore.ProductGet">
            <summary>设置 OutStore.get_Product() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOutStore.ProductSetProduct">
            <summary>设置 OutStore.set_Product(Product value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimOutStore.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOutStore.AllInstances.IDGet">
            <summary>设置 OutStore.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOutStore.AllInstances.IDSetInt32">
            <summary>设置 OutStore.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOutStore.AllInstances.NumberGet">
            <summary>设置 OutStore.get_Number() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOutStore.AllInstances.NumberSetInt32">
            <summary>设置 OutStore.set_Number(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOutStore.AllInstances.ProductGet">
            <summary>设置 OutStore.get_Product() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimOutStore.AllInstances.ProductSetProduct">
            <summary>设置 OutStore.set_Product(Product value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimPageResult`1">
            <summary>YunXiu.Model.PageResult`1 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimPageResult`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimPageResult`1.#ctor(YunXiu.Model.PageResult{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimPageResult`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimPageResult`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPageResult`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPageResult`1.Constructor">
            <summary>设置 PageResult`1.PageResult`1() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPageResult`1.PageIndexGet">
            <summary>设置 PageResult`1.get_PageIndex() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPageResult`1.PageIndexSetInt32">
            <summary>设置 PageResult`1.set_PageIndex(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPageResult`1.ResultListGet">
            <summary>设置 PageResult`1.get_ResultList() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPageResult`1.ResultListSetListOfT0">
            <summary>设置 PageResult`1.set_ResultList(List`1&lt;!0&gt; value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPageResult`1.TotalCountGet">
            <summary>设置 PageResult`1.get_TotalCount() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPageResult`1.TotalCountSetInt32">
            <summary>设置 PageResult`1.set_TotalCount(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimPageResult`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPageResult`1.AllInstances.PageIndexGet">
            <summary>设置 PageResult`1.get_PageIndex() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPageResult`1.AllInstances.PageIndexSetInt32">
            <summary>设置 PageResult`1.set_PageIndex(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPageResult`1.AllInstances.ResultListGet">
            <summary>设置 PageResult`1.get_ResultList() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPageResult`1.AllInstances.ResultListSetListOfT0">
            <summary>设置 PageResult`1.set_ResultList(List`1&lt;!0&gt; value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPageResult`1.AllInstances.TotalCountGet">
            <summary>设置 PageResult`1.get_TotalCount() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPageResult`1.AllInstances.TotalCountSetInt32">
            <summary>设置 PageResult`1.set_TotalCount(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimPayOrder">
            <summary>YunXiu.Model.PayOrder 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimPayOrder.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimPayOrder.#ctor(YunXiu.Model.PayOrder)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimPayOrder.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimPayOrder.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPayOrder.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPayOrder.BuyUserGet">
            <summary>设置 PayOrder.get_BuyUser() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPayOrder.BuyUserSetUser">
            <summary>设置 PayOrder.set_BuyUser(User value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPayOrder.Constructor">
            <summary>设置 PayOrder.PayOrder() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPayOrder.DescribeGet">
            <summary>设置 PayOrder.get_Describe() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPayOrder.DescribeSetString">
            <summary>设置 PayOrder.set_Describe(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPayOrder.IDGet">
            <summary>设置 PayOrder.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPayOrder.IDSetInt32">
            <summary>设置 PayOrder.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPayOrder.OrdersGet">
            <summary>设置 PayOrder.get_Orders() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPayOrder.OrdersSetListOfOrder">
            <summary>设置 PayOrder.set_Orders(List`1&lt;Order&gt; value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPayOrder.PayAmountGet">
            <summary>设置 PayOrder.get_PayAmount() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPayOrder.PayAmountSetDecimal">
            <summary>设置 PayOrder.set_PayAmount(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPayOrder.PayOrderNoGet">
            <summary>设置 PayOrder.get_PayOrderNo() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPayOrder.PayOrderNoSetString">
            <summary>设置 PayOrder.set_PayOrderNo(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPayOrder.PayTypeGet">
            <summary>设置 PayOrder.get_PayType() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPayOrder.PayTypeSetString">
            <summary>设置 PayOrder.set_PayType(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPayOrder.TradeStatusGet">
            <summary>设置 PayOrder.get_TradeStatus() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPayOrder.TradeStatusSetString">
            <summary>设置 PayOrder.set_TradeStatus(String value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimPayOrder.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPayOrder.AllInstances.BuyUserGet">
            <summary>设置 PayOrder.get_BuyUser() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPayOrder.AllInstances.BuyUserSetUser">
            <summary>设置 PayOrder.set_BuyUser(User value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPayOrder.AllInstances.DescribeGet">
            <summary>设置 PayOrder.get_Describe() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPayOrder.AllInstances.DescribeSetString">
            <summary>设置 PayOrder.set_Describe(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPayOrder.AllInstances.IDGet">
            <summary>设置 PayOrder.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPayOrder.AllInstances.IDSetInt32">
            <summary>设置 PayOrder.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPayOrder.AllInstances.OrdersGet">
            <summary>设置 PayOrder.get_Orders() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPayOrder.AllInstances.OrdersSetListOfOrder">
            <summary>设置 PayOrder.set_Orders(List`1&lt;Order&gt; value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPayOrder.AllInstances.PayAmountGet">
            <summary>设置 PayOrder.get_PayAmount() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPayOrder.AllInstances.PayAmountSetDecimal">
            <summary>设置 PayOrder.set_PayAmount(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPayOrder.AllInstances.PayOrderNoGet">
            <summary>设置 PayOrder.get_PayOrderNo() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPayOrder.AllInstances.PayOrderNoSetString">
            <summary>设置 PayOrder.set_PayOrderNo(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPayOrder.AllInstances.PayTypeGet">
            <summary>设置 PayOrder.get_PayType() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPayOrder.AllInstances.PayTypeSetString">
            <summary>设置 PayOrder.set_PayType(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPayOrder.AllInstances.TradeStatusGet">
            <summary>设置 PayOrder.get_TradeStatus() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPayOrder.AllInstances.TradeStatusSetString">
            <summary>设置 PayOrder.set_TradeStatus(String value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimPermission">
            <summary>YunXiu.Model.Permission 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimPermission.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimPermission.#ctor(YunXiu.Model.Permission)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimPermission.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimPermission.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPermission.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPermission.Constructor">
            <summary>设置 Permission.Permission() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPermission.DescribeGet">
            <summary>设置 Permission.get_Describe() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPermission.DescribeSetString">
            <summary>设置 Permission.set_Describe(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPermission.PIDGet">
            <summary>设置 Permission.get_PID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPermission.PIDSetInt32">
            <summary>设置 Permission.set_PID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPermission.PKeyGet">
            <summary>设置 Permission.get_PKey() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPermission.PKeySetString">
            <summary>设置 Permission.set_PKey(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPermission.PNameGet">
            <summary>设置 Permission.get_PName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPermission.PNameSetString">
            <summary>设置 Permission.set_PName(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPermission.PTypeGet">
            <summary>设置 Permission.get_PType() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPermission.PTypeSetPermissionType">
            <summary>设置 Permission.set_PType(PermissionType value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimPermission.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPermission.AllInstances.DescribeGet">
            <summary>设置 Permission.get_Describe() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPermission.AllInstances.DescribeSetString">
            <summary>设置 Permission.set_Describe(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPermission.AllInstances.PIDGet">
            <summary>设置 Permission.get_PID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPermission.AllInstances.PIDSetInt32">
            <summary>设置 Permission.set_PID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPermission.AllInstances.PKeyGet">
            <summary>设置 Permission.get_PKey() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPermission.AllInstances.PKeySetString">
            <summary>设置 Permission.set_PKey(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPermission.AllInstances.PNameGet">
            <summary>设置 Permission.get_PName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPermission.AllInstances.PNameSetString">
            <summary>设置 Permission.set_PName(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPermission.AllInstances.PTypeGet">
            <summary>设置 Permission.get_PType() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPermission.AllInstances.PTypeSetPermissionType">
            <summary>设置 Permission.set_PType(PermissionType value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimPermissionType">
            <summary>YunXiu.Model.PermissionType 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimPermissionType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimPermissionType.#ctor(YunXiu.Model.PermissionType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimPermissionType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimPermissionType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPermissionType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPermissionType.Constructor">
            <summary>设置 PermissionType.PermissionType() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPermissionType.TIDGet">
            <summary>设置 PermissionType.get_TID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPermissionType.TIDSetInt32">
            <summary>设置 PermissionType.set_TID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPermissionType.TNameGet">
            <summary>设置 PermissionType.get_TName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPermissionType.TNameSetString">
            <summary>设置 PermissionType.set_TName(String value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimPermissionType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPermissionType.AllInstances.TIDGet">
            <summary>设置 PermissionType.get_TID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPermissionType.AllInstances.TIDSetInt32">
            <summary>设置 PermissionType.set_TID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPermissionType.AllInstances.TNameGet">
            <summary>设置 PermissionType.get_TName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPermissionType.AllInstances.TNameSetString">
            <summary>设置 PermissionType.set_TName(String value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimProduct">
            <summary>YunXiu.Model.Product 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProduct.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProduct.#ctor(YunXiu.Model.Product)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProduct.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProduct.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AttributesGet">
            <summary>设置 Product.get_Attributes() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AttributesSetListOfProductAttr">
            <summary>设置 Product.set_Attributes(List`1&lt;ProductAttr&gt; value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.BrandGet">
            <summary>设置 Product.get_Brand() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.BrandSetBrand">
            <summary>设置 Product.set_Brand(Brand value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.CategoryGet">
            <summary>设置 Product.get_Category() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.CategorySetCategory">
            <summary>设置 Product.set_Category(Category value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.Constructor">
            <summary>设置 Product.Product() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.CostPriceGet">
            <summary>设置 Product.get_CostPrice() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.CostPriceSetDecimal">
            <summary>设置 Product.set_CostPrice(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.DescriptionGet">
            <summary>设置 Product.get_Description() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.DescriptionSetString">
            <summary>设置 Product.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.FAQsGet">
            <summary>设置 Product.get_FAQs() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.FAQsSetString">
            <summary>设置 Product.set_FAQs(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.FavoriteCountGet">
            <summary>设置 Product.get_FavoriteCount() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.FavoriteCountSetInt32">
            <summary>设置 Product.set_FavoriteCount(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.FiveStarGet">
            <summary>设置 Product.get_FiveStar() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.FiveStarSetInt32">
            <summary>设置 Product.set_FiveStar(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.FourStarGet">
            <summary>设置 Product.get_FourStar() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.FourStarSetInt32">
            <summary>设置 Product.set_FourStar(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.ImgIDGet">
            <summary>设置 Product.get_ImgID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.ImgIDSetInt32">
            <summary>设置 Product.set_ImgID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.ImgNameGet">
            <summary>设置 Product.get_ImgName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.ImgNameSetString">
            <summary>设置 Product.set_ImgName(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.IsBestGet">
            <summary>设置 Product.get_IsBest() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.IsBestSetBoolean">
            <summary>设置 Product.set_IsBest(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.IsHotGet">
            <summary>设置 Product.get_IsHot() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.IsHotSetBoolean">
            <summary>设置 Product.set_IsHot(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.IsNewGet">
            <summary>设置 Product.get_IsNew() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.IsNewSetBoolean">
            <summary>设置 Product.set_IsNew(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.IsRecommendGet">
            <summary>设置 Product.get_IsRecommend() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.IsRecommendSetBoolean">
            <summary>设置 Product.set_IsRecommend(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.MarketPriceGet">
            <summary>设置 Product.get_MarketPrice() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.MarketPriceSetDecimal">
            <summary>设置 Product.set_MarketPrice(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.NameGet">
            <summary>设置 Product.get_Name() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.NameSetString">
            <summary>设置 Product.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.OfficialGuaranteeGet">
            <summary>设置 Product.get_OfficialGuarantee() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.OfficialGuaranteeSetString">
            <summary>设置 Product.set_OfficialGuarantee(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.OneStarGet">
            <summary>设置 Product.get_OneStar() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.OneStarSetInt32">
            <summary>设置 Product.set_OneStar(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.PIDGet">
            <summary>设置 Product.get_PID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.PIDSetInt32">
            <summary>设置 Product.set_PID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.ProductImagesGet">
            <summary>设置 Product.get_ProductImages() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.ProductImagesSetListOfProductImage">
            <summary>设置 Product.set_ProductImages(List`1&lt;ProductImage&gt; value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.PsnGet">
            <summary>设置 Product.get_Psn() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.PsnSetString">
            <summary>设置 Product.set_Psn(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.ReviewCountGet">
            <summary>设置 Product.get_ReviewCount() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.ReviewCountSetInt32">
            <summary>设置 Product.set_ReviewCount(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.SaleCountGet">
            <summary>设置 Product.get_SaleCount() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.SaleCountSetInt32">
            <summary>设置 Product.set_SaleCount(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.ShopPriceGet">
            <summary>设置 Product.get_ShopPrice() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.ShopPriceSetDecimal">
            <summary>设置 Product.set_ShopPrice(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.SkuGIDGet">
            <summary>设置 Product.get_SkuGID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.SkuGIDSetInt32">
            <summary>设置 Product.set_SkuGID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.SortGet">
            <summary>设置 Product.get_Sort() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.SortSetInt32">
            <summary>设置 Product.set_Sort(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.StateGet">
            <summary>设置 Product.get_State() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.StateSetInt32">
            <summary>设置 Product.set_State(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.StoreGet">
            <summary>设置 Product.get_Store() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.StoreSetStore">
            <summary>设置 Product.set_Store(Store value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.StoreStIDGet">
            <summary>设置 Product.get_StoreStID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.StoreStIDSetInt32">
            <summary>设置 Product.set_StoreStID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.ThreeStarGet">
            <summary>设置 Product.get_ThreeStar() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.ThreeStarSetInt32">
            <summary>设置 Product.set_ThreeStar(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.TwoStarGet">
            <summary>设置 Product.get_TwoStar() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.TwoStarSetInt32">
            <summary>设置 Product.set_TwoStar(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.VisitCountGet">
            <summary>设置 Product.get_VisitCount() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.VisitCountSetInt32">
            <summary>设置 Product.set_VisitCount(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.WeightGet">
            <summary>设置 Product.get_Weight() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.WeightSetSingle">
            <summary>设置 Product.set_Weight(Single value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimProduct.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.AttributesGet">
            <summary>设置 Product.get_Attributes() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.AttributesSetListOfProductAttr">
            <summary>设置 Product.set_Attributes(List`1&lt;ProductAttr&gt; value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.BrandGet">
            <summary>设置 Product.get_Brand() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.BrandSetBrand">
            <summary>设置 Product.set_Brand(Brand value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.CategoryGet">
            <summary>设置 Product.get_Category() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.CategorySetCategory">
            <summary>设置 Product.set_Category(Category value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.CostPriceGet">
            <summary>设置 Product.get_CostPrice() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.CostPriceSetDecimal">
            <summary>设置 Product.set_CostPrice(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.DescriptionGet">
            <summary>设置 Product.get_Description() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.DescriptionSetString">
            <summary>设置 Product.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.FAQsGet">
            <summary>设置 Product.get_FAQs() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.FAQsSetString">
            <summary>设置 Product.set_FAQs(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.FavoriteCountGet">
            <summary>设置 Product.get_FavoriteCount() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.FavoriteCountSetInt32">
            <summary>设置 Product.set_FavoriteCount(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.FiveStarGet">
            <summary>设置 Product.get_FiveStar() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.FiveStarSetInt32">
            <summary>设置 Product.set_FiveStar(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.FourStarGet">
            <summary>设置 Product.get_FourStar() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.FourStarSetInt32">
            <summary>设置 Product.set_FourStar(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.ImgIDGet">
            <summary>设置 Product.get_ImgID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.ImgIDSetInt32">
            <summary>设置 Product.set_ImgID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.ImgNameGet">
            <summary>设置 Product.get_ImgName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.ImgNameSetString">
            <summary>设置 Product.set_ImgName(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.IsBestGet">
            <summary>设置 Product.get_IsBest() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.IsBestSetBoolean">
            <summary>设置 Product.set_IsBest(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.IsHotGet">
            <summary>设置 Product.get_IsHot() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.IsHotSetBoolean">
            <summary>设置 Product.set_IsHot(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.IsNewGet">
            <summary>设置 Product.get_IsNew() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.IsNewSetBoolean">
            <summary>设置 Product.set_IsNew(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.IsRecommendGet">
            <summary>设置 Product.get_IsRecommend() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.IsRecommendSetBoolean">
            <summary>设置 Product.set_IsRecommend(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.MarketPriceGet">
            <summary>设置 Product.get_MarketPrice() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.MarketPriceSetDecimal">
            <summary>设置 Product.set_MarketPrice(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.NameGet">
            <summary>设置 Product.get_Name() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.NameSetString">
            <summary>设置 Product.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.OfficialGuaranteeGet">
            <summary>设置 Product.get_OfficialGuarantee() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.OfficialGuaranteeSetString">
            <summary>设置 Product.set_OfficialGuarantee(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.OneStarGet">
            <summary>设置 Product.get_OneStar() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.OneStarSetInt32">
            <summary>设置 Product.set_OneStar(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.PIDGet">
            <summary>设置 Product.get_PID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.PIDSetInt32">
            <summary>设置 Product.set_PID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.ProductImagesGet">
            <summary>设置 Product.get_ProductImages() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.ProductImagesSetListOfProductImage">
            <summary>设置 Product.set_ProductImages(List`1&lt;ProductImage&gt; value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.PsnGet">
            <summary>设置 Product.get_Psn() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.PsnSetString">
            <summary>设置 Product.set_Psn(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.ReviewCountGet">
            <summary>设置 Product.get_ReviewCount() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.ReviewCountSetInt32">
            <summary>设置 Product.set_ReviewCount(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.SaleCountGet">
            <summary>设置 Product.get_SaleCount() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.SaleCountSetInt32">
            <summary>设置 Product.set_SaleCount(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.ShopPriceGet">
            <summary>设置 Product.get_ShopPrice() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.ShopPriceSetDecimal">
            <summary>设置 Product.set_ShopPrice(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.SkuGIDGet">
            <summary>设置 Product.get_SkuGID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.SkuGIDSetInt32">
            <summary>设置 Product.set_SkuGID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.SortGet">
            <summary>设置 Product.get_Sort() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.SortSetInt32">
            <summary>设置 Product.set_Sort(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.StateGet">
            <summary>设置 Product.get_State() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.StateSetInt32">
            <summary>设置 Product.set_State(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.StoreGet">
            <summary>设置 Product.get_Store() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.StoreSetStore">
            <summary>设置 Product.set_Store(Store value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.StoreStIDGet">
            <summary>设置 Product.get_StoreStID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.StoreStIDSetInt32">
            <summary>设置 Product.set_StoreStID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.ThreeStarGet">
            <summary>设置 Product.get_ThreeStar() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.ThreeStarSetInt32">
            <summary>设置 Product.set_ThreeStar(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.TwoStarGet">
            <summary>设置 Product.get_TwoStar() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.TwoStarSetInt32">
            <summary>设置 Product.set_TwoStar(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.VisitCountGet">
            <summary>设置 Product.get_VisitCount() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.VisitCountSetInt32">
            <summary>设置 Product.set_VisitCount(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.WeightGet">
            <summary>设置 Product.get_Weight() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProduct.AllInstances.WeightSetSingle">
            <summary>设置 Product.set_Weight(Single value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimProductAttr">
            <summary>YunXiu.Model.ProductAttr 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProductAttr.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProductAttr.#ctor(YunXiu.Model.ProductAttr)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProductAttr.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProductAttr.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductAttr.AttrGet">
            <summary>设置 ProductAttr.get_Attr() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductAttr.AttrSetCateAttribute">
            <summary>设置 ProductAttr.set_Attr(CateAttribute value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductAttr.AttrValGet">
            <summary>设置 ProductAttr.get_AttrVal() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductAttr.AttrValSetAttributeValue">
            <summary>设置 ProductAttr.set_AttrVal(AttributeValue value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductAttr.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductAttr.Constructor">
            <summary>设置 ProductAttr.ProductAttr() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductAttr.InputValGet">
            <summary>设置 ProductAttr.get_InputVal() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductAttr.InputValSetString">
            <summary>设置 ProductAttr.set_InputVal(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductAttr.PAIDGet">
            <summary>设置 ProductAttr.get_PAID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductAttr.PAIDSetInt32">
            <summary>设置 ProductAttr.set_PAID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductAttr.ProductGet">
            <summary>设置 ProductAttr.get_Product() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductAttr.ProductSetProduct">
            <summary>设置 ProductAttr.set_Product(Product value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimProductAttr.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductAttr.AllInstances.AttrGet">
            <summary>设置 ProductAttr.get_Attr() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductAttr.AllInstances.AttrSetCateAttribute">
            <summary>设置 ProductAttr.set_Attr(CateAttribute value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductAttr.AllInstances.AttrValGet">
            <summary>设置 ProductAttr.get_AttrVal() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductAttr.AllInstances.AttrValSetAttributeValue">
            <summary>设置 ProductAttr.set_AttrVal(AttributeValue value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductAttr.AllInstances.InputValGet">
            <summary>设置 ProductAttr.get_InputVal() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductAttr.AllInstances.InputValSetString">
            <summary>设置 ProductAttr.set_InputVal(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductAttr.AllInstances.PAIDGet">
            <summary>设置 ProductAttr.get_PAID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductAttr.AllInstances.PAIDSetInt32">
            <summary>设置 ProductAttr.set_PAID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductAttr.AllInstances.ProductGet">
            <summary>设置 ProductAttr.get_Product() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductAttr.AllInstances.ProductSetProduct">
            <summary>设置 ProductAttr.set_Product(Product value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimProductConsultTypes">
            <summary>YunXiu.Model.ProductConsultTypes 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProductConsultTypes.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProductConsultTypes.#ctor(YunXiu.Model.ProductConsultTypes)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProductConsultTypes.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProductConsultTypes.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsultTypes.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsultTypes.Constructor">
            <summary>设置 ProductConsultTypes.ProductConsultTypes() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsultTypes.ConsultTypeIdGet">
            <summary>设置 ProductConsultTypes.get_ConsultTypeId() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsultTypes.ConsultTypeIdSetInt32">
            <summary>设置 ProductConsultTypes.set_ConsultTypeId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsultTypes.DisplayOrderGet">
            <summary>设置 ProductConsultTypes.get_DisplayOrder() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsultTypes.DisplayOrderSetInt32">
            <summary>设置 ProductConsultTypes.set_DisplayOrder(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsultTypes.TitleGet">
            <summary>设置 ProductConsultTypes.get_Title() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsultTypes.TitleSetString">
            <summary>设置 ProductConsultTypes.set_Title(String value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimProductConsultTypes.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsultTypes.AllInstances.ConsultTypeIdGet">
            <summary>设置 ProductConsultTypes.get_ConsultTypeId() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsultTypes.AllInstances.ConsultTypeIdSetInt32">
            <summary>设置 ProductConsultTypes.set_ConsultTypeId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsultTypes.AllInstances.DisplayOrderGet">
            <summary>设置 ProductConsultTypes.get_DisplayOrder() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsultTypes.AllInstances.DisplayOrderSetInt32">
            <summary>设置 ProductConsultTypes.set_DisplayOrder(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsultTypes.AllInstances.TitleGet">
            <summary>设置 ProductConsultTypes.get_Title() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsultTypes.AllInstances.TitleSetString">
            <summary>设置 ProductConsultTypes.set_Title(String value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimProductConsults">
            <summary>YunXiu.Model.ProductConsults 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProductConsults.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProductConsults.#ctor(YunXiu.Model.ProductConsults)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProductConsults.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProductConsults.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.Constructor">
            <summary>设置 ProductConsults.ProductConsults() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.ConsultIdGet">
            <summary>设置 ProductConsults.get_ConsultId() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.ConsultIdSetInt32">
            <summary>设置 ProductConsults.set_ConsultId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.ConsultIpGet">
            <summary>设置 ProductConsults.get_ConsultIp() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.ConsultIpSetString">
            <summary>设置 ProductConsults.set_ConsultIp(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.ConsultMessageGet">
            <summary>设置 ProductConsults.get_ConsultMessage() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.ConsultMessageSetString">
            <summary>设置 ProductConsults.set_ConsultMessage(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.ConsultNickNameGet">
            <summary>设置 ProductConsults.get_ConsultNickName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.ConsultNickNameSetString">
            <summary>设置 ProductConsults.set_ConsultNickName(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.ConsultTimeGet">
            <summary>设置 ProductConsults.get_ConsultTime() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.ConsultTimeSetDateTime">
            <summary>设置 ProductConsults.set_ConsultTime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.ConsultTypeIdGet">
            <summary>设置 ProductConsults.get_ConsultTypeId() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.ConsultTypeIdSetInt32">
            <summary>设置 ProductConsults.set_ConsultTypeId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.ConsultUidGet">
            <summary>设置 ProductConsults.get_ConsultUid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.ConsultUidSetInt32">
            <summary>设置 ProductConsults.set_ConsultUid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.PImgIDGet">
            <summary>设置 ProductConsults.get_PImgID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.PImgIDSetString">
            <summary>设置 ProductConsults.set_PImgID(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.PNameGet">
            <summary>设置 ProductConsults.get_PName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.PNameSetString">
            <summary>设置 ProductConsults.set_PName(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.PidGet">
            <summary>设置 ProductConsults.get_Pid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.PidSetInt32">
            <summary>设置 ProductConsults.set_Pid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.ReplyIpGet">
            <summary>设置 ProductConsults.get_ReplyIp() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.ReplyIpSetString">
            <summary>设置 ProductConsults.set_ReplyIp(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.ReplyMessageGet">
            <summary>设置 ProductConsults.get_ReplyMessage() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.ReplyMessageSetString">
            <summary>设置 ProductConsults.set_ReplyMessage(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.ReplyNickNameGet">
            <summary>设置 ProductConsults.get_ReplyNickName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.ReplyNickNameSetString">
            <summary>设置 ProductConsults.set_ReplyNickName(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.ReplyTimeGet">
            <summary>设置 ProductConsults.get_ReplyTime() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.ReplyTimeSetDateTime">
            <summary>设置 ProductConsults.set_ReplyTime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.ReplyUidGet">
            <summary>设置 ProductConsults.get_ReplyUid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.ReplyUidSetInt32">
            <summary>设置 ProductConsults.set_ReplyUid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.StateGet">
            <summary>设置 ProductConsults.get_State() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.StateSetInt32">
            <summary>设置 ProductConsults.set_State(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.StoreIdGet">
            <summary>设置 ProductConsults.get_StoreId() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.StoreIdSetInt32">
            <summary>设置 ProductConsults.set_StoreId(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimProductConsults.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.AllInstances.ConsultIdGet">
            <summary>设置 ProductConsults.get_ConsultId() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.AllInstances.ConsultIdSetInt32">
            <summary>设置 ProductConsults.set_ConsultId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.AllInstances.ConsultIpGet">
            <summary>设置 ProductConsults.get_ConsultIp() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.AllInstances.ConsultIpSetString">
            <summary>设置 ProductConsults.set_ConsultIp(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.AllInstances.ConsultMessageGet">
            <summary>设置 ProductConsults.get_ConsultMessage() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.AllInstances.ConsultMessageSetString">
            <summary>设置 ProductConsults.set_ConsultMessage(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.AllInstances.ConsultNickNameGet">
            <summary>设置 ProductConsults.get_ConsultNickName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.AllInstances.ConsultNickNameSetString">
            <summary>设置 ProductConsults.set_ConsultNickName(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.AllInstances.ConsultTimeGet">
            <summary>设置 ProductConsults.get_ConsultTime() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.AllInstances.ConsultTimeSetDateTime">
            <summary>设置 ProductConsults.set_ConsultTime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.AllInstances.ConsultTypeIdGet">
            <summary>设置 ProductConsults.get_ConsultTypeId() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.AllInstances.ConsultTypeIdSetInt32">
            <summary>设置 ProductConsults.set_ConsultTypeId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.AllInstances.ConsultUidGet">
            <summary>设置 ProductConsults.get_ConsultUid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.AllInstances.ConsultUidSetInt32">
            <summary>设置 ProductConsults.set_ConsultUid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.AllInstances.PImgIDGet">
            <summary>设置 ProductConsults.get_PImgID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.AllInstances.PImgIDSetString">
            <summary>设置 ProductConsults.set_PImgID(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.AllInstances.PNameGet">
            <summary>设置 ProductConsults.get_PName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.AllInstances.PNameSetString">
            <summary>设置 ProductConsults.set_PName(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.AllInstances.PidGet">
            <summary>设置 ProductConsults.get_Pid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.AllInstances.PidSetInt32">
            <summary>设置 ProductConsults.set_Pid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.AllInstances.ReplyIpGet">
            <summary>设置 ProductConsults.get_ReplyIp() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.AllInstances.ReplyIpSetString">
            <summary>设置 ProductConsults.set_ReplyIp(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.AllInstances.ReplyMessageGet">
            <summary>设置 ProductConsults.get_ReplyMessage() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.AllInstances.ReplyMessageSetString">
            <summary>设置 ProductConsults.set_ReplyMessage(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.AllInstances.ReplyNickNameGet">
            <summary>设置 ProductConsults.get_ReplyNickName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.AllInstances.ReplyNickNameSetString">
            <summary>设置 ProductConsults.set_ReplyNickName(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.AllInstances.ReplyTimeGet">
            <summary>设置 ProductConsults.get_ReplyTime() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.AllInstances.ReplyTimeSetDateTime">
            <summary>设置 ProductConsults.set_ReplyTime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.AllInstances.ReplyUidGet">
            <summary>设置 ProductConsults.get_ReplyUid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.AllInstances.ReplyUidSetInt32">
            <summary>设置 ProductConsults.set_ReplyUid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.AllInstances.StateGet">
            <summary>设置 ProductConsults.get_State() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.AllInstances.StateSetInt32">
            <summary>设置 ProductConsults.set_State(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.AllInstances.StoreIdGet">
            <summary>设置 ProductConsults.get_StoreId() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsults.AllInstances.StoreIdSetInt32">
            <summary>设置 ProductConsults.set_StoreId(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimProductConsultsModel">
            <summary>YunXiu.Model.ProductConsultsModel 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProductConsultsModel.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProductConsultsModel.#ctor(YunXiu.Model.ProductConsultsModel)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProductConsultsModel.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProductConsultsModel.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsultsModel.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsultsModel.Constructor">
            <summary>设置 ProductConsultsModel.ProductConsultsModel() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsultsModel.TotalCountGet">
            <summary>设置 ProductConsultsModel.get_TotalCount() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsultsModel.TotalCountSetInt32">
            <summary>设置 ProductConsultsModel.set_TotalCount(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsultsModel.lssGet">
            <summary>设置 ProductConsultsModel.get_lss() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsultsModel.lssSetListOfProductConsults">
            <summary>设置 ProductConsultsModel.set_lss(List`1&lt;ProductConsults&gt; value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimProductConsultsModel.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsultsModel.AllInstances.TotalCountGet">
            <summary>设置 ProductConsultsModel.get_TotalCount() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsultsModel.AllInstances.TotalCountSetInt32">
            <summary>设置 ProductConsultsModel.set_TotalCount(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsultsModel.AllInstances.lssGet">
            <summary>设置 ProductConsultsModel.get_lss() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductConsultsModel.AllInstances.lssSetListOfProductConsults">
            <summary>设置 ProductConsultsModel.set_lss(List`1&lt;ProductConsults&gt; value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimProductImage">
            <summary>YunXiu.Model.ProductImage 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProductImage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProductImage.#ctor(YunXiu.Model.ProductImage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProductImage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProductImage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductImage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductImage.Constructor">
            <summary>设置 ProductImage.ProductImage() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductImage.DisplayOrderGet">
            <summary>设置 ProductImage.get_DisplayOrder() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductImage.DisplayOrderSetInt32">
            <summary>设置 ProductImage.set_DisplayOrder(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductImage.ImgIDGet">
            <summary>设置 ProductImage.get_ImgID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductImage.ImgIDSetString">
            <summary>设置 ProductImage.set_ImgID(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductImage.ImgNameGet">
            <summary>设置 ProductImage.get_ImgName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductImage.ImgNameSetString">
            <summary>设置 ProductImage.set_ImgName(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductImage.IsMainGet">
            <summary>设置 ProductImage.get_IsMain() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductImage.IsMainSetInt32">
            <summary>设置 ProductImage.set_IsMain(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductImage.PImgIDGet">
            <summary>设置 ProductImage.get_PImgID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductImage.PImgIDSetInt32">
            <summary>设置 ProductImage.set_PImgID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductImage.ProductGet">
            <summary>设置 ProductImage.get_Product() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductImage.ProductSetProduct">
            <summary>设置 ProductImage.set_Product(Product value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductImage.StoreIdGet">
            <summary>设置 ProductImage.get_StoreId() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductImage.StoreIdSetInt32">
            <summary>设置 ProductImage.set_StoreId(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimProductImage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductImage.AllInstances.DisplayOrderGet">
            <summary>设置 ProductImage.get_DisplayOrder() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductImage.AllInstances.DisplayOrderSetInt32">
            <summary>设置 ProductImage.set_DisplayOrder(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductImage.AllInstances.ImgIDGet">
            <summary>设置 ProductImage.get_ImgID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductImage.AllInstances.ImgIDSetString">
            <summary>设置 ProductImage.set_ImgID(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductImage.AllInstances.ImgNameGet">
            <summary>设置 ProductImage.get_ImgName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductImage.AllInstances.ImgNameSetString">
            <summary>设置 ProductImage.set_ImgName(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductImage.AllInstances.IsMainGet">
            <summary>设置 ProductImage.get_IsMain() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductImage.AllInstances.IsMainSetInt32">
            <summary>设置 ProductImage.set_IsMain(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductImage.AllInstances.PImgIDGet">
            <summary>设置 ProductImage.get_PImgID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductImage.AllInstances.PImgIDSetInt32">
            <summary>设置 ProductImage.set_PImgID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductImage.AllInstances.ProductGet">
            <summary>设置 ProductImage.get_Product() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductImage.AllInstances.ProductSetProduct">
            <summary>设置 ProductImage.set_Product(Product value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductImage.AllInstances.StoreIdGet">
            <summary>设置 ProductImage.get_StoreId() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductImage.AllInstances.StoreIdSetInt32">
            <summary>设置 ProductImage.set_StoreId(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimProductKeyWords">
            <summary>YunXiu.Model.ProductKeyWords 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProductKeyWords.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProductKeyWords.#ctor(YunXiu.Model.ProductKeyWords)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProductKeyWords.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProductKeyWords.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductKeyWords.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductKeyWords.Constructor">
            <summary>设置 ProductKeyWords.ProductKeyWords() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductKeyWords.KeyWordGet">
            <summary>设置 ProductKeyWords.get_KeyWord() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductKeyWords.KeyWordIdGet">
            <summary>设置 ProductKeyWords.get_KeyWordId() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductKeyWords.KeyWordIdSetInt32">
            <summary>设置 ProductKeyWords.set_KeyWordId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductKeyWords.KeyWordSetString">
            <summary>设置 ProductKeyWords.set_KeyWord(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductKeyWords.PidGet">
            <summary>设置 ProductKeyWords.get_Pid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductKeyWords.PidSetInt32">
            <summary>设置 ProductKeyWords.set_Pid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductKeyWords.RelevancyGet">
            <summary>设置 ProductKeyWords.get_Relevancy() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductKeyWords.RelevancySetInt32">
            <summary>设置 ProductKeyWords.set_Relevancy(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimProductKeyWords.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductKeyWords.AllInstances.KeyWordGet">
            <summary>设置 ProductKeyWords.get_KeyWord() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductKeyWords.AllInstances.KeyWordIdGet">
            <summary>设置 ProductKeyWords.get_KeyWordId() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductKeyWords.AllInstances.KeyWordIdSetInt32">
            <summary>设置 ProductKeyWords.set_KeyWordId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductKeyWords.AllInstances.KeyWordSetString">
            <summary>设置 ProductKeyWords.set_KeyWord(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductKeyWords.AllInstances.PidGet">
            <summary>设置 ProductKeyWords.get_Pid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductKeyWords.AllInstances.PidSetInt32">
            <summary>设置 ProductKeyWords.set_Pid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductKeyWords.AllInstances.RelevancyGet">
            <summary>设置 ProductKeyWords.get_Relevancy() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductKeyWords.AllInstances.RelevancySetInt32">
            <summary>设置 ProductKeyWords.set_Relevancy(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimProductReview">
            <summary>YunXiu.Model.ProductReview 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProductReview.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProductReview.#ctor(YunXiu.Model.ProductReview)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProductReview.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProductReview.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReview.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReview.Constructor">
            <summary>设置 ProductReview.ProductReview() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReview.IsStoreReplyGet">
            <summary>设置 ProductReview.get_IsStoreReply() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReview.IsStoreReplySetBoolean">
            <summary>设置 ProductReview.set_IsStoreReply(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReview.LikeCountGet">
            <summary>设置 ProductReview.get_LikeCount() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReview.LikeCountSetInt32">
            <summary>设置 ProductReview.set_LikeCount(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReview.ParentGet">
            <summary>设置 ProductReview.get_Parent() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReview.ParentSetInt32">
            <summary>设置 ProductReview.set_Parent(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReview.RContentGet">
            <summary>设置 ProductReview.get_RContent() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReview.RContentSetString">
            <summary>设置 ProductReview.set_RContent(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReview.RIDGet">
            <summary>设置 ProductReview.get_RID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReview.RIDSetInt32">
            <summary>设置 ProductReview.set_RID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReview.ROrderGet">
            <summary>设置 ProductReview.get_ROrder() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReview.ROrderSetOrder">
            <summary>设置 ProductReview.set_ROrder(Order value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReview.RProductGet">
            <summary>设置 ProductReview.get_RProduct() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReview.RProductSetProduct">
            <summary>设置 ProductReview.set_RProduct(Product value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReview.RUserGet">
            <summary>设置 ProductReview.get_RUser() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReview.RUserSetUser">
            <summary>设置 ProductReview.set_RUser(User value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReview.ReviewTimeGet">
            <summary>设置 ProductReview.get_ReviewTime() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReview.ReviewTimeSetDateTime">
            <summary>设置 ProductReview.set_ReviewTime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReview.ReviewTypeGet">
            <summary>设置 ProductReview.get_ReviewType() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReview.ReviewTypeSetInt32">
            <summary>设置 ProductReview.set_ReviewType(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReview.StarGet">
            <summary>设置 ProductReview.get_Star() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReview.StarSetInt32">
            <summary>设置 ProductReview.set_Star(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimProductReview.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReview.AllInstances.IsStoreReplyGet">
            <summary>设置 ProductReview.get_IsStoreReply() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReview.AllInstances.IsStoreReplySetBoolean">
            <summary>设置 ProductReview.set_IsStoreReply(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReview.AllInstances.LikeCountGet">
            <summary>设置 ProductReview.get_LikeCount() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReview.AllInstances.LikeCountSetInt32">
            <summary>设置 ProductReview.set_LikeCount(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReview.AllInstances.ParentGet">
            <summary>设置 ProductReview.get_Parent() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReview.AllInstances.ParentSetInt32">
            <summary>设置 ProductReview.set_Parent(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReview.AllInstances.RContentGet">
            <summary>设置 ProductReview.get_RContent() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReview.AllInstances.RContentSetString">
            <summary>设置 ProductReview.set_RContent(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReview.AllInstances.RIDGet">
            <summary>设置 ProductReview.get_RID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReview.AllInstances.RIDSetInt32">
            <summary>设置 ProductReview.set_RID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReview.AllInstances.ROrderGet">
            <summary>设置 ProductReview.get_ROrder() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReview.AllInstances.ROrderSetOrder">
            <summary>设置 ProductReview.set_ROrder(Order value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReview.AllInstances.RProductGet">
            <summary>设置 ProductReview.get_RProduct() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReview.AllInstances.RProductSetProduct">
            <summary>设置 ProductReview.set_RProduct(Product value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReview.AllInstances.RUserGet">
            <summary>设置 ProductReview.get_RUser() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReview.AllInstances.RUserSetUser">
            <summary>设置 ProductReview.set_RUser(User value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReview.AllInstances.ReviewTimeGet">
            <summary>设置 ProductReview.get_ReviewTime() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReview.AllInstances.ReviewTimeSetDateTime">
            <summary>设置 ProductReview.set_ReviewTime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReview.AllInstances.ReviewTypeGet">
            <summary>设置 ProductReview.get_ReviewType() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReview.AllInstances.ReviewTypeSetInt32">
            <summary>设置 ProductReview.set_ReviewType(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReview.AllInstances.StarGet">
            <summary>设置 ProductReview.get_Star() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReview.AllInstances.StarSetInt32">
            <summary>设置 ProductReview.set_Star(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimProductReviewQuality">
            <summary>YunXiu.Model.ProductReviewQuality 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProductReviewQuality.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProductReviewQuality.#ctor(YunXiu.Model.ProductReviewQuality)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProductReviewQuality.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProductReviewQuality.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReviewQuality.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReviewQuality.Constructor">
            <summary>设置 ProductReviewQuality.ProductReviewQuality() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReviewQuality.IdGet">
            <summary>设置 ProductReviewQuality.get_Id() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReviewQuality.IdSetInt32">
            <summary>设置 ProductReviewQuality.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReviewQuality.ReviewIdGet">
            <summary>设置 ProductReviewQuality.get_ReviewId() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReviewQuality.ReviewIdSetInt32">
            <summary>设置 ProductReviewQuality.set_ReviewId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReviewQuality.UidGet">
            <summary>设置 ProductReviewQuality.get_Uid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReviewQuality.UidSetInt32">
            <summary>设置 ProductReviewQuality.set_Uid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReviewQuality.VoteTimeGet">
            <summary>设置 ProductReviewQuality.get_VoteTime() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReviewQuality.VoteTimeSetDateTime">
            <summary>设置 ProductReviewQuality.set_VoteTime(DateTime value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimProductReviewQuality.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReviewQuality.AllInstances.IdGet">
            <summary>设置 ProductReviewQuality.get_Id() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReviewQuality.AllInstances.IdSetInt32">
            <summary>设置 ProductReviewQuality.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReviewQuality.AllInstances.ReviewIdGet">
            <summary>设置 ProductReviewQuality.get_ReviewId() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReviewQuality.AllInstances.ReviewIdSetInt32">
            <summary>设置 ProductReviewQuality.set_ReviewId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReviewQuality.AllInstances.UidGet">
            <summary>设置 ProductReviewQuality.get_Uid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReviewQuality.AllInstances.UidSetInt32">
            <summary>设置 ProductReviewQuality.set_Uid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReviewQuality.AllInstances.VoteTimeGet">
            <summary>设置 ProductReviewQuality.get_VoteTime() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductReviewQuality.AllInstances.VoteTimeSetDateTime">
            <summary>设置 ProductReviewQuality.set_VoteTime(DateTime value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimProductStock">
            <summary>YunXiu.Model.ProductStock 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProductStock.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProductStock.#ctor(YunXiu.Model.ProductStock)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProductStock.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProductStock.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductStock.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductStock.Constructor">
            <summary>设置 ProductStock.ProductStock() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductStock.IDGet">
            <summary>设置 ProductStock.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductStock.IDSetInt32">
            <summary>设置 ProductStock.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductStock.LimitGet">
            <summary>设置 ProductStock.get_Limit() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductStock.LimitSetInt32">
            <summary>设置 ProductStock.set_Limit(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductStock.NumberGet">
            <summary>设置 ProductStock.get_Number() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductStock.NumberSetInt32">
            <summary>设置 ProductStock.set_Number(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductStock.ProductGet">
            <summary>设置 ProductStock.get_Product() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductStock.ProductSetProduct">
            <summary>设置 ProductStock.set_Product(Product value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimProductStock.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductStock.AllInstances.IDGet">
            <summary>设置 ProductStock.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductStock.AllInstances.IDSetInt32">
            <summary>设置 ProductStock.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductStock.AllInstances.LimitGet">
            <summary>设置 ProductStock.get_Limit() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductStock.AllInstances.LimitSetInt32">
            <summary>设置 ProductStock.set_Limit(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductStock.AllInstances.NumberGet">
            <summary>设置 ProductStock.get_Number() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductStock.AllInstances.NumberSetInt32">
            <summary>设置 ProductStock.set_Number(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductStock.AllInstances.ProductGet">
            <summary>设置 ProductStock.get_Product() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductStock.AllInstances.ProductSetProduct">
            <summary>设置 ProductStock.set_Product(Product value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimProductStorage">
            <summary>YunXiu.Model.ProductStorage 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProductStorage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProductStorage.#ctor(YunXiu.Model.ProductStorage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProductStorage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProductStorage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductStorage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductStorage.Constructor">
            <summary>设置 ProductStorage.ProductStorage() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductStorage.IDGet">
            <summary>设置 ProductStorage.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductStorage.IDSetInt32">
            <summary>设置 ProductStorage.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductStorage.NumberGet">
            <summary>设置 ProductStorage.get_Number() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductStorage.NumberSetInt32">
            <summary>设置 ProductStorage.set_Number(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductStorage.ProductGet">
            <summary>设置 ProductStorage.get_Product() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductStorage.ProductSetProduct">
            <summary>设置 ProductStorage.set_Product(Product value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimProductStorage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductStorage.AllInstances.IDGet">
            <summary>设置 ProductStorage.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductStorage.AllInstances.IDSetInt32">
            <summary>设置 ProductStorage.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductStorage.AllInstances.NumberGet">
            <summary>设置 ProductStorage.get_Number() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductStorage.AllInstances.NumberSetInt32">
            <summary>设置 ProductStorage.set_Number(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductStorage.AllInstances.ProductGet">
            <summary>设置 ProductStorage.get_Product() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductStorage.AllInstances.ProductSetProduct">
            <summary>设置 ProductStorage.set_Product(Product value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimProductskus">
            <summary>YunXiu.Model.Productskus 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProductskus.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProductskus.#ctor(YunXiu.Model.Productskus)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProductskus.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProductskus.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductskus.AttrValueIdGet">
            <summary>设置 Productskus.get_AttrValueId() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductskus.AttrValueIdSetInt32">
            <summary>设置 Productskus.set_AttrValueId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductskus.AttridGet">
            <summary>设置 Productskus.get_Attrid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductskus.AttridSetInt32">
            <summary>设置 Productskus.set_Attrid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductskus.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductskus.Constructor">
            <summary>设置 Productskus.Productskus() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductskus.InputValueGet">
            <summary>设置 Productskus.get_InputValue() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductskus.InputValueSetString">
            <summary>设置 Productskus.set_InputValue(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductskus.PidGet">
            <summary>设置 Productskus.get_Pid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductskus.PidSetInt32">
            <summary>设置 Productskus.set_Pid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductskus.RecordidGet">
            <summary>设置 Productskus.get_Recordid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductskus.RecordidSetInt32">
            <summary>设置 Productskus.set_Recordid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductskus.SkuGidGet">
            <summary>设置 Productskus.get_SkuGid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductskus.SkuGidSetInt32">
            <summary>设置 Productskus.set_SkuGid(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimProductskus.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductskus.AllInstances.AttrValueIdGet">
            <summary>设置 Productskus.get_AttrValueId() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductskus.AllInstances.AttrValueIdSetInt32">
            <summary>设置 Productskus.set_AttrValueId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductskus.AllInstances.AttridGet">
            <summary>设置 Productskus.get_Attrid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductskus.AllInstances.AttridSetInt32">
            <summary>设置 Productskus.set_Attrid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductskus.AllInstances.InputValueGet">
            <summary>设置 Productskus.get_InputValue() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductskus.AllInstances.InputValueSetString">
            <summary>设置 Productskus.set_InputValue(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductskus.AllInstances.PidGet">
            <summary>设置 Productskus.get_Pid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductskus.AllInstances.PidSetInt32">
            <summary>设置 Productskus.set_Pid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductskus.AllInstances.RecordidGet">
            <summary>设置 Productskus.get_Recordid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductskus.AllInstances.RecordidSetInt32">
            <summary>设置 Productskus.set_Recordid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductskus.AllInstances.SkuGidGet">
            <summary>设置 Productskus.get_SkuGid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductskus.AllInstances.SkuGidSetInt32">
            <summary>设置 Productskus.set_SkuGid(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimProductstats">
            <summary>YunXiu.Model.Productstats 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProductstats.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProductstats.#ctor(YunXiu.Model.Productstats)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProductstats.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimProductstats.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductstats.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductstats.Constructor">
            <summary>设置 Productstats.Productstats() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductstats.categoryGet">
            <summary>设置 Productstats.get_category() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductstats.categorySetString">
            <summary>设置 Productstats.set_category(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductstats.countGet">
            <summary>设置 Productstats.get_count() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductstats.countSetInt32">
            <summary>设置 Productstats.set_count(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductstats.pidGet">
            <summary>设置 Productstats.get_pid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductstats.pidSetInt32">
            <summary>设置 Productstats.set_pid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductstats.recordidGet">
            <summary>设置 Productstats.get_recordid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductstats.recordidSetInt32">
            <summary>设置 Productstats.set_recordid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductstats.valueGet">
            <summary>设置 Productstats.get_value() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductstats.valueSetString">
            <summary>设置 Productstats.set_value(String value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimProductstats.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductstats.AllInstances.categoryGet">
            <summary>设置 Productstats.get_category() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductstats.AllInstances.categorySetString">
            <summary>设置 Productstats.set_category(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductstats.AllInstances.countGet">
            <summary>设置 Productstats.get_count() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductstats.AllInstances.countSetInt32">
            <summary>设置 Productstats.set_count(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductstats.AllInstances.pidGet">
            <summary>设置 Productstats.get_pid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductstats.AllInstances.pidSetInt32">
            <summary>设置 Productstats.set_pid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductstats.AllInstances.recordidGet">
            <summary>设置 Productstats.get_recordid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductstats.AllInstances.recordidSetInt32">
            <summary>设置 Productstats.set_recordid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductstats.AllInstances.valueGet">
            <summary>设置 Productstats.get_value() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimProductstats.AllInstances.valueSetString">
            <summary>设置 Productstats.set_value(String value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimPurchaseOfferAccept">
            <summary>YunXiu.Model.PurchaseOfferAccept 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimPurchaseOfferAccept.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimPurchaseOfferAccept.#ctor(YunXiu.Model.PurchaseOfferAccept)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimPurchaseOfferAccept.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimPurchaseOfferAccept.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchaseOfferAccept.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchaseOfferAccept.Constructor">
            <summary>设置 PurchaseOfferAccept.PurchaseOfferAccept() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchaseOfferAccept.IDGet">
            <summary>设置 PurchaseOfferAccept.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchaseOfferAccept.IDSetInt32">
            <summary>设置 PurchaseOfferAccept.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchaseOfferAccept.OfferGet">
            <summary>设置 PurchaseOfferAccept.get_Offer() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchaseOfferAccept.OfferSetPurchasePlanOffer">
            <summary>设置 PurchaseOfferAccept.set_Offer(PurchasePlanOffer value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchaseOfferAccept.PlanGet">
            <summary>设置 PurchaseOfferAccept.get_Plan() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchaseOfferAccept.PlanSetPurchasePlan">
            <summary>设置 PurchaseOfferAccept.set_Plan(PurchasePlan value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchaseOfferAccept.StoreGet">
            <summary>设置 PurchaseOfferAccept.get_Store() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchaseOfferAccept.StoreSetStore">
            <summary>设置 PurchaseOfferAccept.set_Store(Store value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimPurchaseOfferAccept.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchaseOfferAccept.AllInstances.IDGet">
            <summary>设置 PurchaseOfferAccept.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchaseOfferAccept.AllInstances.IDSetInt32">
            <summary>设置 PurchaseOfferAccept.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchaseOfferAccept.AllInstances.OfferGet">
            <summary>设置 PurchaseOfferAccept.get_Offer() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchaseOfferAccept.AllInstances.OfferSetPurchasePlanOffer">
            <summary>设置 PurchaseOfferAccept.set_Offer(PurchasePlanOffer value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchaseOfferAccept.AllInstances.PlanGet">
            <summary>设置 PurchaseOfferAccept.get_Plan() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchaseOfferAccept.AllInstances.PlanSetPurchasePlan">
            <summary>设置 PurchaseOfferAccept.set_Plan(PurchasePlan value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchaseOfferAccept.AllInstances.StoreGet">
            <summary>设置 PurchaseOfferAccept.get_Store() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchaseOfferAccept.AllInstances.StoreSetStore">
            <summary>设置 PurchaseOfferAccept.set_Store(Store value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimPurchasePlan">
            <summary>YunXiu.Model.PurchasePlan 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimPurchasePlan.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimPurchasePlan.#ctor(YunXiu.Model.PurchasePlan)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimPurchasePlan.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimPurchasePlan.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.Constructor">
            <summary>设置 PurchasePlan.PurchasePlan() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.ContantNameGet">
            <summary>设置 PurchasePlan.get_ContantName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.ContantNameSetString">
            <summary>设置 PurchasePlan.set_ContantName(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.ContantWayGet">
            <summary>设置 PurchasePlan.get_ContantWay() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.ContantWaySetString">
            <summary>设置 PurchasePlan.set_ContantWay(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.EndDateTimeGet">
            <summary>设置 PurchasePlan.get_EndDateTime() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.EndDateTimeSetDateTime">
            <summary>设置 PurchasePlan.set_EndDateTime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.HopePriceGet">
            <summary>设置 PurchasePlan.get_HopePrice() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.HopePriceSetDecimal">
            <summary>设置 PurchasePlan.set_HopePrice(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.PNameGet">
            <summary>设置 PurchasePlan.get_PName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.PNameSetString">
            <summary>设置 PurchasePlan.set_PName(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.PPIdGet">
            <summary>设置 PurchasePlan.get_PPId() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.PPIdSetInt32">
            <summary>设置 PurchasePlan.set_PPId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.PurchaseDetailsGet">
            <summary>设置 PurchasePlan.get_PurchaseDetails() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.PurchaseDetailsSetString">
            <summary>设置 PurchasePlan.set_PurchaseDetails(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.PurchaseNameGet">
            <summary>设置 PurchasePlan.get_PurchaseName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.PurchaseNameSetString">
            <summary>设置 PurchasePlan.set_PurchaseName(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.PurchaseTypeGet">
            <summary>设置 PurchasePlan.get_PurchaseType() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.PurchaseTypeSetCategory">
            <summary>设置 PurchasePlan.set_PurchaseType(Category value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.QtyGet">
            <summary>设置 PurchasePlan.get_Qty() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.QtySetInt32">
            <summary>设置 PurchasePlan.set_Qty(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.RequestContantGet">
            <summary>设置 PurchasePlan.get_RequestContant() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.RequestContantSetString">
            <summary>设置 PurchasePlan.set_RequestContant(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.RequestManufactureAreaGet">
            <summary>设置 PurchasePlan.get_RequestManufactureArea() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.RequestManufactureAreaSetString">
            <summary>设置 PurchasePlan.set_RequestManufactureArea(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.RequestReceiveAreaGet">
            <summary>设置 PurchasePlan.get_RequestReceiveArea() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.RequestReceiveAreaSetString">
            <summary>设置 PurchasePlan.set_RequestReceiveArea(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.SpecGet">
            <summary>设置 PurchasePlan.get_Spec() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.SpecSetString">
            <summary>设置 PurchasePlan.set_Spec(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.StateGet">
            <summary>设置 PurchasePlan.get_State() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.StateSetString">
            <summary>设置 PurchasePlan.set_State(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.TitleGet">
            <summary>设置 PurchasePlan.get_Title() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.TitleSetString">
            <summary>设置 PurchasePlan.set_Title(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.UnitGet">
            <summary>设置 PurchasePlan.get_Unit() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.UnitSetString">
            <summary>设置 PurchasePlan.set_Unit(String value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimPurchasePlan.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.AllInstances.ContantNameGet">
            <summary>设置 PurchasePlan.get_ContantName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.AllInstances.ContantNameSetString">
            <summary>设置 PurchasePlan.set_ContantName(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.AllInstances.ContantWayGet">
            <summary>设置 PurchasePlan.get_ContantWay() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.AllInstances.ContantWaySetString">
            <summary>设置 PurchasePlan.set_ContantWay(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.AllInstances.EndDateTimeGet">
            <summary>设置 PurchasePlan.get_EndDateTime() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.AllInstances.EndDateTimeSetDateTime">
            <summary>设置 PurchasePlan.set_EndDateTime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.AllInstances.HopePriceGet">
            <summary>设置 PurchasePlan.get_HopePrice() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.AllInstances.HopePriceSetDecimal">
            <summary>设置 PurchasePlan.set_HopePrice(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.AllInstances.PNameGet">
            <summary>设置 PurchasePlan.get_PName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.AllInstances.PNameSetString">
            <summary>设置 PurchasePlan.set_PName(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.AllInstances.PPIdGet">
            <summary>设置 PurchasePlan.get_PPId() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.AllInstances.PPIdSetInt32">
            <summary>设置 PurchasePlan.set_PPId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.AllInstances.PurchaseDetailsGet">
            <summary>设置 PurchasePlan.get_PurchaseDetails() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.AllInstances.PurchaseDetailsSetString">
            <summary>设置 PurchasePlan.set_PurchaseDetails(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.AllInstances.PurchaseNameGet">
            <summary>设置 PurchasePlan.get_PurchaseName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.AllInstances.PurchaseNameSetString">
            <summary>设置 PurchasePlan.set_PurchaseName(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.AllInstances.PurchaseTypeGet">
            <summary>设置 PurchasePlan.get_PurchaseType() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.AllInstances.PurchaseTypeSetCategory">
            <summary>设置 PurchasePlan.set_PurchaseType(Category value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.AllInstances.QtyGet">
            <summary>设置 PurchasePlan.get_Qty() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.AllInstances.QtySetInt32">
            <summary>设置 PurchasePlan.set_Qty(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.AllInstances.RequestContantGet">
            <summary>设置 PurchasePlan.get_RequestContant() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.AllInstances.RequestContantSetString">
            <summary>设置 PurchasePlan.set_RequestContant(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.AllInstances.RequestManufactureAreaGet">
            <summary>设置 PurchasePlan.get_RequestManufactureArea() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.AllInstances.RequestManufactureAreaSetString">
            <summary>设置 PurchasePlan.set_RequestManufactureArea(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.AllInstances.RequestReceiveAreaGet">
            <summary>设置 PurchasePlan.get_RequestReceiveArea() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.AllInstances.RequestReceiveAreaSetString">
            <summary>设置 PurchasePlan.set_RequestReceiveArea(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.AllInstances.SpecGet">
            <summary>设置 PurchasePlan.get_Spec() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.AllInstances.SpecSetString">
            <summary>设置 PurchasePlan.set_Spec(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.AllInstances.StateGet">
            <summary>设置 PurchasePlan.get_State() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.AllInstances.StateSetString">
            <summary>设置 PurchasePlan.set_State(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.AllInstances.TitleGet">
            <summary>设置 PurchasePlan.get_Title() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.AllInstances.TitleSetString">
            <summary>设置 PurchasePlan.set_Title(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.AllInstances.UnitGet">
            <summary>设置 PurchasePlan.get_Unit() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlan.AllInstances.UnitSetString">
            <summary>设置 PurchasePlan.set_Unit(String value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimPurchasePlanModel">
            <summary>YunXiu.Model.PurchasePlanModel 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimPurchasePlanModel.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimPurchasePlanModel.#ctor(YunXiu.Model.PurchasePlanModel)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimPurchasePlanModel.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimPurchasePlanModel.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlanModel.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlanModel.Constructor">
            <summary>设置 PurchasePlanModel.PurchasePlanModel() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlanModel.ExtListGet">
            <summary>设置 PurchasePlanModel.get_ExtList() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlanModel.ExtListSetListOfExtTable">
            <summary>设置 PurchasePlanModel.set_ExtList(List`1&lt;ExtTable&gt; value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlanModel.ItemGet">
            <summary>设置 PurchasePlanModel.get_Item() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlanModel.ItemSetPurchasePlan">
            <summary>设置 PurchasePlanModel.set_Item(PurchasePlan value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimPurchasePlanModel.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlanModel.AllInstances.ExtListGet">
            <summary>设置 PurchasePlanModel.get_ExtList() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlanModel.AllInstances.ExtListSetListOfExtTable">
            <summary>设置 PurchasePlanModel.set_ExtList(List`1&lt;ExtTable&gt; value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlanModel.AllInstances.ItemGet">
            <summary>设置 PurchasePlanModel.get_Item() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlanModel.AllInstances.ItemSetPurchasePlan">
            <summary>设置 PurchasePlanModel.set_Item(PurchasePlan value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimPurchasePlanOffer">
            <summary>YunXiu.Model.PurchasePlanOffer 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimPurchasePlanOffer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimPurchasePlanOffer.#ctor(YunXiu.Model.PurchasePlanOffer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimPurchasePlanOffer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimPurchasePlanOffer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlanOffer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlanOffer.Constructor">
            <summary>设置 PurchasePlanOffer.PurchasePlanOffer() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlanOffer.IDGet">
            <summary>设置 PurchasePlanOffer.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlanOffer.IDSetInt32">
            <summary>设置 PurchasePlanOffer.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlanOffer.IsOfferGet">
            <summary>设置 PurchasePlanOffer.get_IsOffer() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlanOffer.IsOfferSetBoolean">
            <summary>设置 PurchasePlanOffer.set_IsOffer(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlanOffer.OfferGet">
            <summary>设置 PurchasePlanOffer.get_Offer() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlanOffer.OfferSetDecimal">
            <summary>设置 PurchasePlanOffer.set_Offer(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlanOffer.PlanGet">
            <summary>设置 PurchasePlanOffer.get_Plan() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlanOffer.PlanSetPurchasePlan">
            <summary>设置 PurchasePlanOffer.set_Plan(PurchasePlan value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlanOffer.RemarkGet">
            <summary>设置 PurchasePlanOffer.get_Remark() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlanOffer.RemarkSetString">
            <summary>设置 PurchasePlanOffer.set_Remark(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlanOffer.StoreGet">
            <summary>设置 PurchasePlanOffer.get_Store() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlanOffer.StoreSetStore">
            <summary>设置 PurchasePlanOffer.set_Store(Store value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimPurchasePlanOffer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlanOffer.AllInstances.IDGet">
            <summary>设置 PurchasePlanOffer.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlanOffer.AllInstances.IDSetInt32">
            <summary>设置 PurchasePlanOffer.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlanOffer.AllInstances.IsOfferGet">
            <summary>设置 PurchasePlanOffer.get_IsOffer() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlanOffer.AllInstances.IsOfferSetBoolean">
            <summary>设置 PurchasePlanOffer.set_IsOffer(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlanOffer.AllInstances.OfferGet">
            <summary>设置 PurchasePlanOffer.get_Offer() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlanOffer.AllInstances.OfferSetDecimal">
            <summary>设置 PurchasePlanOffer.set_Offer(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlanOffer.AllInstances.PlanGet">
            <summary>设置 PurchasePlanOffer.get_Plan() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlanOffer.AllInstances.PlanSetPurchasePlan">
            <summary>设置 PurchasePlanOffer.set_Plan(PurchasePlan value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlanOffer.AllInstances.RemarkGet">
            <summary>设置 PurchasePlanOffer.get_Remark() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlanOffer.AllInstances.RemarkSetString">
            <summary>设置 PurchasePlanOffer.set_Remark(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlanOffer.AllInstances.StoreGet">
            <summary>设置 PurchasePlanOffer.get_Store() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlanOffer.AllInstances.StoreSetStore">
            <summary>设置 PurchasePlanOffer.set_Store(Store value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimPurchasePlanView">
            <summary>YunXiu.Model.PurchasePlanView 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimPurchasePlanView.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimPurchasePlanView.#ctor(YunXiu.Model.PurchasePlanView)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimPurchasePlanView.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimPurchasePlanView.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlanView.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlanView.Constructor">
            <summary>设置 PurchasePlanView.PurchasePlanView() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlanView.ExtListGet">
            <summary>设置 PurchasePlanView.get_ExtList() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlanView.ExtListSetListOfExtTable">
            <summary>设置 PurchasePlanView.set_ExtList(List`1&lt;ExtTable&gt; value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlanView.PlanItemGet">
            <summary>设置 PurchasePlanView.get_PlanItem() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlanView.PlanItemSetPurchasePlan">
            <summary>设置 PurchasePlanView.set_PlanItem(PurchasePlan value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimPurchasePlanView.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlanView.AllInstances.ExtListGet">
            <summary>设置 PurchasePlanView.get_ExtList() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlanView.AllInstances.ExtListSetListOfExtTable">
            <summary>设置 PurchasePlanView.set_ExtList(List`1&lt;ExtTable&gt; value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlanView.AllInstances.PlanItemGet">
            <summary>设置 PurchasePlanView.get_PlanItem() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPurchasePlanView.AllInstances.PlanItemSetPurchasePlan">
            <summary>设置 PurchasePlanView.set_PlanItem(PurchasePlan value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimPvstats">
            <summary>YunXiu.Model.Pvstats 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimPvstats.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimPvstats.#ctor(YunXiu.Model.Pvstats)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimPvstats.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimPvstats.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPvstats.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPvstats.Constructor">
            <summary>设置 Pvstats.Pvstats() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPvstats.categoryGet">
            <summary>设置 Pvstats.get_category() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPvstats.categorySetString">
            <summary>设置 Pvstats.set_category(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPvstats.countGet">
            <summary>设置 Pvstats.get_count() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPvstats.countSetInt32">
            <summary>设置 Pvstats.set_count(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPvstats.recordidGet">
            <summary>设置 Pvstats.get_recordid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPvstats.recordidSetInt32">
            <summary>设置 Pvstats.set_recordid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPvstats.storeidGet">
            <summary>设置 Pvstats.get_storeid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPvstats.storeidSetInt32">
            <summary>设置 Pvstats.set_storeid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPvstats.valueGet">
            <summary>设置 Pvstats.get_value() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPvstats.valueSetString">
            <summary>设置 Pvstats.set_value(String value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimPvstats.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPvstats.AllInstances.categoryGet">
            <summary>设置 Pvstats.get_category() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPvstats.AllInstances.categorySetString">
            <summary>设置 Pvstats.set_category(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPvstats.AllInstances.countGet">
            <summary>设置 Pvstats.get_count() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPvstats.AllInstances.countSetInt32">
            <summary>设置 Pvstats.set_count(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPvstats.AllInstances.recordidGet">
            <summary>设置 Pvstats.get_recordid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPvstats.AllInstances.recordidSetInt32">
            <summary>设置 Pvstats.set_recordid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPvstats.AllInstances.storeidGet">
            <summary>设置 Pvstats.get_storeid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPvstats.AllInstances.storeidSetInt32">
            <summary>设置 Pvstats.set_storeid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPvstats.AllInstances.valueGet">
            <summary>设置 Pvstats.get_value() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimPvstats.AllInstances.valueSetString">
            <summary>设置 Pvstats.set_value(String value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimReceiptAddress">
            <summary>YunXiu.Model.ReceiptAddress 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimReceiptAddress.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimReceiptAddress.#ctor(YunXiu.Model.ReceiptAddress)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimReceiptAddress.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimReceiptAddress.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.AddrGet">
            <summary>设置 ReceiptAddress.get_Addr() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.AddrSetString">
            <summary>设置 ReceiptAddress.set_Addr(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.CityGet">
            <summary>设置 ReceiptAddress.get_City() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.CitySetString">
            <summary>设置 ReceiptAddress.set_City(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.ConsigneeNameGet">
            <summary>设置 ReceiptAddress.get_ConsigneeName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.ConsigneeNameSetString">
            <summary>设置 ReceiptAddress.set_ConsigneeName(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.ConsigneePhoneGet">
            <summary>设置 ReceiptAddress.get_ConsigneePhone() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.ConsigneePhoneSetString">
            <summary>设置 ReceiptAddress.set_ConsigneePhone(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.Constructor">
            <summary>设置 ReceiptAddress.ReceiptAddress() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.DistrictGet">
            <summary>设置 ReceiptAddress.get_District() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.DistrictSetString">
            <summary>设置 ReceiptAddress.set_District(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.IDGet">
            <summary>设置 ReceiptAddress.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.IDSetInt32">
            <summary>设置 ReceiptAddress.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.IsDefaultGet">
            <summary>设置 ReceiptAddress.get_IsDefault() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.IsDefaultSetBoolean">
            <summary>设置 ReceiptAddress.set_IsDefault(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.ProvinceGet">
            <summary>设置 ReceiptAddress.get_Province() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.ProvinceSetString">
            <summary>设置 ReceiptAddress.set_Province(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.RegionGet">
            <summary>设置 ReceiptAddress.get_Region() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.RegionSetString">
            <summary>设置 ReceiptAddress.set_Region(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.StreetGet">
            <summary>设置 ReceiptAddress.get_Street() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.StreetSetString">
            <summary>设置 ReceiptAddress.set_Street(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.UserGet">
            <summary>设置 ReceiptAddress.get_User() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.UserSetUser">
            <summary>设置 ReceiptAddress.set_User(User value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.ZipCodeGet">
            <summary>设置 ReceiptAddress.get_ZipCode() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.ZipCodeSetString">
            <summary>设置 ReceiptAddress.set_ZipCode(String value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimReceiptAddress.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.AllInstances.AddrGet">
            <summary>设置 ReceiptAddress.get_Addr() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.AllInstances.AddrSetString">
            <summary>设置 ReceiptAddress.set_Addr(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.AllInstances.CityGet">
            <summary>设置 ReceiptAddress.get_City() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.AllInstances.CitySetString">
            <summary>设置 ReceiptAddress.set_City(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.AllInstances.ConsigneeNameGet">
            <summary>设置 ReceiptAddress.get_ConsigneeName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.AllInstances.ConsigneeNameSetString">
            <summary>设置 ReceiptAddress.set_ConsigneeName(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.AllInstances.ConsigneePhoneGet">
            <summary>设置 ReceiptAddress.get_ConsigneePhone() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.AllInstances.ConsigneePhoneSetString">
            <summary>设置 ReceiptAddress.set_ConsigneePhone(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.AllInstances.DistrictGet">
            <summary>设置 ReceiptAddress.get_District() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.AllInstances.DistrictSetString">
            <summary>设置 ReceiptAddress.set_District(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.AllInstances.IDGet">
            <summary>设置 ReceiptAddress.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.AllInstances.IDSetInt32">
            <summary>设置 ReceiptAddress.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.AllInstances.IsDefaultGet">
            <summary>设置 ReceiptAddress.get_IsDefault() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.AllInstances.IsDefaultSetBoolean">
            <summary>设置 ReceiptAddress.set_IsDefault(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.AllInstances.ProvinceGet">
            <summary>设置 ReceiptAddress.get_Province() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.AllInstances.ProvinceSetString">
            <summary>设置 ReceiptAddress.set_Province(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.AllInstances.RegionGet">
            <summary>设置 ReceiptAddress.get_Region() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.AllInstances.RegionSetString">
            <summary>设置 ReceiptAddress.set_Region(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.AllInstances.StreetGet">
            <summary>设置 ReceiptAddress.get_Street() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.AllInstances.StreetSetString">
            <summary>设置 ReceiptAddress.set_Street(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.AllInstances.UserGet">
            <summary>设置 ReceiptAddress.get_User() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.AllInstances.UserSetUser">
            <summary>设置 ReceiptAddress.set_User(User value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.AllInstances.ZipCodeGet">
            <summary>设置 ReceiptAddress.get_ZipCode() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimReceiptAddress.AllInstances.ZipCodeSetString">
            <summary>设置 ReceiptAddress.set_ZipCode(String value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimRefundProducts">
            <summary>YunXiu.Model.RefundProducts 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimRefundProducts.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimRefundProducts.#ctor(YunXiu.Model.RefundProducts)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimRefundProducts.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimRefundProducts.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.ApplyReasonGet">
            <summary>设置 RefundProducts.get_ApplyReason() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.ApplyReasonSetString">
            <summary>设置 RefundProducts.set_ApplyReason(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.ApplyRemarkGet">
            <summary>设置 RefundProducts.get_ApplyRemark() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.ApplyRemarkSetString">
            <summary>设置 RefundProducts.set_ApplyRemark(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.Constructor">
            <summary>设置 RefundProducts.RefundProducts() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.LogisticeTimeGet">
            <summary>设置 RefundProducts.get_LogisticeTime() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.LogisticeTimeSetDateTime">
            <summary>设置 RefundProducts.set_LogisticeTime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.LogisticsNoGet">
            <summary>设置 RefundProducts.get_LogisticsNo() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.LogisticsNoSetString">
            <summary>设置 RefundProducts.set_LogisticsNo(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.OidGet">
            <summary>设置 RefundProducts.get_Oid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.OidSetInt32">
            <summary>设置 RefundProducts.set_Oid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.PhosGet">
            <summary>设置 RefundProducts.get_Phos() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.PhosSetString">
            <summary>设置 RefundProducts.set_Phos(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.PidGet">
            <summary>设置 RefundProducts.get_Pid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.PidSetInt32">
            <summary>设置 RefundProducts.set_Pid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.RefundProductIdGet">
            <summary>设置 RefundProducts.get_RefundProductId() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.RefundProductIdSetInt32">
            <summary>设置 RefundProducts.set_RefundProductId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.RefundmoneyGet">
            <summary>设置 RefundProducts.get_Refundmoney() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.RefundmoneySetDecimal">
            <summary>设置 RefundProducts.set_Refundmoney(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.ResultRemarkGet">
            <summary>设置 RefundProducts.get_ResultRemark() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.ResultRemarkSetString">
            <summary>设置 RefundProducts.set_ResultRemark(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.ReturnLogisticsNameGet">
            <summary>设置 RefundProducts.get_ReturnLogisticsName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.ReturnLogisticsNameSetString">
            <summary>设置 RefundProducts.set_ReturnLogisticsName(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.StoreidGet">
            <summary>设置 RefundProducts.get_Storeid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.StoreidSetInt32">
            <summary>设置 RefundProducts.set_Storeid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.UidGet">
            <summary>设置 RefundProducts.get_Uid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.UidSetInt32">
            <summary>设置 RefundProducts.set_Uid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.applytimeGet">
            <summary>设置 RefundProducts.get_applytime() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.applytimeSetDateTime">
            <summary>设置 RefundProducts.set_applytime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.payfriendnameGet">
            <summary>设置 RefundProducts.get_payfriendname() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.payfriendnameSetString">
            <summary>设置 RefundProducts.set_payfriendname(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.paysnGet">
            <summary>设置 RefundProducts.get_paysn() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.paysnSetString">
            <summary>设置 RefundProducts.set_paysn(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.paysystemnameGet">
            <summary>设置 RefundProducts.get_paysystemname() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.paysystemnameSetString">
            <summary>设置 RefundProducts.set_paysystemname(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.refundfriendnameGet">
            <summary>设置 RefundProducts.get_refundfriendname() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.refundfriendnameSetString">
            <summary>设置 RefundProducts.set_refundfriendname(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.refundsnGet">
            <summary>设置 RefundProducts.get_refundsn() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.refundsnSetString">
            <summary>设置 RefundProducts.set_refundsn(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.refundsystemnameGet">
            <summary>设置 RefundProducts.get_refundsystemname() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.refundsystemnameSetString">
            <summary>设置 RefundProducts.set_refundsystemname(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.refundtimeGet">
            <summary>设置 RefundProducts.get_refundtime() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.refundtimeSetDateTime">
            <summary>设置 RefundProducts.set_refundtime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.stateGet">
            <summary>设置 RefundProducts.get_state() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.stateSetInt32">
            <summary>设置 RefundProducts.set_state(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimRefundProducts.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.AllInstances.ApplyReasonGet">
            <summary>设置 RefundProducts.get_ApplyReason() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.AllInstances.ApplyReasonSetString">
            <summary>设置 RefundProducts.set_ApplyReason(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.AllInstances.ApplyRemarkGet">
            <summary>设置 RefundProducts.get_ApplyRemark() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.AllInstances.ApplyRemarkSetString">
            <summary>设置 RefundProducts.set_ApplyRemark(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.AllInstances.LogisticeTimeGet">
            <summary>设置 RefundProducts.get_LogisticeTime() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.AllInstances.LogisticeTimeSetDateTime">
            <summary>设置 RefundProducts.set_LogisticeTime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.AllInstances.LogisticsNoGet">
            <summary>设置 RefundProducts.get_LogisticsNo() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.AllInstances.LogisticsNoSetString">
            <summary>设置 RefundProducts.set_LogisticsNo(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.AllInstances.OidGet">
            <summary>设置 RefundProducts.get_Oid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.AllInstances.OidSetInt32">
            <summary>设置 RefundProducts.set_Oid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.AllInstances.PhosGet">
            <summary>设置 RefundProducts.get_Phos() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.AllInstances.PhosSetString">
            <summary>设置 RefundProducts.set_Phos(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.AllInstances.PidGet">
            <summary>设置 RefundProducts.get_Pid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.AllInstances.PidSetInt32">
            <summary>设置 RefundProducts.set_Pid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.AllInstances.RefundProductIdGet">
            <summary>设置 RefundProducts.get_RefundProductId() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.AllInstances.RefundProductIdSetInt32">
            <summary>设置 RefundProducts.set_RefundProductId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.AllInstances.RefundmoneyGet">
            <summary>设置 RefundProducts.get_Refundmoney() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.AllInstances.RefundmoneySetDecimal">
            <summary>设置 RefundProducts.set_Refundmoney(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.AllInstances.ResultRemarkGet">
            <summary>设置 RefundProducts.get_ResultRemark() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.AllInstances.ResultRemarkSetString">
            <summary>设置 RefundProducts.set_ResultRemark(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.AllInstances.ReturnLogisticsNameGet">
            <summary>设置 RefundProducts.get_ReturnLogisticsName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.AllInstances.ReturnLogisticsNameSetString">
            <summary>设置 RefundProducts.set_ReturnLogisticsName(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.AllInstances.StoreidGet">
            <summary>设置 RefundProducts.get_Storeid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.AllInstances.StoreidSetInt32">
            <summary>设置 RefundProducts.set_Storeid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.AllInstances.UidGet">
            <summary>设置 RefundProducts.get_Uid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.AllInstances.UidSetInt32">
            <summary>设置 RefundProducts.set_Uid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.AllInstances.applytimeGet">
            <summary>设置 RefundProducts.get_applytime() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.AllInstances.applytimeSetDateTime">
            <summary>设置 RefundProducts.set_applytime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.AllInstances.payfriendnameGet">
            <summary>设置 RefundProducts.get_payfriendname() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.AllInstances.payfriendnameSetString">
            <summary>设置 RefundProducts.set_payfriendname(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.AllInstances.paysnGet">
            <summary>设置 RefundProducts.get_paysn() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.AllInstances.paysnSetString">
            <summary>设置 RefundProducts.set_paysn(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.AllInstances.paysystemnameGet">
            <summary>设置 RefundProducts.get_paysystemname() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.AllInstances.paysystemnameSetString">
            <summary>设置 RefundProducts.set_paysystemname(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.AllInstances.refundfriendnameGet">
            <summary>设置 RefundProducts.get_refundfriendname() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.AllInstances.refundfriendnameSetString">
            <summary>设置 RefundProducts.set_refundfriendname(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.AllInstances.refundsnGet">
            <summary>设置 RefundProducts.get_refundsn() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.AllInstances.refundsnSetString">
            <summary>设置 RefundProducts.set_refundsn(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.AllInstances.refundsystemnameGet">
            <summary>设置 RefundProducts.get_refundsystemname() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.AllInstances.refundsystemnameSetString">
            <summary>设置 RefundProducts.set_refundsystemname(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.AllInstances.refundtimeGet">
            <summary>设置 RefundProducts.get_refundtime() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.AllInstances.refundtimeSetDateTime">
            <summary>设置 RefundProducts.set_refundtime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.AllInstances.stateGet">
            <summary>设置 RefundProducts.get_state() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRefundProducts.AllInstances.stateSetInt32">
            <summary>设置 RefundProducts.set_state(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimRegions">
            <summary>YunXiu.Model.Regions 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimRegions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimRegions.#ctor(YunXiu.Model.Regions)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimRegions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimRegions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRegions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRegions.Constructor">
            <summary>设置 Regions.Regions() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRegions.cityidGet">
            <summary>设置 Regions.get_cityid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRegions.cityidSetInt32">
            <summary>设置 Regions.set_cityid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRegions.citynameGet">
            <summary>设置 Regions.get_cityname() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRegions.citynameSetString">
            <summary>设置 Regions.set_cityname(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRegions.displayorderGet">
            <summary>设置 Regions.get_displayorder() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRegions.displayorderSetInt32">
            <summary>设置 Regions.set_displayorder(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRegions.layerGet">
            <summary>设置 Regions.get_layer() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRegions.layerSetInt32">
            <summary>设置 Regions.set_layer(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRegions.nameGet">
            <summary>设置 Regions.get_name() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRegions.nameSetString">
            <summary>设置 Regions.set_name(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRegions.parentidGet">
            <summary>设置 Regions.get_parentid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRegions.parentidSetInt32">
            <summary>设置 Regions.set_parentid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRegions.provinceidGet">
            <summary>设置 Regions.get_provinceid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRegions.provinceidSetInt32">
            <summary>设置 Regions.set_provinceid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRegions.provincenameGet">
            <summary>设置 Regions.get_provincename() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRegions.provincenameSetString">
            <summary>设置 Regions.set_provincename(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRegions.regionidGet">
            <summary>设置 Regions.get_regionid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRegions.regionidSetInt32">
            <summary>设置 Regions.set_regionid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRegions.shortspellGet">
            <summary>设置 Regions.get_shortspell() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRegions.shortspellSetString">
            <summary>设置 Regions.set_shortspell(String value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimRegions.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRegions.AllInstances.cityidGet">
            <summary>设置 Regions.get_cityid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRegions.AllInstances.cityidSetInt32">
            <summary>设置 Regions.set_cityid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRegions.AllInstances.citynameGet">
            <summary>设置 Regions.get_cityname() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRegions.AllInstances.citynameSetString">
            <summary>设置 Regions.set_cityname(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRegions.AllInstances.displayorderGet">
            <summary>设置 Regions.get_displayorder() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRegions.AllInstances.displayorderSetInt32">
            <summary>设置 Regions.set_displayorder(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRegions.AllInstances.layerGet">
            <summary>设置 Regions.get_layer() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRegions.AllInstances.layerSetInt32">
            <summary>设置 Regions.set_layer(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRegions.AllInstances.nameGet">
            <summary>设置 Regions.get_name() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRegions.AllInstances.nameSetString">
            <summary>设置 Regions.set_name(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRegions.AllInstances.parentidGet">
            <summary>设置 Regions.get_parentid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRegions.AllInstances.parentidSetInt32">
            <summary>设置 Regions.set_parentid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRegions.AllInstances.provinceidGet">
            <summary>设置 Regions.get_provinceid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRegions.AllInstances.provinceidSetInt32">
            <summary>设置 Regions.set_provinceid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRegions.AllInstances.provincenameGet">
            <summary>设置 Regions.get_provincename() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRegions.AllInstances.provincenameSetString">
            <summary>设置 Regions.set_provincename(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRegions.AllInstances.regionidGet">
            <summary>设置 Regions.get_regionid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRegions.AllInstances.regionidSetInt32">
            <summary>设置 Regions.set_regionid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRegions.AllInstances.shortspellGet">
            <summary>设置 Regions.get_shortspell() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRegions.AllInstances.shortspellSetString">
            <summary>设置 Regions.set_shortspell(String value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimRelateproducts">
            <summary>YunXiu.Model.Relateproducts 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimRelateproducts.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimRelateproducts.#ctor(YunXiu.Model.Relateproducts)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimRelateproducts.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimRelateproducts.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRelateproducts.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRelateproducts.Constructor">
            <summary>设置 Relateproducts.Relateproducts() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRelateproducts.pidGet">
            <summary>设置 Relateproducts.get_pid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRelateproducts.pidSetInt32">
            <summary>设置 Relateproducts.set_pid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRelateproducts.recordidGet">
            <summary>设置 Relateproducts.get_recordid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRelateproducts.recordidSetInt32">
            <summary>设置 Relateproducts.set_recordid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRelateproducts.relatepidGet">
            <summary>设置 Relateproducts.get_relatepid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRelateproducts.relatepidSetInt32">
            <summary>设置 Relateproducts.set_relatepid(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimRelateproducts.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRelateproducts.AllInstances.pidGet">
            <summary>设置 Relateproducts.get_pid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRelateproducts.AllInstances.pidSetInt32">
            <summary>设置 Relateproducts.set_pid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRelateproducts.AllInstances.recordidGet">
            <summary>设置 Relateproducts.get_recordid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRelateproducts.AllInstances.recordidSetInt32">
            <summary>设置 Relateproducts.set_recordid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRelateproducts.AllInstances.relatepidGet">
            <summary>设置 Relateproducts.get_relatepid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRelateproducts.AllInstances.relatepidSetInt32">
            <summary>设置 Relateproducts.set_relatepid(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimRole">
            <summary>YunXiu.Model.Role 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimRole.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimRole.#ctor(YunXiu.Model.Role)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimRole.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimRole.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRole.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRole.Constructor">
            <summary>设置 Role.Role() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRole.DescribeGet">
            <summary>设置 Role.get_Describe() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRole.DescribeSetString">
            <summary>设置 Role.set_Describe(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRole.RIDGet">
            <summary>设置 Role.get_RID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRole.RIDSetInt32">
            <summary>设置 Role.set_RID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRole.RNameGet">
            <summary>设置 Role.get_RName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRole.RNameSetString">
            <summary>设置 Role.set_RName(String value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimRole.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRole.AllInstances.DescribeGet">
            <summary>设置 Role.get_Describe() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRole.AllInstances.DescribeSetString">
            <summary>设置 Role.set_Describe(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRole.AllInstances.RIDGet">
            <summary>设置 Role.get_RID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRole.AllInstances.RIDSetInt32">
            <summary>设置 Role.set_RID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRole.AllInstances.RNameGet">
            <summary>设置 Role.get_RName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimRole.AllInstances.RNameSetString">
            <summary>设置 Role.set_RName(String value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimSMS">
            <summary>YunXiu.Model.SMS 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimSMS.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimSMS.#ctor(YunXiu.Model.SMS)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimSMS.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimSMS.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSMS.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSMS.Constructor">
            <summary>设置 SMS.SMS() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSMS.ContentGet">
            <summary>设置 SMS.get_Content() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSMS.ContentSetString">
            <summary>设置 SMS.set_Content(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSMS.PhonesGet">
            <summary>设置 SMS.get_Phones() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSMS.PhonesSetListOfString">
            <summary>设置 SMS.set_Phones(List`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimSMS.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSMS.AllInstances.ContentGet">
            <summary>设置 SMS.get_Content() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSMS.AllInstances.ContentSetString">
            <summary>设置 SMS.set_Content(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSMS.AllInstances.PhonesGet">
            <summary>设置 SMS.get_Phones() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSMS.AllInstances.PhonesSetListOfString">
            <summary>设置 SMS.set_Phones(List`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimSearchhistories">
            <summary>YunXiu.Model.Searchhistories 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimSearchhistories.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimSearchhistories.#ctor(YunXiu.Model.Searchhistories)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimSearchhistories.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimSearchhistories.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSearchhistories.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSearchhistories.Constructor">
            <summary>设置 Searchhistories.Searchhistories() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSearchhistories.LastSearchtimeGet">
            <summary>设置 Searchhistories.get_LastSearchtime() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSearchhistories.LastSearchtimeSetDateTime">
            <summary>设置 Searchhistories.set_LastSearchtime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSearchhistories.countGet">
            <summary>设置 Searchhistories.get_count() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSearchhistories.countSetInt32">
            <summary>设置 Searchhistories.set_count(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSearchhistories.recordidGet">
            <summary>设置 Searchhistories.get_recordid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSearchhistories.recordidSetInt32">
            <summary>设置 Searchhistories.set_recordid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSearchhistories.uidGet">
            <summary>设置 Searchhistories.get_uid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSearchhistories.uidSetInt32">
            <summary>设置 Searchhistories.set_uid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSearchhistories.wordGet">
            <summary>设置 Searchhistories.get_word() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSearchhistories.wordSetString">
            <summary>设置 Searchhistories.set_word(String value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimSearchhistories.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSearchhistories.AllInstances.LastSearchtimeGet">
            <summary>设置 Searchhistories.get_LastSearchtime() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSearchhistories.AllInstances.LastSearchtimeSetDateTime">
            <summary>设置 Searchhistories.set_LastSearchtime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSearchhistories.AllInstances.countGet">
            <summary>设置 Searchhistories.get_count() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSearchhistories.AllInstances.countSetInt32">
            <summary>设置 Searchhistories.set_count(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSearchhistories.AllInstances.recordidGet">
            <summary>设置 Searchhistories.get_recordid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSearchhistories.AllInstances.recordidSetInt32">
            <summary>设置 Searchhistories.set_recordid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSearchhistories.AllInstances.uidGet">
            <summary>设置 Searchhistories.get_uid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSearchhistories.AllInstances.uidSetInt32">
            <summary>设置 Searchhistories.set_uid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSearchhistories.AllInstances.wordGet">
            <summary>设置 Searchhistories.get_word() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSearchhistories.AllInstances.wordSetString">
            <summary>设置 Searchhistories.set_word(String value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimShipaddresses">
            <summary>YunXiu.Model.Shipaddresses 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimShipaddresses.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimShipaddresses.#ctor(YunXiu.Model.Shipaddresses)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimShipaddresses.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimShipaddresses.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipaddresses.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipaddresses.Constructor">
            <summary>设置 Shipaddresses.Shipaddresses() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipaddresses.addressGet">
            <summary>设置 Shipaddresses.get_address() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipaddresses.addressSetString">
            <summary>设置 Shipaddresses.set_address(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipaddresses.aliasGet">
            <summary>设置 Shipaddresses.get_alias() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipaddresses.aliasSetString">
            <summary>设置 Shipaddresses.set_alias(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipaddresses.consigneeGet">
            <summary>设置 Shipaddresses.get_consignee() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipaddresses.consigneeSetString">
            <summary>设置 Shipaddresses.set_consignee(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipaddresses.emailGet">
            <summary>设置 Shipaddresses.get_email() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipaddresses.emailSetString">
            <summary>设置 Shipaddresses.set_email(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipaddresses.isdefaultGet">
            <summary>设置 Shipaddresses.get_isdefault() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipaddresses.isdefaultSetInt32">
            <summary>设置 Shipaddresses.set_isdefault(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipaddresses.mobileGet">
            <summary>设置 Shipaddresses.get_mobile() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipaddresses.mobileSetString">
            <summary>设置 Shipaddresses.set_mobile(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipaddresses.phoneGet">
            <summary>设置 Shipaddresses.get_phone() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipaddresses.phoneSetString">
            <summary>设置 Shipaddresses.set_phone(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipaddresses.regionidGet">
            <summary>设置 Shipaddresses.get_regionid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipaddresses.regionidSetInt32">
            <summary>设置 Shipaddresses.set_regionid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipaddresses.saidGet">
            <summary>设置 Shipaddresses.get_said() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipaddresses.saidSetInt32">
            <summary>设置 Shipaddresses.set_said(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipaddresses.uidGet">
            <summary>设置 Shipaddresses.get_uid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipaddresses.uidSetInt32">
            <summary>设置 Shipaddresses.set_uid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipaddresses.zipcodeGet">
            <summary>设置 Shipaddresses.get_zipcode() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipaddresses.zipcodeSetString">
            <summary>设置 Shipaddresses.set_zipcode(String value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimShipaddresses.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipaddresses.AllInstances.addressGet">
            <summary>设置 Shipaddresses.get_address() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipaddresses.AllInstances.addressSetString">
            <summary>设置 Shipaddresses.set_address(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipaddresses.AllInstances.aliasGet">
            <summary>设置 Shipaddresses.get_alias() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipaddresses.AllInstances.aliasSetString">
            <summary>设置 Shipaddresses.set_alias(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipaddresses.AllInstances.consigneeGet">
            <summary>设置 Shipaddresses.get_consignee() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipaddresses.AllInstances.consigneeSetString">
            <summary>设置 Shipaddresses.set_consignee(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipaddresses.AllInstances.emailGet">
            <summary>设置 Shipaddresses.get_email() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipaddresses.AllInstances.emailSetString">
            <summary>设置 Shipaddresses.set_email(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipaddresses.AllInstances.isdefaultGet">
            <summary>设置 Shipaddresses.get_isdefault() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipaddresses.AllInstances.isdefaultSetInt32">
            <summary>设置 Shipaddresses.set_isdefault(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipaddresses.AllInstances.mobileGet">
            <summary>设置 Shipaddresses.get_mobile() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipaddresses.AllInstances.mobileSetString">
            <summary>设置 Shipaddresses.set_mobile(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipaddresses.AllInstances.phoneGet">
            <summary>设置 Shipaddresses.get_phone() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipaddresses.AllInstances.phoneSetString">
            <summary>设置 Shipaddresses.set_phone(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipaddresses.AllInstances.regionidGet">
            <summary>设置 Shipaddresses.get_regionid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipaddresses.AllInstances.regionidSetInt32">
            <summary>设置 Shipaddresses.set_regionid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipaddresses.AllInstances.saidGet">
            <summary>设置 Shipaddresses.get_said() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipaddresses.AllInstances.saidSetInt32">
            <summary>设置 Shipaddresses.set_said(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipaddresses.AllInstances.uidGet">
            <summary>设置 Shipaddresses.get_uid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipaddresses.AllInstances.uidSetInt32">
            <summary>设置 Shipaddresses.set_uid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipaddresses.AllInstances.zipcodeGet">
            <summary>设置 Shipaddresses.get_zipcode() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipaddresses.AllInstances.zipcodeSetString">
            <summary>设置 Shipaddresses.set_zipcode(String value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimShipcompanies">
            <summary>YunXiu.Model.Shipcompanies 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimShipcompanies.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimShipcompanies.#ctor(YunXiu.Model.Shipcompanies)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimShipcompanies.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimShipcompanies.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipcompanies.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipcompanies.Constructor">
            <summary>设置 Shipcompanies.Shipcompanies() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipcompanies.displayorderGet">
            <summary>设置 Shipcompanies.get_displayorder() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipcompanies.displayorderSetString">
            <summary>设置 Shipcompanies.set_displayorder(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipcompanies.nameGet">
            <summary>设置 Shipcompanies.get_name() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipcompanies.nameSetString">
            <summary>设置 Shipcompanies.set_name(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipcompanies.shipcoidGet">
            <summary>设置 Shipcompanies.get_shipcoid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipcompanies.shipcoidSetInt32">
            <summary>设置 Shipcompanies.set_shipcoid(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimShipcompanies.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipcompanies.AllInstances.displayorderGet">
            <summary>设置 Shipcompanies.get_displayorder() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipcompanies.AllInstances.displayorderSetString">
            <summary>设置 Shipcompanies.set_displayorder(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipcompanies.AllInstances.nameGet">
            <summary>设置 Shipcompanies.get_name() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipcompanies.AllInstances.nameSetString">
            <summary>设置 Shipcompanies.set_name(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipcompanies.AllInstances.shipcoidGet">
            <summary>设置 Shipcompanies.get_shipcoid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShipcompanies.AllInstances.shipcoidSetInt32">
            <summary>设置 Shipcompanies.set_shipcoid(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimShoppingCart">
            <summary>YunXiu.Model.ShoppingCart 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimShoppingCart.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimShoppingCart.#ctor(YunXiu.Model.ShoppingCart)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimShoppingCart.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimShoppingCart.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShoppingCart.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShoppingCart.Constructor">
            <summary>设置 ShoppingCart.ShoppingCart() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShoppingCart.NumberGet">
            <summary>设置 ShoppingCart.get_Number() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShoppingCart.NumberSetInt32">
            <summary>设置 ShoppingCart.set_Number(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShoppingCart.ProductGet">
            <summary>设置 ShoppingCart.get_Product() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShoppingCart.ProductSetProduct">
            <summary>设置 ShoppingCart.set_Product(Product value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShoppingCart.SIDGet">
            <summary>设置 ShoppingCart.get_SID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShoppingCart.SIDSetInt32">
            <summary>设置 ShoppingCart.set_SID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShoppingCart.UserGet">
            <summary>设置 ShoppingCart.get_User() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShoppingCart.UserSetUser">
            <summary>设置 ShoppingCart.set_User(User value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimShoppingCart.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShoppingCart.AllInstances.NumberGet">
            <summary>设置 ShoppingCart.get_Number() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShoppingCart.AllInstances.NumberSetInt32">
            <summary>设置 ShoppingCart.set_Number(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShoppingCart.AllInstances.ProductGet">
            <summary>设置 ShoppingCart.get_Product() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShoppingCart.AllInstances.ProductSetProduct">
            <summary>设置 ShoppingCart.set_Product(Product value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShoppingCart.AllInstances.SIDGet">
            <summary>设置 ShoppingCart.get_SID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShoppingCart.AllInstances.SIDSetInt32">
            <summary>设置 ShoppingCart.set_SID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShoppingCart.AllInstances.UserGet">
            <summary>设置 ShoppingCart.get_User() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimShoppingCart.AllInstances.UserSetUser">
            <summary>设置 ShoppingCart.set_User(User value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimSinglepromotions">
            <summary>YunXiu.Model.Singlepromotions 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimSinglepromotions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimSinglepromotions.#ctor(YunXiu.Model.Singlepromotions)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimSinglepromotions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimSinglepromotions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.Constructor">
            <summary>设置 Singlepromotions.Singlepromotions() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.allowbuycountGet">
            <summary>设置 Singlepromotions.get_allowbuycount() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.allowbuycountSetInt32">
            <summary>设置 Singlepromotions.set_allowbuycount(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.coupontypeidGet">
            <summary>设置 Singlepromotions.get_coupontypeid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.coupontypeidSetInt32">
            <summary>设置 Singlepromotions.set_coupontypeid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.discounttypeGet">
            <summary>设置 Singlepromotions.get_discounttype() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.discounttypeSetInt32">
            <summary>设置 Singlepromotions.set_discounttype(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.discountvalueGet">
            <summary>设置 Singlepromotions.get_discountvalue() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.discountvalueSetDecimal">
            <summary>设置 Singlepromotions.set_discountvalue(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.endtime1Get">
            <summary>设置 Singlepromotions.get_endtime1() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.endtime1SetDateTime">
            <summary>设置 Singlepromotions.set_endtime1(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.endtime2Get">
            <summary>设置 Singlepromotions.get_endtime2() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.endtime2SetDateTime">
            <summary>设置 Singlepromotions.set_endtime2(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.endtime3Get">
            <summary>设置 Singlepromotions.get_endtime3() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.endtime3SetDateTime">
            <summary>设置 Singlepromotions.set_endtime3(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.isstockGet">
            <summary>设置 Singlepromotions.get_isstock() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.isstockSetInt32">
            <summary>设置 Singlepromotions.set_isstock(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.nameGet">
            <summary>设置 Singlepromotions.get_name() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.nameSetString">
            <summary>设置 Singlepromotions.set_name(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.paycreditsGet">
            <summary>设置 Singlepromotions.get_paycredits() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.paycreditsSetInt32">
            <summary>设置 Singlepromotions.set_paycredits(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.pidGet">
            <summary>设置 Singlepromotions.get_pid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.pidSetInt32">
            <summary>设置 Singlepromotions.set_pid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.pmidGet">
            <summary>设置 Singlepromotions.get_pmid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.pmidSetInt32">
            <summary>设置 Singlepromotions.set_pmid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.quotalowerGet">
            <summary>设置 Singlepromotions.get_quotalower() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.quotalowerSetInt32">
            <summary>设置 Singlepromotions.set_quotalower(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.quotaupperGet">
            <summary>设置 Singlepromotions.get_quotaupper() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.quotaupperSetInt32">
            <summary>设置 Singlepromotions.set_quotaupper(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.sloganGet">
            <summary>设置 Singlepromotions.get_slogan() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.sloganSetString">
            <summary>设置 Singlepromotions.set_slogan(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.starttime1Get">
            <summary>设置 Singlepromotions.get_starttime1() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.starttime1SetDateTime">
            <summary>设置 Singlepromotions.set_starttime1(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.starttime2Get">
            <summary>设置 Singlepromotions.get_starttime2() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.starttime2SetDateTime">
            <summary>设置 Singlepromotions.set_starttime2(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.starttime3Get">
            <summary>设置 Singlepromotions.get_starttime3() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.starttime3SetDateTime">
            <summary>设置 Singlepromotions.set_starttime3(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.stateGet">
            <summary>设置 Singlepromotions.get_state() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.stateSetInt32">
            <summary>设置 Singlepromotions.set_state(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.stockGet">
            <summary>设置 Singlepromotions.get_stock() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.stockSetInt32">
            <summary>设置 Singlepromotions.set_stock(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.storeidGet">
            <summary>设置 Singlepromotions.get_storeid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.storeidSetInt32">
            <summary>设置 Singlepromotions.set_storeid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.userranklowerGet">
            <summary>设置 Singlepromotions.get_userranklower() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.userranklowerSetInt32">
            <summary>设置 Singlepromotions.set_userranklower(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimSinglepromotions.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.AllInstances.allowbuycountGet">
            <summary>设置 Singlepromotions.get_allowbuycount() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.AllInstances.allowbuycountSetInt32">
            <summary>设置 Singlepromotions.set_allowbuycount(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.AllInstances.coupontypeidGet">
            <summary>设置 Singlepromotions.get_coupontypeid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.AllInstances.coupontypeidSetInt32">
            <summary>设置 Singlepromotions.set_coupontypeid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.AllInstances.discounttypeGet">
            <summary>设置 Singlepromotions.get_discounttype() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.AllInstances.discounttypeSetInt32">
            <summary>设置 Singlepromotions.set_discounttype(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.AllInstances.discountvalueGet">
            <summary>设置 Singlepromotions.get_discountvalue() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.AllInstances.discountvalueSetDecimal">
            <summary>设置 Singlepromotions.set_discountvalue(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.AllInstances.endtime1Get">
            <summary>设置 Singlepromotions.get_endtime1() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.AllInstances.endtime1SetDateTime">
            <summary>设置 Singlepromotions.set_endtime1(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.AllInstances.endtime2Get">
            <summary>设置 Singlepromotions.get_endtime2() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.AllInstances.endtime2SetDateTime">
            <summary>设置 Singlepromotions.set_endtime2(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.AllInstances.endtime3Get">
            <summary>设置 Singlepromotions.get_endtime3() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.AllInstances.endtime3SetDateTime">
            <summary>设置 Singlepromotions.set_endtime3(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.AllInstances.isstockGet">
            <summary>设置 Singlepromotions.get_isstock() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.AllInstances.isstockSetInt32">
            <summary>设置 Singlepromotions.set_isstock(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.AllInstances.nameGet">
            <summary>设置 Singlepromotions.get_name() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.AllInstances.nameSetString">
            <summary>设置 Singlepromotions.set_name(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.AllInstances.paycreditsGet">
            <summary>设置 Singlepromotions.get_paycredits() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.AllInstances.paycreditsSetInt32">
            <summary>设置 Singlepromotions.set_paycredits(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.AllInstances.pidGet">
            <summary>设置 Singlepromotions.get_pid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.AllInstances.pidSetInt32">
            <summary>设置 Singlepromotions.set_pid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.AllInstances.pmidGet">
            <summary>设置 Singlepromotions.get_pmid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.AllInstances.pmidSetInt32">
            <summary>设置 Singlepromotions.set_pmid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.AllInstances.quotalowerGet">
            <summary>设置 Singlepromotions.get_quotalower() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.AllInstances.quotalowerSetInt32">
            <summary>设置 Singlepromotions.set_quotalower(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.AllInstances.quotaupperGet">
            <summary>设置 Singlepromotions.get_quotaupper() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.AllInstances.quotaupperSetInt32">
            <summary>设置 Singlepromotions.set_quotaupper(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.AllInstances.sloganGet">
            <summary>设置 Singlepromotions.get_slogan() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.AllInstances.sloganSetString">
            <summary>设置 Singlepromotions.set_slogan(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.AllInstances.starttime1Get">
            <summary>设置 Singlepromotions.get_starttime1() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.AllInstances.starttime1SetDateTime">
            <summary>设置 Singlepromotions.set_starttime1(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.AllInstances.starttime2Get">
            <summary>设置 Singlepromotions.get_starttime2() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.AllInstances.starttime2SetDateTime">
            <summary>设置 Singlepromotions.set_starttime2(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.AllInstances.starttime3Get">
            <summary>设置 Singlepromotions.get_starttime3() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.AllInstances.starttime3SetDateTime">
            <summary>设置 Singlepromotions.set_starttime3(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.AllInstances.stateGet">
            <summary>设置 Singlepromotions.get_state() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.AllInstances.stateSetInt32">
            <summary>设置 Singlepromotions.set_state(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.AllInstances.stockGet">
            <summary>设置 Singlepromotions.get_stock() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.AllInstances.stockSetInt32">
            <summary>设置 Singlepromotions.set_stock(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.AllInstances.storeidGet">
            <summary>设置 Singlepromotions.get_storeid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.AllInstances.storeidSetInt32">
            <summary>设置 Singlepromotions.set_storeid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.AllInstances.userranklowerGet">
            <summary>设置 Singlepromotions.get_userranklower() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSinglepromotions.AllInstances.userranklowerSetInt32">
            <summary>设置 Singlepromotions.set_userranklower(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimStore">
            <summary>YunXiu.Model.Store 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStore.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStore.#ctor(YunXiu.Model.Store)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStore.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStore.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AnnouncementGet">
            <summary>设置 Store.get_Announcement() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AnnouncementSetString">
            <summary>设置 Store.set_Announcement(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.BrandOperationGet">
            <summary>设置 Store.get_BrandOperation() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.BrandOperationSetString">
            <summary>设置 Store.set_BrandOperation(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.BusinessScopeGet">
            <summary>设置 Store.get_BusinessScope() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.BusinessScopeSetString">
            <summary>设置 Store.set_BusinessScope(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.CategoryGet">
            <summary>设置 Store.get_Category() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.CategorySetCategory">
            <summary>设置 Store.set_Category(Category value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.Constructor">
            <summary>设置 Store.Store() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.DePointGet">
            <summary>设置 Store.get_DePoint() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.DePointSetDecimal">
            <summary>设置 Store.set_DePoint(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.DescriptionGet">
            <summary>设置 Store.get_Description() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.DescriptionSetString">
            <summary>设置 Store.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.EstablishedGet">
            <summary>设置 Store.get_Established() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.EstablishedSetDateTime">
            <summary>设置 Store.set_Established(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.HadAnnualExportsGet">
            <summary>设置 Store.get_HadAnnualExports() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.HadAnnualExportsSetString">
            <summary>设置 Store.set_HadAnnualExports(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.HonestiesGet">
            <summary>设置 Store.get_Honesties() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.HonestiesSetDecimal">
            <summary>设置 Store.set_Honesties(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.LegalPersonGet">
            <summary>设置 Store.get_LegalPerson() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.LegalPersonSetString">
            <summary>设置 Store.set_LegalPerson(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.LogoGet">
            <summary>设置 Store.get_Logo() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.LogoSetString">
            <summary>设置 Store.set_Logo(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.MainCustomerGroupsGet">
            <summary>设置 Store.get_MainCustomerGroups() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.MainCustomerGroupsSetString">
            <summary>设置 Store.set_MainCustomerGroups(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.MainMarketGet">
            <summary>设置 Store.get_MainMarket() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.MainMarketSetString">
            <summary>设置 Store.set_MainMarket(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.MainProductsGet">
            <summary>设置 Store.get_MainProducts() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.MainProductsSetString">
            <summary>设置 Store.set_MainProducts(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.ManagementModelGet">
            <summary>设置 Store.get_ManagementModel() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.ManagementModelSetString">
            <summary>设置 Store.set_ManagementModel(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.MobileGet">
            <summary>设置 Store.get_Mobile() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.MobileSetString">
            <summary>设置 Store.set_Mobile(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.NameGet">
            <summary>设置 Store.get_Name() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.NameSetString">
            <summary>设置 Store.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.PhoneGet">
            <summary>设置 Store.get_Phone() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.PhoneSetString">
            <summary>设置 Store.set_Phone(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.QQGet">
            <summary>设置 Store.get_QQ() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.QQSetString">
            <summary>设置 Store.set_QQ(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.RegionIDGet">
            <summary>设置 Store.get_RegionID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.RegionIDSetInt32">
            <summary>设置 Store.set_RegionID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.RegisteredAddrGet">
            <summary>设置 Store.get_RegisteredAddr() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.RegisteredAddrSetString">
            <summary>设置 Store.set_RegisteredAddr(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.RegisteredCapitalGet">
            <summary>设置 Store.get_RegisteredCapital() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.RegisteredCapitalSetString">
            <summary>设置 Store.set_RegisteredCapital(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.SePointGet">
            <summary>设置 Store.get_SePoint() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.SePointSetDecimal">
            <summary>设置 Store.set_SePoint(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.ShPointGet">
            <summary>设置 Store.get_ShPoint() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.ShPointSetDecimal">
            <summary>设置 Store.set_ShPoint(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.StaffCountGet">
            <summary>设置 Store.get_StaffCount() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.StaffCountSetString">
            <summary>设置 Store.set_StaffCount(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.StateGet">
            <summary>设置 Store.get_State() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.StateSetInt32">
            <summary>设置 Store.set_State(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.StoreIDGet">
            <summary>设置 Store.get_StoreID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.StoreIDSetInt32">
            <summary>设置 Store.set_StoreID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.StoreIntroductionGet">
            <summary>设置 Store.get_StoreIntroduction() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.StoreIntroductionSetString">
            <summary>设置 Store.set_StoreIntroduction(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.StoreLinkGet">
            <summary>设置 Store.get_StoreLink() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.StoreLinkSetString">
            <summary>设置 Store.set_StoreLink(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.StoreManagerGet">
            <summary>设置 Store.get_StoreManager() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.StoreManagerSetUser">
            <summary>设置 Store.set_StoreManager(User value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.StoreMoneyGet">
            <summary>设置 Store.get_StoreMoney() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.StoreMoneySetDecimal">
            <summary>设置 Store.set_StoreMoney(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.StorerIDGet">
            <summary>设置 Store.get_StorerID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.StorerIDSetInt32">
            <summary>设置 Store.set_StorerID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.ThemeGet">
            <summary>设置 Store.get_Theme() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.ThemeSetString">
            <summary>设置 Store.set_Theme(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.ValidityDateGet">
            <summary>设置 Store.get_ValidityDate() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.ValidityDateSetDateTime">
            <summary>设置 Store.set_ValidityDate(DateTime value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimStore.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.AnnouncementGet">
            <summary>设置 Store.get_Announcement() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.AnnouncementSetString">
            <summary>设置 Store.set_Announcement(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.BrandOperationGet">
            <summary>设置 Store.get_BrandOperation() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.BrandOperationSetString">
            <summary>设置 Store.set_BrandOperation(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.BusinessScopeGet">
            <summary>设置 Store.get_BusinessScope() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.BusinessScopeSetString">
            <summary>设置 Store.set_BusinessScope(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.CategoryGet">
            <summary>设置 Store.get_Category() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.CategorySetCategory">
            <summary>设置 Store.set_Category(Category value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.DePointGet">
            <summary>设置 Store.get_DePoint() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.DePointSetDecimal">
            <summary>设置 Store.set_DePoint(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.DescriptionGet">
            <summary>设置 Store.get_Description() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.DescriptionSetString">
            <summary>设置 Store.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.EstablishedGet">
            <summary>设置 Store.get_Established() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.EstablishedSetDateTime">
            <summary>设置 Store.set_Established(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.HadAnnualExportsGet">
            <summary>设置 Store.get_HadAnnualExports() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.HadAnnualExportsSetString">
            <summary>设置 Store.set_HadAnnualExports(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.HonestiesGet">
            <summary>设置 Store.get_Honesties() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.HonestiesSetDecimal">
            <summary>设置 Store.set_Honesties(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.LegalPersonGet">
            <summary>设置 Store.get_LegalPerson() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.LegalPersonSetString">
            <summary>设置 Store.set_LegalPerson(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.LogoGet">
            <summary>设置 Store.get_Logo() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.LogoSetString">
            <summary>设置 Store.set_Logo(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.MainCustomerGroupsGet">
            <summary>设置 Store.get_MainCustomerGroups() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.MainCustomerGroupsSetString">
            <summary>设置 Store.set_MainCustomerGroups(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.MainMarketGet">
            <summary>设置 Store.get_MainMarket() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.MainMarketSetString">
            <summary>设置 Store.set_MainMarket(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.MainProductsGet">
            <summary>设置 Store.get_MainProducts() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.MainProductsSetString">
            <summary>设置 Store.set_MainProducts(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.ManagementModelGet">
            <summary>设置 Store.get_ManagementModel() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.ManagementModelSetString">
            <summary>设置 Store.set_ManagementModel(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.MobileGet">
            <summary>设置 Store.get_Mobile() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.MobileSetString">
            <summary>设置 Store.set_Mobile(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.NameGet">
            <summary>设置 Store.get_Name() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.NameSetString">
            <summary>设置 Store.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.PhoneGet">
            <summary>设置 Store.get_Phone() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.PhoneSetString">
            <summary>设置 Store.set_Phone(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.QQGet">
            <summary>设置 Store.get_QQ() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.QQSetString">
            <summary>设置 Store.set_QQ(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.RegionIDGet">
            <summary>设置 Store.get_RegionID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.RegionIDSetInt32">
            <summary>设置 Store.set_RegionID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.RegisteredAddrGet">
            <summary>设置 Store.get_RegisteredAddr() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.RegisteredAddrSetString">
            <summary>设置 Store.set_RegisteredAddr(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.RegisteredCapitalGet">
            <summary>设置 Store.get_RegisteredCapital() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.RegisteredCapitalSetString">
            <summary>设置 Store.set_RegisteredCapital(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.SePointGet">
            <summary>设置 Store.get_SePoint() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.SePointSetDecimal">
            <summary>设置 Store.set_SePoint(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.ShPointGet">
            <summary>设置 Store.get_ShPoint() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.ShPointSetDecimal">
            <summary>设置 Store.set_ShPoint(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.StaffCountGet">
            <summary>设置 Store.get_StaffCount() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.StaffCountSetString">
            <summary>设置 Store.set_StaffCount(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.StateGet">
            <summary>设置 Store.get_State() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.StateSetInt32">
            <summary>设置 Store.set_State(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.StoreIDGet">
            <summary>设置 Store.get_StoreID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.StoreIDSetInt32">
            <summary>设置 Store.set_StoreID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.StoreIntroductionGet">
            <summary>设置 Store.get_StoreIntroduction() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.StoreIntroductionSetString">
            <summary>设置 Store.set_StoreIntroduction(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.StoreLinkGet">
            <summary>设置 Store.get_StoreLink() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.StoreLinkSetString">
            <summary>设置 Store.set_StoreLink(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.StoreManagerGet">
            <summary>设置 Store.get_StoreManager() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.StoreManagerSetUser">
            <summary>设置 Store.set_StoreManager(User value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.StoreMoneyGet">
            <summary>设置 Store.get_StoreMoney() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.StoreMoneySetDecimal">
            <summary>设置 Store.set_StoreMoney(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.StorerIDGet">
            <summary>设置 Store.get_StorerID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.StorerIDSetInt32">
            <summary>设置 Store.set_StorerID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.ThemeGet">
            <summary>设置 Store.get_Theme() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.ThemeSetString">
            <summary>设置 Store.set_Theme(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.ValidityDateGet">
            <summary>设置 Store.get_ValidityDate() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStore.AllInstances.ValidityDateSetDateTime">
            <summary>设置 Store.set_ValidityDate(DateTime value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimStoreBanners">
            <summary>YunXiu.Model.StoreBanners 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreBanners.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreBanners.#ctor(YunXiu.Model.StoreBanners)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreBanners.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreBanners.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreBanners.BannerPathGet">
            <summary>设置 StoreBanners.get_BannerPath() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreBanners.BannerPathSetString">
            <summary>设置 StoreBanners.set_BannerPath(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreBanners.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreBanners.Constructor">
            <summary>设置 StoreBanners.StoreBanners() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreBanners.IdGet">
            <summary>设置 StoreBanners.get_Id() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreBanners.IdSetInt32">
            <summary>设置 StoreBanners.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreBanners.StoreidGet">
            <summary>设置 StoreBanners.get_Storeid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreBanners.StoreidSetInt32">
            <summary>设置 StoreBanners.set_Storeid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreBanners.displayorderGet">
            <summary>设置 StoreBanners.get_displayorder() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreBanners.displayorderSetInt32">
            <summary>设置 StoreBanners.set_displayorder(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimStoreBanners.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreBanners.AllInstances.BannerPathGet">
            <summary>设置 StoreBanners.get_BannerPath() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreBanners.AllInstances.BannerPathSetString">
            <summary>设置 StoreBanners.set_BannerPath(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreBanners.AllInstances.IdGet">
            <summary>设置 StoreBanners.get_Id() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreBanners.AllInstances.IdSetInt32">
            <summary>设置 StoreBanners.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreBanners.AllInstances.StoreidGet">
            <summary>设置 StoreBanners.get_Storeid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreBanners.AllInstances.StoreidSetInt32">
            <summary>设置 StoreBanners.set_Storeid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreBanners.AllInstances.displayorderGet">
            <summary>设置 StoreBanners.get_displayorder() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreBanners.AllInstances.displayorderSetInt32">
            <summary>设置 StoreBanners.set_displayorder(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimStoreHome">
            <summary>YunXiu.Model.StoreHome 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreHome.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreHome.#ctor(YunXiu.Model.StoreHome)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreHome.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreHome.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreHome.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreHome.Constructor">
            <summary>设置 StoreHome.StoreHome() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreHome.HomeHtmlGet">
            <summary>设置 StoreHome.get_HomeHtml() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreHome.HomeHtmlSetString">
            <summary>设置 StoreHome.set_HomeHtml(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreHome.IDGet">
            <summary>设置 StoreHome.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreHome.IDSetInt32">
            <summary>设置 StoreHome.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreHome.StoreGet">
            <summary>设置 StoreHome.get_Store() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreHome.StoreSetStore">
            <summary>设置 StoreHome.set_Store(Store value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimStoreHome.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreHome.AllInstances.HomeHtmlGet">
            <summary>设置 StoreHome.get_HomeHtml() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreHome.AllInstances.HomeHtmlSetString">
            <summary>设置 StoreHome.set_HomeHtml(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreHome.AllInstances.IDGet">
            <summary>设置 StoreHome.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreHome.AllInstances.IDSetInt32">
            <summary>设置 StoreHome.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreHome.AllInstances.StoreGet">
            <summary>设置 StoreHome.get_Store() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreHome.AllInstances.StoreSetStore">
            <summary>设置 StoreHome.set_Store(Store value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimStoreImg">
            <summary>YunXiu.Model.StoreImg 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreImg.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreImg.#ctor(YunXiu.Model.StoreImg)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreImg.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreImg.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreImg.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreImg.Constructor">
            <summary>设置 StoreImg.StoreImg() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreImg.IDGet">
            <summary>设置 StoreImg.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreImg.IDSetInt32">
            <summary>设置 StoreImg.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreImg.ImgGet">
            <summary>设置 StoreImg.get_Img() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreImg.ImgSetString">
            <summary>设置 StoreImg.set_Img(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreImg.StoreGet">
            <summary>设置 StoreImg.get_Store() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreImg.StoreSetStore">
            <summary>设置 StoreImg.set_Store(Store value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimStoreImg.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreImg.AllInstances.IDGet">
            <summary>设置 StoreImg.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreImg.AllInstances.IDSetInt32">
            <summary>设置 StoreImg.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreImg.AllInstances.ImgGet">
            <summary>设置 StoreImg.get_Img() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreImg.AllInstances.ImgSetString">
            <summary>设置 StoreImg.set_Img(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreImg.AllInstances.StoreGet">
            <summary>设置 StoreImg.get_Store() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreImg.AllInstances.StoreSetStore">
            <summary>设置 StoreImg.set_Store(Store value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimStoreNavigation">
            <summary>YunXiu.Model.StoreNavigation 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreNavigation.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreNavigation.#ctor(YunXiu.Model.StoreNavigation)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreNavigation.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreNavigation.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreNavigation.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreNavigation.Constructor">
            <summary>设置 StoreNavigation.StoreNavigation() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreNavigation.IsOpenNewGet">
            <summary>设置 StoreNavigation.get_IsOpenNew() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreNavigation.IsOpenNewSetBoolean">
            <summary>设置 StoreNavigation.set_IsOpenNew(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreNavigation.IsShowGet">
            <summary>设置 StoreNavigation.get_IsShow() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreNavigation.IsShowSetBoolean">
            <summary>设置 StoreNavigation.set_IsShow(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreNavigation.NIDGet">
            <summary>设置 StoreNavigation.get_NID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreNavigation.NIDSetInt32">
            <summary>设置 StoreNavigation.set_NID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreNavigation.NLinkGet">
            <summary>设置 StoreNavigation.get_NLink() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreNavigation.NLinkSetString">
            <summary>设置 StoreNavigation.set_NLink(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreNavigation.NNameGet">
            <summary>设置 StoreNavigation.get_NName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreNavigation.NNameSetString">
            <summary>设置 StoreNavigation.set_NName(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreNavigation.SortGet">
            <summary>设置 StoreNavigation.get_Sort() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreNavigation.SortSetInt32">
            <summary>设置 StoreNavigation.set_Sort(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreNavigation.StoreGet">
            <summary>设置 StoreNavigation.get_Store() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreNavigation.StoreSetStore">
            <summary>设置 StoreNavigation.set_Store(Store value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimStoreNavigation.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreNavigation.AllInstances.IsOpenNewGet">
            <summary>设置 StoreNavigation.get_IsOpenNew() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreNavigation.AllInstances.IsOpenNewSetBoolean">
            <summary>设置 StoreNavigation.set_IsOpenNew(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreNavigation.AllInstances.IsShowGet">
            <summary>设置 StoreNavigation.get_IsShow() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreNavigation.AllInstances.IsShowSetBoolean">
            <summary>设置 StoreNavigation.set_IsShow(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreNavigation.AllInstances.NIDGet">
            <summary>设置 StoreNavigation.get_NID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreNavigation.AllInstances.NIDSetInt32">
            <summary>设置 StoreNavigation.set_NID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreNavigation.AllInstances.NLinkGet">
            <summary>设置 StoreNavigation.get_NLink() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreNavigation.AllInstances.NLinkSetString">
            <summary>设置 StoreNavigation.set_NLink(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreNavigation.AllInstances.NNameGet">
            <summary>设置 StoreNavigation.get_NName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreNavigation.AllInstances.NNameSetString">
            <summary>设置 StoreNavigation.set_NName(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreNavigation.AllInstances.SortGet">
            <summary>设置 StoreNavigation.get_Sort() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreNavigation.AllInstances.SortSetInt32">
            <summary>设置 StoreNavigation.set_Sort(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreNavigation.AllInstances.StoreGet">
            <summary>设置 StoreNavigation.get_Store() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreNavigation.AllInstances.StoreSetStore">
            <summary>设置 StoreNavigation.set_Store(Store value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimStoreStaff">
            <summary>YunXiu.Model.StoreStaff 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreStaff.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreStaff.#ctor(YunXiu.Model.StoreStaff)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreStaff.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreStaff.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreStaff.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreStaff.Constructor">
            <summary>设置 StoreStaff.StoreStaff() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreStaff.IDGet">
            <summary>设置 StoreStaff.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreStaff.IDSetInt32">
            <summary>设置 StoreStaff.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreStaff.IsReceiveDeliveryGet">
            <summary>设置 StoreStaff.get_IsReceiveDelivery() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreStaff.IsReceiveDeliverySetBoolean">
            <summary>设置 StoreStaff.set_IsReceiveDelivery(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreStaff.PhoneGet">
            <summary>设置 StoreStaff.get_Phone() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreStaff.PhoneSetString">
            <summary>设置 StoreStaff.set_Phone(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreStaff.StaffNameGet">
            <summary>设置 StoreStaff.get_StaffName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreStaff.StaffNameSetString">
            <summary>设置 StoreStaff.set_StaffName(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreStaff.StoreGet">
            <summary>设置 StoreStaff.get_Store() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreStaff.StoreSetStore">
            <summary>设置 StoreStaff.set_Store(Store value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimStoreStaff.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreStaff.AllInstances.IDGet">
            <summary>设置 StoreStaff.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreStaff.AllInstances.IDSetInt32">
            <summary>设置 StoreStaff.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreStaff.AllInstances.IsReceiveDeliveryGet">
            <summary>设置 StoreStaff.get_IsReceiveDelivery() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreStaff.AllInstances.IsReceiveDeliverySetBoolean">
            <summary>设置 StoreStaff.set_IsReceiveDelivery(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreStaff.AllInstances.PhoneGet">
            <summary>设置 StoreStaff.get_Phone() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreStaff.AllInstances.PhoneSetString">
            <summary>设置 StoreStaff.set_Phone(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreStaff.AllInstances.StaffNameGet">
            <summary>设置 StoreStaff.get_StaffName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreStaff.AllInstances.StaffNameSetString">
            <summary>设置 StoreStaff.set_StaffName(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreStaff.AllInstances.StoreGet">
            <summary>设置 StoreStaff.get_Store() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreStaff.AllInstances.StoreSetStore">
            <summary>设置 StoreStaff.set_Store(Store value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimStoreUser">
            <summary>YunXiu.Model.StoreUser 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreUser.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreUser.#ctor(YunXiu.Model.StoreUser)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreUser.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreUser.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUser.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUser.Constructor">
            <summary>设置 StoreUser.StoreUser() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUser.GradeGet">
            <summary>设置 StoreUser.get_Grade() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUser.GradeSetInt32">
            <summary>设置 StoreUser.set_Grade(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUser.IDGet">
            <summary>设置 StoreUser.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUser.IDSetInt32">
            <summary>设置 StoreUser.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUser.IntegralGet">
            <summary>设置 StoreUser.get_Integral() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUser.IntegralSetInt32">
            <summary>设置 StoreUser.set_Integral(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUser.SUserGet">
            <summary>设置 StoreUser.get_SUser() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUser.SUserSetUser">
            <summary>设置 StoreUser.set_SUser(User value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUser.StoreGet">
            <summary>设置 StoreUser.get_Store() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUser.StoreIntegralGet">
            <summary>设置 StoreUser.get_StoreIntegral() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUser.StoreIntegralSetInt32">
            <summary>设置 StoreUser.set_StoreIntegral(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUser.StoreSetStore">
            <summary>设置 StoreUser.set_Store(Store value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimStoreUser.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUser.AllInstances.GradeGet">
            <summary>设置 StoreUser.get_Grade() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUser.AllInstances.GradeSetInt32">
            <summary>设置 StoreUser.set_Grade(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUser.AllInstances.IDGet">
            <summary>设置 StoreUser.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUser.AllInstances.IDSetInt32">
            <summary>设置 StoreUser.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUser.AllInstances.IntegralGet">
            <summary>设置 StoreUser.get_Integral() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUser.AllInstances.IntegralSetInt32">
            <summary>设置 StoreUser.set_Integral(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUser.AllInstances.SUserGet">
            <summary>设置 StoreUser.get_SUser() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUser.AllInstances.SUserSetUser">
            <summary>设置 StoreUser.set_SUser(User value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUser.AllInstances.StoreGet">
            <summary>设置 StoreUser.get_Store() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUser.AllInstances.StoreIntegralGet">
            <summary>设置 StoreUser.get_StoreIntegral() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUser.AllInstances.StoreIntegralSetInt32">
            <summary>设置 StoreUser.set_StoreIntegral(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUser.AllInstances.StoreSetStore">
            <summary>设置 StoreUser.set_Store(Store value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimStoreUserGroup">
            <summary>YunXiu.Model.StoreUserGroup 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreUserGroup.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreUserGroup.#ctor(YunXiu.Model.StoreUserGroup)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreUserGroup.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreUserGroup.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUserGroup.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUserGroup.Constructor">
            <summary>设置 StoreUserGroup.StoreUserGroup() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUserGroup.GIDGet">
            <summary>设置 StoreUserGroup.get_GID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUserGroup.GIDSetInt32">
            <summary>设置 StoreUserGroup.set_GID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUserGroup.GroupNameGet">
            <summary>设置 StoreUserGroup.get_GroupName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUserGroup.GroupNameSetString">
            <summary>设置 StoreUserGroup.set_GroupName(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUserGroup.StoreGet">
            <summary>设置 StoreUserGroup.get_Store() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUserGroup.StoreSetStore">
            <summary>设置 StoreUserGroup.set_Store(Store value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimStoreUserGroup.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUserGroup.AllInstances.GIDGet">
            <summary>设置 StoreUserGroup.get_GID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUserGroup.AllInstances.GIDSetInt32">
            <summary>设置 StoreUserGroup.set_GID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUserGroup.AllInstances.GroupNameGet">
            <summary>设置 StoreUserGroup.get_GroupName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUserGroup.AllInstances.GroupNameSetString">
            <summary>设置 StoreUserGroup.set_GroupName(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUserGroup.AllInstances.StoreGet">
            <summary>设置 StoreUserGroup.get_Store() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUserGroup.AllInstances.StoreSetStore">
            <summary>设置 StoreUserGroup.set_Store(Store value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimStoreUserGroupStoreUser">
            <summary>YunXiu.Model.StoreUserGroupStoreUser 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreUserGroupStoreUser.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreUserGroupStoreUser.#ctor(YunXiu.Model.StoreUserGroupStoreUser)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreUserGroupStoreUser.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreUserGroupStoreUser.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUserGroupStoreUser.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUserGroupStoreUser.Constructor">
            <summary>设置 StoreUserGroupStoreUser.StoreUserGroupStoreUser() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUserGroupStoreUser.IDGet">
            <summary>设置 StoreUserGroupStoreUser.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUserGroupStoreUser.IDSetInt32">
            <summary>设置 StoreUserGroupStoreUser.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUserGroupStoreUser.SUGroupGet">
            <summary>设置 StoreUserGroupStoreUser.get_SUGroup() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUserGroupStoreUser.SUGroupSetStoreUserGroup">
            <summary>设置 StoreUserGroupStoreUser.set_SUGroup(StoreUserGroup value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUserGroupStoreUser.SUserGet">
            <summary>设置 StoreUserGroupStoreUser.get_SUser() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUserGroupStoreUser.SUserSetStoreUser">
            <summary>设置 StoreUserGroupStoreUser.set_SUser(StoreUser value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimStoreUserGroupStoreUser.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUserGroupStoreUser.AllInstances.IDGet">
            <summary>设置 StoreUserGroupStoreUser.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUserGroupStoreUser.AllInstances.IDSetInt32">
            <summary>设置 StoreUserGroupStoreUser.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUserGroupStoreUser.AllInstances.SUGroupGet">
            <summary>设置 StoreUserGroupStoreUser.get_SUGroup() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUserGroupStoreUser.AllInstances.SUGroupSetStoreUserGroup">
            <summary>设置 StoreUserGroupStoreUser.set_SUGroup(StoreUserGroup value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUserGroupStoreUser.AllInstances.SUserGet">
            <summary>设置 StoreUserGroupStoreUser.get_SUser() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreUserGroupStoreUser.AllInstances.SUserSetStoreUser">
            <summary>设置 StoreUserGroupStoreUser.set_SUser(StoreUser value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimStoreadminlogs">
            <summary>YunXiu.Model.Storeadminlogs 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreadminlogs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreadminlogs.#ctor(YunXiu.Model.Storeadminlogs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreadminlogs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreadminlogs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreadminlogs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreadminlogs.Constructor">
            <summary>设置 Storeadminlogs.Storeadminlogs() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreadminlogs.descriptionGet">
            <summary>设置 Storeadminlogs.get_description() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreadminlogs.descriptionSetString">
            <summary>设置 Storeadminlogs.set_description(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreadminlogs.ipGet">
            <summary>设置 Storeadminlogs.get_ip() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreadminlogs.ipSetString">
            <summary>设置 Storeadminlogs.set_ip(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreadminlogs.logidGet">
            <summary>设置 Storeadminlogs.get_logid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreadminlogs.logidSetInt32">
            <summary>设置 Storeadminlogs.set_logid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreadminlogs.nicknameGet">
            <summary>设置 Storeadminlogs.get_nickname() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreadminlogs.nicknameSetString">
            <summary>设置 Storeadminlogs.set_nickname(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreadminlogs.operatetimeGet">
            <summary>设置 Storeadminlogs.get_operatetime() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreadminlogs.operatetimeSetDateTime">
            <summary>设置 Storeadminlogs.set_operatetime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreadminlogs.operationGet">
            <summary>设置 Storeadminlogs.get_operation() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreadminlogs.operationSetString">
            <summary>设置 Storeadminlogs.set_operation(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreadminlogs.storeidGet">
            <summary>设置 Storeadminlogs.get_storeid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreadminlogs.storeidSetInt32">
            <summary>设置 Storeadminlogs.set_storeid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreadminlogs.storenameGet">
            <summary>设置 Storeadminlogs.get_storename() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreadminlogs.storenameSetString">
            <summary>设置 Storeadminlogs.set_storename(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreadminlogs.uidGet">
            <summary>设置 Storeadminlogs.get_uid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreadminlogs.uidSetInt32">
            <summary>设置 Storeadminlogs.set_uid(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimStoreadminlogs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreadminlogs.AllInstances.descriptionGet">
            <summary>设置 Storeadminlogs.get_description() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreadminlogs.AllInstances.descriptionSetString">
            <summary>设置 Storeadminlogs.set_description(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreadminlogs.AllInstances.ipGet">
            <summary>设置 Storeadminlogs.get_ip() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreadminlogs.AllInstances.ipSetString">
            <summary>设置 Storeadminlogs.set_ip(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreadminlogs.AllInstances.logidGet">
            <summary>设置 Storeadminlogs.get_logid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreadminlogs.AllInstances.logidSetInt32">
            <summary>设置 Storeadminlogs.set_logid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreadminlogs.AllInstances.nicknameGet">
            <summary>设置 Storeadminlogs.get_nickname() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreadminlogs.AllInstances.nicknameSetString">
            <summary>设置 Storeadminlogs.set_nickname(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreadminlogs.AllInstances.operatetimeGet">
            <summary>设置 Storeadminlogs.get_operatetime() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreadminlogs.AllInstances.operatetimeSetDateTime">
            <summary>设置 Storeadminlogs.set_operatetime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreadminlogs.AllInstances.operationGet">
            <summary>设置 Storeadminlogs.get_operation() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreadminlogs.AllInstances.operationSetString">
            <summary>设置 Storeadminlogs.set_operation(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreadminlogs.AllInstances.storeidGet">
            <summary>设置 Storeadminlogs.get_storeid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreadminlogs.AllInstances.storeidSetInt32">
            <summary>设置 Storeadminlogs.set_storeid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreadminlogs.AllInstances.storenameGet">
            <summary>设置 Storeadminlogs.get_storename() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreadminlogs.AllInstances.storenameSetString">
            <summary>设置 Storeadminlogs.set_storename(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreadminlogs.AllInstances.uidGet">
            <summary>设置 Storeadminlogs.get_uid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreadminlogs.AllInstances.uidSetInt32">
            <summary>设置 Storeadminlogs.set_uid(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimStoreclasses">
            <summary>YunXiu.Model.Storeclasses 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreclasses.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreclasses.#ctor(YunXiu.Model.Storeclasses)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreclasses.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreclasses.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreclasses.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreclasses.Constructor">
            <summary>设置 Storeclasses.Storeclasses() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreclasses.displayorderGet">
            <summary>设置 Storeclasses.get_displayorder() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreclasses.displayorderSetInt32">
            <summary>设置 Storeclasses.set_displayorder(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreclasses.haschildGet">
            <summary>设置 Storeclasses.get_haschild() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreclasses.haschildSetInt32">
            <summary>设置 Storeclasses.set_haschild(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreclasses.layerGet">
            <summary>设置 Storeclasses.get_layer() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreclasses.layerSetInt32">
            <summary>设置 Storeclasses.set_layer(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreclasses.nameGet">
            <summary>设置 Storeclasses.get_name() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreclasses.nameSetString">
            <summary>设置 Storeclasses.set_name(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreclasses.parentidGet">
            <summary>设置 Storeclasses.get_parentid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreclasses.parentidSetInt32">
            <summary>设置 Storeclasses.set_parentid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreclasses.pathGet">
            <summary>设置 Storeclasses.get_path() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreclasses.pathSetString">
            <summary>设置 Storeclasses.set_path(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreclasses.storecidGet">
            <summary>设置 Storeclasses.get_storecid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreclasses.storecidSetInt32">
            <summary>设置 Storeclasses.set_storecid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreclasses.storeidGet">
            <summary>设置 Storeclasses.get_storeid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreclasses.storeidSetInt32">
            <summary>设置 Storeclasses.set_storeid(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimStoreclasses.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreclasses.AllInstances.displayorderGet">
            <summary>设置 Storeclasses.get_displayorder() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreclasses.AllInstances.displayorderSetInt32">
            <summary>设置 Storeclasses.set_displayorder(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreclasses.AllInstances.haschildGet">
            <summary>设置 Storeclasses.get_haschild() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreclasses.AllInstances.haschildSetInt32">
            <summary>设置 Storeclasses.set_haschild(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreclasses.AllInstances.layerGet">
            <summary>设置 Storeclasses.get_layer() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreclasses.AllInstances.layerSetInt32">
            <summary>设置 Storeclasses.set_layer(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreclasses.AllInstances.nameGet">
            <summary>设置 Storeclasses.get_name() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreclasses.AllInstances.nameSetString">
            <summary>设置 Storeclasses.set_name(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreclasses.AllInstances.parentidGet">
            <summary>设置 Storeclasses.get_parentid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreclasses.AllInstances.parentidSetInt32">
            <summary>设置 Storeclasses.set_parentid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreclasses.AllInstances.pathGet">
            <summary>设置 Storeclasses.get_path() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreclasses.AllInstances.pathSetString">
            <summary>设置 Storeclasses.set_path(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreclasses.AllInstances.storecidGet">
            <summary>设置 Storeclasses.get_storecid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreclasses.AllInstances.storecidSetInt32">
            <summary>设置 Storeclasses.set_storecid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreclasses.AllInstances.storeidGet">
            <summary>设置 Storeclasses.get_storeid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreclasses.AllInstances.storeidSetInt32">
            <summary>设置 Storeclasses.set_storeid(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimStoreindustries">
            <summary>YunXiu.Model.Storeindustries 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreindustries.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreindustries.#ctor(YunXiu.Model.Storeindustries)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreindustries.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreindustries.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreindustries.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreindustries.Constructor">
            <summary>设置 Storeindustries.Storeindustries() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreindustries.displayorderGet">
            <summary>设置 Storeindustries.get_displayorder() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreindustries.displayorderSetInt32">
            <summary>设置 Storeindustries.set_displayorder(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreindustries.storeiidGet">
            <summary>设置 Storeindustries.get_storeiid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreindustries.storeiidSetInt32">
            <summary>设置 Storeindustries.set_storeiid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreindustries.titleGet">
            <summary>设置 Storeindustries.get_title() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreindustries.titleSetString">
            <summary>设置 Storeindustries.set_title(String value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimStoreindustries.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreindustries.AllInstances.displayorderGet">
            <summary>设置 Storeindustries.get_displayorder() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreindustries.AllInstances.displayorderSetInt32">
            <summary>设置 Storeindustries.set_displayorder(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreindustries.AllInstances.storeiidGet">
            <summary>设置 Storeindustries.get_storeiid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreindustries.AllInstances.storeiidSetInt32">
            <summary>设置 Storeindustries.set_storeiid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreindustries.AllInstances.titleGet">
            <summary>设置 Storeindustries.get_title() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreindustries.AllInstances.titleSetString">
            <summary>设置 Storeindustries.set_title(String value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimStorekeepers">
            <summary>YunXiu.Model.Storekeepers 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStorekeepers.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStorekeepers.#ctor(YunXiu.Model.Storekeepers)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStorekeepers.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStorekeepers.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorekeepers.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorekeepers.Constructor">
            <summary>设置 Storekeepers.Storekeepers() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorekeepers.addressGet">
            <summary>设置 Storekeepers.get_address() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorekeepers.addressSetString">
            <summary>设置 Storekeepers.set_address(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorekeepers.idcardGet">
            <summary>设置 Storekeepers.get_idcard() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorekeepers.idcardSetString">
            <summary>设置 Storekeepers.set_idcard(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorekeepers.nameGet">
            <summary>设置 Storekeepers.get_name() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorekeepers.nameSetString">
            <summary>设置 Storekeepers.set_name(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorekeepers.storeidGet">
            <summary>设置 Storekeepers.get_storeid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorekeepers.storeidSetInt32">
            <summary>设置 Storekeepers.set_storeid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorekeepers.typeGet">
            <summary>设置 Storekeepers.get_type() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorekeepers.typeSetInt32">
            <summary>设置 Storekeepers.set_type(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimStorekeepers.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorekeepers.AllInstances.addressGet">
            <summary>设置 Storekeepers.get_address() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorekeepers.AllInstances.addressSetString">
            <summary>设置 Storekeepers.set_address(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorekeepers.AllInstances.idcardGet">
            <summary>设置 Storekeepers.get_idcard() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorekeepers.AllInstances.idcardSetString">
            <summary>设置 Storekeepers.set_idcard(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorekeepers.AllInstances.nameGet">
            <summary>设置 Storekeepers.get_name() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorekeepers.AllInstances.nameSetString">
            <summary>设置 Storekeepers.set_name(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorekeepers.AllInstances.storeidGet">
            <summary>设置 Storekeepers.get_storeid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorekeepers.AllInstances.storeidSetInt32">
            <summary>设置 Storekeepers.set_storeid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorekeepers.AllInstances.typeGet">
            <summary>设置 Storekeepers.get_type() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorekeepers.AllInstances.typeSetInt32">
            <summary>设置 Storekeepers.set_type(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimStoreranks">
            <summary>YunXiu.Model.Storeranks 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreranks.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreranks.#ctor(YunXiu.Model.Storeranks)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreranks.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreranks.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreranks.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreranks.Constructor">
            <summary>设置 Storeranks.Storeranks() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreranks.avatarGet">
            <summary>设置 Storeranks.get_avatar() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreranks.avatarSetString">
            <summary>设置 Storeranks.set_avatar(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreranks.honestieslowerGet">
            <summary>设置 Storeranks.get_honestieslower() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreranks.honestieslowerSetInt32">
            <summary>设置 Storeranks.set_honestieslower(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreranks.honestiesupperGet">
            <summary>设置 Storeranks.get_honestiesupper() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreranks.honestiesupperSetInt32">
            <summary>设置 Storeranks.set_honestiesupper(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreranks.productcountGet">
            <summary>设置 Storeranks.get_productcount() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreranks.productcountSetInt32">
            <summary>设置 Storeranks.set_productcount(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreranks.storeridGet">
            <summary>设置 Storeranks.get_storerid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreranks.storeridSetInt32">
            <summary>设置 Storeranks.set_storerid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreranks.titleGet">
            <summary>设置 Storeranks.get_title() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreranks.titleSetString">
            <summary>设置 Storeranks.set_title(String value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimStoreranks.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreranks.AllInstances.avatarGet">
            <summary>设置 Storeranks.get_avatar() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreranks.AllInstances.avatarSetString">
            <summary>设置 Storeranks.set_avatar(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreranks.AllInstances.honestieslowerGet">
            <summary>设置 Storeranks.get_honestieslower() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreranks.AllInstances.honestieslowerSetInt32">
            <summary>设置 Storeranks.set_honestieslower(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreranks.AllInstances.honestiesupperGet">
            <summary>设置 Storeranks.get_honestiesupper() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreranks.AllInstances.honestiesupperSetInt32">
            <summary>设置 Storeranks.set_honestiesupper(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreranks.AllInstances.productcountGet">
            <summary>设置 Storeranks.get_productcount() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreranks.AllInstances.productcountSetInt32">
            <summary>设置 Storeranks.set_productcount(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreranks.AllInstances.storeridGet">
            <summary>设置 Storeranks.get_storerid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreranks.AllInstances.storeridSetInt32">
            <summary>设置 Storeranks.set_storerid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreranks.AllInstances.titleGet">
            <summary>设置 Storeranks.get_title() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreranks.AllInstances.titleSetString">
            <summary>设置 Storeranks.set_title(String value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimStorereviews">
            <summary>YunXiu.Model.Storereviews 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStorereviews.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStorereviews.#ctor(YunXiu.Model.Storereviews)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStorereviews.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStorereviews.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorereviews.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorereviews.Constructor">
            <summary>设置 Storereviews.Storereviews() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorereviews.descriptionstarGet">
            <summary>设置 Storereviews.get_descriptionstar() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorereviews.descriptionstarSetInt32">
            <summary>设置 Storereviews.set_descriptionstar(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorereviews.ipGet">
            <summary>设置 Storereviews.get_ip() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorereviews.ipSetString">
            <summary>设置 Storereviews.set_ip(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorereviews.oidGet">
            <summary>设置 Storereviews.get_oid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorereviews.oidSetInt32">
            <summary>设置 Storereviews.set_oid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorereviews.reviewidGet">
            <summary>设置 Storereviews.get_reviewid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorereviews.reviewidSetInt32">
            <summary>设置 Storereviews.set_reviewid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorereviews.reviewtimeGet">
            <summary>设置 Storereviews.get_reviewtime() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorereviews.reviewtimeSetDateTime">
            <summary>设置 Storereviews.set_reviewtime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorereviews.servicestarGet">
            <summary>设置 Storereviews.get_servicestar() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorereviews.servicestarSetInt32">
            <summary>设置 Storereviews.set_servicestar(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorereviews.shipstarGet">
            <summary>设置 Storereviews.get_shipstar() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorereviews.shipstarSetInt32">
            <summary>设置 Storereviews.set_shipstar(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorereviews.storeidGet">
            <summary>设置 Storereviews.get_storeid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorereviews.storeidSetInt32">
            <summary>设置 Storereviews.set_storeid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorereviews.uidGet">
            <summary>设置 Storereviews.get_uid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorereviews.uidSetInt32">
            <summary>设置 Storereviews.set_uid(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimStorereviews.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorereviews.AllInstances.descriptionstarGet">
            <summary>设置 Storereviews.get_descriptionstar() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorereviews.AllInstances.descriptionstarSetInt32">
            <summary>设置 Storereviews.set_descriptionstar(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorereviews.AllInstances.ipGet">
            <summary>设置 Storereviews.get_ip() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorereviews.AllInstances.ipSetString">
            <summary>设置 Storereviews.set_ip(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorereviews.AllInstances.oidGet">
            <summary>设置 Storereviews.get_oid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorereviews.AllInstances.oidSetInt32">
            <summary>设置 Storereviews.set_oid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorereviews.AllInstances.reviewidGet">
            <summary>设置 Storereviews.get_reviewid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorereviews.AllInstances.reviewidSetInt32">
            <summary>设置 Storereviews.set_reviewid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorereviews.AllInstances.reviewtimeGet">
            <summary>设置 Storereviews.get_reviewtime() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorereviews.AllInstances.reviewtimeSetDateTime">
            <summary>设置 Storereviews.set_reviewtime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorereviews.AllInstances.servicestarGet">
            <summary>设置 Storereviews.get_servicestar() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorereviews.AllInstances.servicestarSetInt32">
            <summary>设置 Storereviews.set_servicestar(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorereviews.AllInstances.shipstarGet">
            <summary>设置 Storereviews.get_shipstar() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorereviews.AllInstances.shipstarSetInt32">
            <summary>设置 Storereviews.set_shipstar(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorereviews.AllInstances.storeidGet">
            <summary>设置 Storereviews.get_storeid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorereviews.AllInstances.storeidSetInt32">
            <summary>设置 Storereviews.set_storeid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorereviews.AllInstances.uidGet">
            <summary>设置 Storereviews.get_uid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStorereviews.AllInstances.uidSetInt32">
            <summary>设置 Storereviews.set_uid(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimStoresApply_Company2_">
            <summary>YunXiu.Model.StoresApply_Company2_ 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoresApply_Company2_.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoresApply_Company2_.#ctor(YunXiu.Model.StoresApply_Company2_)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoresApply_Company2_.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoresApply_Company2_.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.AccountPerimssionPhoGet">
            <summary>设置 StoresApply_Company2_.get_AccountPerimssionPho() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.AccountPerimssionPhoSetInt32">
            <summary>设置 StoresApply_Company2_.set_AccountPerimssionPho(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.ApplyIdGet">
            <summary>设置 StoresApply_Company2_.get_ApplyId() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.ApplyIdSetInt32">
            <summary>设置 StoresApply_Company2_.set_ApplyId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.BankCardGet">
            <summary>设置 StoresApply_Company2_.get_BankCard() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.BankCardSetInt32">
            <summary>设置 StoresApply_Company2_.set_BankCard(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.BankCodeGet">
            <summary>设置 StoresApply_Company2_.get_BankCode() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.BankCodeSetInt32">
            <summary>设置 StoresApply_Company2_.set_BankCode(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.BankLoctionRegionGet">
            <summary>设置 StoresApply_Company2_.get_BankLoctionRegion() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.BankLoctionRegionSetInt32">
            <summary>设置 StoresApply_Company2_.set_BankLoctionRegion(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.BankNameGet">
            <summary>设置 StoresApply_Company2_.get_BankName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.BankNameSetInt32">
            <summary>设置 StoresApply_Company2_.set_BankName(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.BankPickerNameGet">
            <summary>设置 StoresApply_Company2_.get_BankPickerName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.BankPickerNameSetInt32">
            <summary>设置 StoresApply_Company2_.set_BankPickerName(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.Certificate_PhoGet">
            <summary>设置 StoresApply_Company2_.get_Certificate_Pho() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.Certificate_PhoSetInt32">
            <summary>设置 StoresApply_Company2_.set_Certificate_Pho(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.Constructor">
            <summary>设置 StoresApply_Company2_.StoresApply_Company2_() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.IDCardInHandPathGet">
            <summary>设置 StoresApply_Company2_.get_IDCardInHandPath() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.IDCardInHandPathSetInt32">
            <summary>设置 StoresApply_Company2_.set_IDCardInHandPath(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.IDCardPhoBackPathGet">
            <summary>设置 StoresApply_Company2_.get_IDCardPhoBackPath() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.IDCardPhoBackPathSetInt32">
            <summary>设置 StoresApply_Company2_.set_IDCardPhoBackPath(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.IDCardPhoForwardPathGet">
            <summary>设置 StoresApply_Company2_.get_IDCardPhoForwardPath() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.IDCardPhoForwardPathSetInt32">
            <summary>设置 StoresApply_Company2_.set_IDCardPhoForwardPath(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.IdGet">
            <summary>设置 StoresApply_Company2_.get_Id() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.IdSetInt32">
            <summary>设置 StoresApply_Company2_.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.LegalIDCardGet">
            <summary>设置 StoresApply_Company2_.get_LegalIDCard() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.LegalIDCardSetInt32">
            <summary>设置 StoresApply_Company2_.set_LegalIDCard(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.LegalNameGet">
            <summary>设置 StoresApply_Company2_.get_LegalName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.LegalNameSetInt32">
            <summary>设置 StoresApply_Company2_.set_LegalName(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.LegalPhoneGet">
            <summary>设置 StoresApply_Company2_.get_LegalPhone() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.LegalPhoneSetInt32">
            <summary>设置 StoresApply_Company2_.set_LegalPhone(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.OrganizeCodePhoGet">
            <summary>设置 StoresApply_Company2_.get_OrganizeCodePho() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.OrganizeCodePhoSetInt32">
            <summary>设置 StoresApply_Company2_.set_OrganizeCodePho(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.TaxCodeGet">
            <summary>设置 StoresApply_Company2_.get_TaxCode() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.TaxCodeSetInt32">
            <summary>设置 StoresApply_Company2_.set_TaxCode(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.TaxPayerCodeGet">
            <summary>设置 StoresApply_Company2_.get_TaxPayerCode() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.TaxPayerCodeSetInt32">
            <summary>设置 StoresApply_Company2_.set_TaxPayerCode(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.TaxPayerPermissionPhoGet">
            <summary>设置 StoresApply_Company2_.get_TaxPayerPermissionPho() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.TaxPayerPermissionPhoSetInt32">
            <summary>设置 StoresApply_Company2_.set_TaxPayerPermissionPho(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.TaxPayerTypeGet">
            <summary>设置 StoresApply_Company2_.get_TaxPayerType() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.TaxPayerTypeSetInt32">
            <summary>设置 StoresApply_Company2_.set_TaxPayerType(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.TaxRedgionPhoGet">
            <summary>设置 StoresApply_Company2_.get_TaxRedgionPho() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.TaxRedgionPhoSetInt32">
            <summary>设置 StoresApply_Company2_.set_TaxRedgionPho(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimStoresApply_Company2_.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.AllInstances.AccountPerimssionPhoGet">
            <summary>设置 StoresApply_Company2_.get_AccountPerimssionPho() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.AllInstances.AccountPerimssionPhoSetInt32">
            <summary>设置 StoresApply_Company2_.set_AccountPerimssionPho(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.AllInstances.ApplyIdGet">
            <summary>设置 StoresApply_Company2_.get_ApplyId() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.AllInstances.ApplyIdSetInt32">
            <summary>设置 StoresApply_Company2_.set_ApplyId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.AllInstances.BankCardGet">
            <summary>设置 StoresApply_Company2_.get_BankCard() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.AllInstances.BankCardSetInt32">
            <summary>设置 StoresApply_Company2_.set_BankCard(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.AllInstances.BankCodeGet">
            <summary>设置 StoresApply_Company2_.get_BankCode() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.AllInstances.BankCodeSetInt32">
            <summary>设置 StoresApply_Company2_.set_BankCode(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.AllInstances.BankLoctionRegionGet">
            <summary>设置 StoresApply_Company2_.get_BankLoctionRegion() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.AllInstances.BankLoctionRegionSetInt32">
            <summary>设置 StoresApply_Company2_.set_BankLoctionRegion(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.AllInstances.BankNameGet">
            <summary>设置 StoresApply_Company2_.get_BankName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.AllInstances.BankNameSetInt32">
            <summary>设置 StoresApply_Company2_.set_BankName(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.AllInstances.BankPickerNameGet">
            <summary>设置 StoresApply_Company2_.get_BankPickerName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.AllInstances.BankPickerNameSetInt32">
            <summary>设置 StoresApply_Company2_.set_BankPickerName(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.AllInstances.Certificate_PhoGet">
            <summary>设置 StoresApply_Company2_.get_Certificate_Pho() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.AllInstances.Certificate_PhoSetInt32">
            <summary>设置 StoresApply_Company2_.set_Certificate_Pho(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.AllInstances.IDCardInHandPathGet">
            <summary>设置 StoresApply_Company2_.get_IDCardInHandPath() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.AllInstances.IDCardInHandPathSetInt32">
            <summary>设置 StoresApply_Company2_.set_IDCardInHandPath(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.AllInstances.IDCardPhoBackPathGet">
            <summary>设置 StoresApply_Company2_.get_IDCardPhoBackPath() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.AllInstances.IDCardPhoBackPathSetInt32">
            <summary>设置 StoresApply_Company2_.set_IDCardPhoBackPath(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.AllInstances.IDCardPhoForwardPathGet">
            <summary>设置 StoresApply_Company2_.get_IDCardPhoForwardPath() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.AllInstances.IDCardPhoForwardPathSetInt32">
            <summary>设置 StoresApply_Company2_.set_IDCardPhoForwardPath(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.AllInstances.IdGet">
            <summary>设置 StoresApply_Company2_.get_Id() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.AllInstances.IdSetInt32">
            <summary>设置 StoresApply_Company2_.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.AllInstances.LegalIDCardGet">
            <summary>设置 StoresApply_Company2_.get_LegalIDCard() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.AllInstances.LegalIDCardSetInt32">
            <summary>设置 StoresApply_Company2_.set_LegalIDCard(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.AllInstances.LegalNameGet">
            <summary>设置 StoresApply_Company2_.get_LegalName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.AllInstances.LegalNameSetInt32">
            <summary>设置 StoresApply_Company2_.set_LegalName(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.AllInstances.LegalPhoneGet">
            <summary>设置 StoresApply_Company2_.get_LegalPhone() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.AllInstances.LegalPhoneSetInt32">
            <summary>设置 StoresApply_Company2_.set_LegalPhone(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.AllInstances.OrganizeCodePhoGet">
            <summary>设置 StoresApply_Company2_.get_OrganizeCodePho() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.AllInstances.OrganizeCodePhoSetInt32">
            <summary>设置 StoresApply_Company2_.set_OrganizeCodePho(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.AllInstances.TaxCodeGet">
            <summary>设置 StoresApply_Company2_.get_TaxCode() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.AllInstances.TaxCodeSetInt32">
            <summary>设置 StoresApply_Company2_.set_TaxCode(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.AllInstances.TaxPayerCodeGet">
            <summary>设置 StoresApply_Company2_.get_TaxPayerCode() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.AllInstances.TaxPayerCodeSetInt32">
            <summary>设置 StoresApply_Company2_.set_TaxPayerCode(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.AllInstances.TaxPayerPermissionPhoGet">
            <summary>设置 StoresApply_Company2_.get_TaxPayerPermissionPho() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.AllInstances.TaxPayerPermissionPhoSetInt32">
            <summary>设置 StoresApply_Company2_.set_TaxPayerPermissionPho(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.AllInstances.TaxPayerTypeGet">
            <summary>设置 StoresApply_Company2_.get_TaxPayerType() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.AllInstances.TaxPayerTypeSetInt32">
            <summary>设置 StoresApply_Company2_.set_TaxPayerType(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.AllInstances.TaxRedgionPhoGet">
            <summary>设置 StoresApply_Company2_.get_TaxRedgionPho() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company2_.AllInstances.TaxRedgionPhoSetInt32">
            <summary>设置 StoresApply_Company2_.set_TaxRedgionPho(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimStoresApply_Company_">
            <summary>YunXiu.Model.StoresApply_Company_ 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoresApply_Company_.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoresApply_Company_.#ctor(YunXiu.Model.StoresApply_Company_)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoresApply_Company_.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoresApply_Company_.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.ApplyIdGet">
            <summary>设置 StoresApply_Company_.get_ApplyId() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.ApplyIdSetInt32">
            <summary>设置 StoresApply_Company_.set_ApplyId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.BusinessTimeGet">
            <summary>设置 StoresApply_Company_.get_BusinessTime() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.BusinessTimeSetString">
            <summary>设置 StoresApply_Company_.set_BusinessTime(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.Certificate_AddressGet">
            <summary>设置 StoresApply_Company_.get_Certificate_Address() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.Certificate_AddressSetString">
            <summary>设置 StoresApply_Company_.set_Certificate_Address(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.Certificate_RegionIdGet">
            <summary>设置 StoresApply_Company_.get_Certificate_RegionId() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.Certificate_RegionIdSetInt32">
            <summary>设置 StoresApply_Company_.set_Certificate_RegionId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.Certificate_TypeGet">
            <summary>设置 StoresApply_Company_.get_Certificate_Type() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.Certificate_TypeSetInt32">
            <summary>设置 StoresApply_Company_.set_Certificate_Type(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.CompanyAddressGet">
            <summary>设置 StoresApply_Company_.get_CompanyAddress() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.CompanyAddressSetString">
            <summary>设置 StoresApply_Company_.set_CompanyAddress(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.CompanyContantNameGet">
            <summary>设置 StoresApply_Company_.get_CompanyContantName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.CompanyContantNameSetString">
            <summary>设置 StoresApply_Company_.set_CompanyContantName(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.CompanyContantPhoneGet">
            <summary>设置 StoresApply_Company_.get_CompanyContantPhone() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.CompanyContantPhoneSetString">
            <summary>设置 StoresApply_Company_.set_CompanyContantPhone(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.CompanyNameGet">
            <summary>设置 StoresApply_Company_.get_CompanyName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.CompanyNameSetString">
            <summary>设置 StoresApply_Company_.set_CompanyName(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.CompanyPhoneGet">
            <summary>设置 StoresApply_Company_.get_CompanyPhone() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.CompanyPhoneSetString">
            <summary>设置 StoresApply_Company_.set_CompanyPhone(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.CompanyRegionGet">
            <summary>设置 StoresApply_Company_.get_CompanyRegion() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.CompanyRegionSetInt32">
            <summary>设置 StoresApply_Company_.set_CompanyRegion(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.Constructor">
            <summary>设置 StoresApply_Company_.StoresApply_Company_() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.CreateDateGet">
            <summary>设置 StoresApply_Company_.get_CreateDate() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.CreateDateSetInt32">
            <summary>设置 StoresApply_Company_.set_CreateDate(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.EstablishDateGet">
            <summary>设置 StoresApply_Company_.get_EstablishDate() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.EstablishDateSetString">
            <summary>设置 StoresApply_Company_.set_EstablishDate(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.LastUpdateGet">
            <summary>设置 StoresApply_Company_.get_LastUpdate() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.LastUpdateSetInt32">
            <summary>设置 StoresApply_Company_.set_LastUpdate(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.LastUpdateUserIdGet">
            <summary>设置 StoresApply_Company_.get_LastUpdateUserId() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.LastUpdateUserIdSetInt32">
            <summary>设置 StoresApply_Company_.set_LastUpdateUserId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.OrganizeCodeGet">
            <summary>设置 StoresApply_Company_.get_OrganizeCode() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.OrganizeCodeSetString">
            <summary>设置 StoresApply_Company_.set_OrganizeCode(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.OrganizeDateGet">
            <summary>设置 StoresApply_Company_.get_OrganizeDate() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.OrganizeDateSetString">
            <summary>设置 StoresApply_Company_.set_OrganizeDate(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.RegistCodeGet">
            <summary>设置 StoresApply_Company_.get_RegistCode() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.RegistCodeSetString">
            <summary>设置 StoresApply_Company_.set_RegistCode(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.RegisteredCapitalGet">
            <summary>设置 StoresApply_Company_.get_RegisteredCapital() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.RegisteredCapitalSetDecimal">
            <summary>设置 StoresApply_Company_.set_RegisteredCapital(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.ReturnRemarkGet">
            <summary>设置 StoresApply_Company_.get_ReturnRemark() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.ReturnRemarkSetInt32">
            <summary>设置 StoresApply_Company_.set_ReturnRemark(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.Scope_Of_BusinessGet">
            <summary>设置 StoresApply_Company_.get_Scope_Of_Business() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.Scope_Of_BusinessSetString">
            <summary>设置 StoresApply_Company_.set_Scope_Of_Business(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.UidGet">
            <summary>设置 StoresApply_Company_.get_Uid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.UidSetInt32">
            <summary>设置 StoresApply_Company_.set_Uid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.stateGet">
            <summary>设置 StoresApply_Company_.get_state() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.stateSetInt32">
            <summary>设置 StoresApply_Company_.set_state(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimStoresApply_Company_.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.AllInstances.ApplyIdGet">
            <summary>设置 StoresApply_Company_.get_ApplyId() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.AllInstances.ApplyIdSetInt32">
            <summary>设置 StoresApply_Company_.set_ApplyId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.AllInstances.BusinessTimeGet">
            <summary>设置 StoresApply_Company_.get_BusinessTime() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.AllInstances.BusinessTimeSetString">
            <summary>设置 StoresApply_Company_.set_BusinessTime(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.AllInstances.Certificate_AddressGet">
            <summary>设置 StoresApply_Company_.get_Certificate_Address() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.AllInstances.Certificate_AddressSetString">
            <summary>设置 StoresApply_Company_.set_Certificate_Address(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.AllInstances.Certificate_RegionIdGet">
            <summary>设置 StoresApply_Company_.get_Certificate_RegionId() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.AllInstances.Certificate_RegionIdSetInt32">
            <summary>设置 StoresApply_Company_.set_Certificate_RegionId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.AllInstances.Certificate_TypeGet">
            <summary>设置 StoresApply_Company_.get_Certificate_Type() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.AllInstances.Certificate_TypeSetInt32">
            <summary>设置 StoresApply_Company_.set_Certificate_Type(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.AllInstances.CompanyAddressGet">
            <summary>设置 StoresApply_Company_.get_CompanyAddress() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.AllInstances.CompanyAddressSetString">
            <summary>设置 StoresApply_Company_.set_CompanyAddress(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.AllInstances.CompanyContantNameGet">
            <summary>设置 StoresApply_Company_.get_CompanyContantName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.AllInstances.CompanyContantNameSetString">
            <summary>设置 StoresApply_Company_.set_CompanyContantName(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.AllInstances.CompanyContantPhoneGet">
            <summary>设置 StoresApply_Company_.get_CompanyContantPhone() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.AllInstances.CompanyContantPhoneSetString">
            <summary>设置 StoresApply_Company_.set_CompanyContantPhone(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.AllInstances.CompanyNameGet">
            <summary>设置 StoresApply_Company_.get_CompanyName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.AllInstances.CompanyNameSetString">
            <summary>设置 StoresApply_Company_.set_CompanyName(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.AllInstances.CompanyPhoneGet">
            <summary>设置 StoresApply_Company_.get_CompanyPhone() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.AllInstances.CompanyPhoneSetString">
            <summary>设置 StoresApply_Company_.set_CompanyPhone(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.AllInstances.CompanyRegionGet">
            <summary>设置 StoresApply_Company_.get_CompanyRegion() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.AllInstances.CompanyRegionSetInt32">
            <summary>设置 StoresApply_Company_.set_CompanyRegion(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.AllInstances.CreateDateGet">
            <summary>设置 StoresApply_Company_.get_CreateDate() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.AllInstances.CreateDateSetInt32">
            <summary>设置 StoresApply_Company_.set_CreateDate(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.AllInstances.EstablishDateGet">
            <summary>设置 StoresApply_Company_.get_EstablishDate() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.AllInstances.EstablishDateSetString">
            <summary>设置 StoresApply_Company_.set_EstablishDate(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.AllInstances.LastUpdateGet">
            <summary>设置 StoresApply_Company_.get_LastUpdate() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.AllInstances.LastUpdateSetInt32">
            <summary>设置 StoresApply_Company_.set_LastUpdate(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.AllInstances.LastUpdateUserIdGet">
            <summary>设置 StoresApply_Company_.get_LastUpdateUserId() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.AllInstances.LastUpdateUserIdSetInt32">
            <summary>设置 StoresApply_Company_.set_LastUpdateUserId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.AllInstances.OrganizeCodeGet">
            <summary>设置 StoresApply_Company_.get_OrganizeCode() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.AllInstances.OrganizeCodeSetString">
            <summary>设置 StoresApply_Company_.set_OrganizeCode(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.AllInstances.OrganizeDateGet">
            <summary>设置 StoresApply_Company_.get_OrganizeDate() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.AllInstances.OrganizeDateSetString">
            <summary>设置 StoresApply_Company_.set_OrganizeDate(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.AllInstances.RegistCodeGet">
            <summary>设置 StoresApply_Company_.get_RegistCode() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.AllInstances.RegistCodeSetString">
            <summary>设置 StoresApply_Company_.set_RegistCode(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.AllInstances.RegisteredCapitalGet">
            <summary>设置 StoresApply_Company_.get_RegisteredCapital() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.AllInstances.RegisteredCapitalSetDecimal">
            <summary>设置 StoresApply_Company_.set_RegisteredCapital(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.AllInstances.ReturnRemarkGet">
            <summary>设置 StoresApply_Company_.get_ReturnRemark() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.AllInstances.ReturnRemarkSetInt32">
            <summary>设置 StoresApply_Company_.set_ReturnRemark(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.AllInstances.Scope_Of_BusinessGet">
            <summary>设置 StoresApply_Company_.get_Scope_Of_Business() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.AllInstances.Scope_Of_BusinessSetString">
            <summary>设置 StoresApply_Company_.set_Scope_Of_Business(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.AllInstances.UidGet">
            <summary>设置 StoresApply_Company_.get_Uid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.AllInstances.UidSetInt32">
            <summary>设置 StoresApply_Company_.set_Uid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.AllInstances.stateGet">
            <summary>设置 StoresApply_Company_.get_state() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_Company_.AllInstances.stateSetInt32">
            <summary>设置 StoresApply_Company_.set_state(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimStoresApply_public">
            <summary>YunXiu.Model.StoresApply_public 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoresApply_public.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoresApply_public.#ctor(YunXiu.Model.StoresApply_public)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoresApply_public.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoresApply_public.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.ApplyIdGet">
            <summary>设置 StoresApply_public.get_ApplyId() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.ApplyIdSetInt32">
            <summary>设置 StoresApply_public.set_ApplyId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.Constructor">
            <summary>设置 StoresApply_public.StoresApply_public() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.CreateDateGet">
            <summary>设置 StoresApply_public.get_CreateDate() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.CreateDateSetDateTime">
            <summary>设置 StoresApply_public.set_CreateDate(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.IDCardGet">
            <summary>设置 StoresApply_public.get_IDCard() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.IDCardInHandPathGet">
            <summary>设置 StoresApply_public.get_IDCardInHandPath() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.IDCardInHandPathSetString">
            <summary>设置 StoresApply_public.set_IDCardInHandPath(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.IDCardPhoBackPathGet">
            <summary>设置 StoresApply_public.get_IDCardPhoBackPath() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.IDCardPhoBackPathSetString">
            <summary>设置 StoresApply_public.set_IDCardPhoBackPath(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.IDCardPhoForwardPathGet">
            <summary>设置 StoresApply_public.get_IDCardPhoForwardPath() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.IDCardPhoForwardPathSetString">
            <summary>设置 StoresApply_public.set_IDCardPhoForwardPath(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.IDCardSetString">
            <summary>设置 StoresApply_public.set_IDCard(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.LastUpdateGet">
            <summary>设置 StoresApply_public.get_LastUpdate() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.LastUpdateSetDateTime">
            <summary>设置 StoresApply_public.set_LastUpdate(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.LastUpdateUserIdGet">
            <summary>设置 StoresApply_public.get_LastUpdateUserId() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.LastUpdateUserIdSetInt32">
            <summary>设置 StoresApply_public.set_LastUpdateUserId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.LogPathGet">
            <summary>设置 StoresApply_public.get_LogPath() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.LogPathSetString">
            <summary>设置 StoresApply_public.set_LogPath(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.PhoneGet">
            <summary>设置 StoresApply_public.get_Phone() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.PhoneSetString">
            <summary>设置 StoresApply_public.set_Phone(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.RegionsIdGet">
            <summary>设置 StoresApply_public.get_RegionsId() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.RegionsIdSetInt32">
            <summary>设置 StoresApply_public.set_RegionsId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.ReturnRemarkGet">
            <summary>设置 StoresApply_public.get_ReturnRemark() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.ReturnRemarkSetString">
            <summary>设置 StoresApply_public.set_ReturnRemark(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.StoreAddressGet">
            <summary>设置 StoresApply_public.get_StoreAddress() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.StoreAddressSetString">
            <summary>设置 StoresApply_public.set_StoreAddress(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.Store_IntroduceGet">
            <summary>设置 StoresApply_public.get_Store_Introduce() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.Store_IntroduceSetString">
            <summary>设置 StoresApply_public.set_Store_Introduce(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.Store_Type_IdGet">
            <summary>设置 StoresApply_public.get_Store_Type_Id() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.Store_Type_IdSetInt32">
            <summary>设置 StoresApply_public.set_Store_Type_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.StroeNameGet">
            <summary>设置 StoresApply_public.get_StroeName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.StroeNameSetString">
            <summary>设置 StoresApply_public.set_StroeName(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.TrueNameGet">
            <summary>设置 StoresApply_public.get_TrueName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.TrueNameSetString">
            <summary>设置 StoresApply_public.set_TrueName(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.UidGet">
            <summary>设置 StoresApply_public.get_Uid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.UidSetInt32">
            <summary>设置 StoresApply_public.set_Uid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.stateGet">
            <summary>设置 StoresApply_public.get_state() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.stateSetInt32">
            <summary>设置 StoresApply_public.set_state(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimStoresApply_public.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.AllInstances.ApplyIdGet">
            <summary>设置 StoresApply_public.get_ApplyId() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.AllInstances.ApplyIdSetInt32">
            <summary>设置 StoresApply_public.set_ApplyId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.AllInstances.CreateDateGet">
            <summary>设置 StoresApply_public.get_CreateDate() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.AllInstances.CreateDateSetDateTime">
            <summary>设置 StoresApply_public.set_CreateDate(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.AllInstances.IDCardGet">
            <summary>设置 StoresApply_public.get_IDCard() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.AllInstances.IDCardInHandPathGet">
            <summary>设置 StoresApply_public.get_IDCardInHandPath() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.AllInstances.IDCardInHandPathSetString">
            <summary>设置 StoresApply_public.set_IDCardInHandPath(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.AllInstances.IDCardPhoBackPathGet">
            <summary>设置 StoresApply_public.get_IDCardPhoBackPath() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.AllInstances.IDCardPhoBackPathSetString">
            <summary>设置 StoresApply_public.set_IDCardPhoBackPath(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.AllInstances.IDCardPhoForwardPathGet">
            <summary>设置 StoresApply_public.get_IDCardPhoForwardPath() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.AllInstances.IDCardPhoForwardPathSetString">
            <summary>设置 StoresApply_public.set_IDCardPhoForwardPath(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.AllInstances.IDCardSetString">
            <summary>设置 StoresApply_public.set_IDCard(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.AllInstances.LastUpdateGet">
            <summary>设置 StoresApply_public.get_LastUpdate() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.AllInstances.LastUpdateSetDateTime">
            <summary>设置 StoresApply_public.set_LastUpdate(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.AllInstances.LastUpdateUserIdGet">
            <summary>设置 StoresApply_public.get_LastUpdateUserId() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.AllInstances.LastUpdateUserIdSetInt32">
            <summary>设置 StoresApply_public.set_LastUpdateUserId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.AllInstances.LogPathGet">
            <summary>设置 StoresApply_public.get_LogPath() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.AllInstances.LogPathSetString">
            <summary>设置 StoresApply_public.set_LogPath(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.AllInstances.PhoneGet">
            <summary>设置 StoresApply_public.get_Phone() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.AllInstances.PhoneSetString">
            <summary>设置 StoresApply_public.set_Phone(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.AllInstances.RegionsIdGet">
            <summary>设置 StoresApply_public.get_RegionsId() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.AllInstances.RegionsIdSetInt32">
            <summary>设置 StoresApply_public.set_RegionsId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.AllInstances.ReturnRemarkGet">
            <summary>设置 StoresApply_public.get_ReturnRemark() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.AllInstances.ReturnRemarkSetString">
            <summary>设置 StoresApply_public.set_ReturnRemark(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.AllInstances.StoreAddressGet">
            <summary>设置 StoresApply_public.get_StoreAddress() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.AllInstances.StoreAddressSetString">
            <summary>设置 StoresApply_public.set_StoreAddress(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.AllInstances.Store_IntroduceGet">
            <summary>设置 StoresApply_public.get_Store_Introduce() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.AllInstances.Store_IntroduceSetString">
            <summary>设置 StoresApply_public.set_Store_Introduce(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.AllInstances.Store_Type_IdGet">
            <summary>设置 StoresApply_public.get_Store_Type_Id() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.AllInstances.Store_Type_IdSetInt32">
            <summary>设置 StoresApply_public.set_Store_Type_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.AllInstances.StroeNameGet">
            <summary>设置 StoresApply_public.get_StroeName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.AllInstances.StroeNameSetString">
            <summary>设置 StoresApply_public.set_StroeName(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.AllInstances.TrueNameGet">
            <summary>设置 StoresApply_public.get_TrueName() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.AllInstances.TrueNameSetString">
            <summary>设置 StoresApply_public.set_TrueName(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.AllInstances.UidGet">
            <summary>设置 StoresApply_public.get_Uid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.AllInstances.UidSetInt32">
            <summary>设置 StoresApply_public.set_Uid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.AllInstances.stateGet">
            <summary>设置 StoresApply_public.get_state() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoresApply_public.AllInstances.stateSetInt32">
            <summary>设置 StoresApply_public.set_state(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimStoreshipfees">
            <summary>YunXiu.Model.Storeshipfees 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreshipfees.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreshipfees.#ctor(YunXiu.Model.Storeshipfees)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreshipfees.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreshipfees.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshipfees.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshipfees.Constructor">
            <summary>设置 Storeshipfees.Storeshipfees() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshipfees.addfeeGet">
            <summary>设置 Storeshipfees.get_addfee() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshipfees.addfeeSetInt32">
            <summary>设置 Storeshipfees.set_addfee(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshipfees.addvalueGet">
            <summary>设置 Storeshipfees.get_addvalue() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshipfees.addvalueSetInt32">
            <summary>设置 Storeshipfees.set_addvalue(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshipfees.recordidGet">
            <summary>设置 Storeshipfees.get_recordid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshipfees.recordidSetInt32">
            <summary>设置 Storeshipfees.set_recordid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshipfees.regionidGet">
            <summary>设置 Storeshipfees.get_regionid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshipfees.regionidSetInt32">
            <summary>设置 Storeshipfees.set_regionid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshipfees.startfeeGet">
            <summary>设置 Storeshipfees.get_startfee() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshipfees.startfeeSetInt32">
            <summary>设置 Storeshipfees.set_startfee(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshipfees.startvalueGet">
            <summary>设置 Storeshipfees.get_startvalue() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshipfees.startvalueSetInt32">
            <summary>设置 Storeshipfees.set_startvalue(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshipfees.storestidGet">
            <summary>设置 Storeshipfees.get_storestid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshipfees.storestidSetInt32">
            <summary>设置 Storeshipfees.set_storestid(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimStoreshipfees.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshipfees.AllInstances.addfeeGet">
            <summary>设置 Storeshipfees.get_addfee() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshipfees.AllInstances.addfeeSetInt32">
            <summary>设置 Storeshipfees.set_addfee(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshipfees.AllInstances.addvalueGet">
            <summary>设置 Storeshipfees.get_addvalue() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshipfees.AllInstances.addvalueSetInt32">
            <summary>设置 Storeshipfees.set_addvalue(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshipfees.AllInstances.recordidGet">
            <summary>设置 Storeshipfees.get_recordid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshipfees.AllInstances.recordidSetInt32">
            <summary>设置 Storeshipfees.set_recordid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshipfees.AllInstances.regionidGet">
            <summary>设置 Storeshipfees.get_regionid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshipfees.AllInstances.regionidSetInt32">
            <summary>设置 Storeshipfees.set_regionid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshipfees.AllInstances.startfeeGet">
            <summary>设置 Storeshipfees.get_startfee() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshipfees.AllInstances.startfeeSetInt32">
            <summary>设置 Storeshipfees.set_startfee(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshipfees.AllInstances.startvalueGet">
            <summary>设置 Storeshipfees.get_startvalue() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshipfees.AllInstances.startvalueSetInt32">
            <summary>设置 Storeshipfees.set_startvalue(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshipfees.AllInstances.storestidGet">
            <summary>设置 Storeshipfees.get_storestid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshipfees.AllInstances.storestidSetInt32">
            <summary>设置 Storeshipfees.set_storestid(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimStoreshiptemplates">
            <summary>YunXiu.Model.Storeshiptemplates 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreshiptemplates.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreshiptemplates.#ctor(YunXiu.Model.Storeshiptemplates)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreshiptemplates.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimStoreshiptemplates.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshiptemplates.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshiptemplates.Constructor">
            <summary>设置 Storeshiptemplates.Storeshiptemplates() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshiptemplates.freeGet">
            <summary>设置 Storeshiptemplates.get_free() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshiptemplates.freeSetInt32">
            <summary>设置 Storeshiptemplates.set_free(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshiptemplates.storeidGet">
            <summary>设置 Storeshiptemplates.get_storeid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshiptemplates.storeidSetInt32">
            <summary>设置 Storeshiptemplates.set_storeid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshiptemplates.storestidGet">
            <summary>设置 Storeshiptemplates.get_storestid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshiptemplates.storestidSetInt32">
            <summary>设置 Storeshiptemplates.set_storestid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshiptemplates.titleGet">
            <summary>设置 Storeshiptemplates.get_title() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshiptemplates.titleSetString">
            <summary>设置 Storeshiptemplates.set_title(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshiptemplates.typeGet">
            <summary>设置 Storeshiptemplates.get_type() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshiptemplates.typeSetInt32">
            <summary>设置 Storeshiptemplates.set_type(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimStoreshiptemplates.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshiptemplates.AllInstances.freeGet">
            <summary>设置 Storeshiptemplates.get_free() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshiptemplates.AllInstances.freeSetInt32">
            <summary>设置 Storeshiptemplates.set_free(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshiptemplates.AllInstances.storeidGet">
            <summary>设置 Storeshiptemplates.get_storeid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshiptemplates.AllInstances.storeidSetInt32">
            <summary>设置 Storeshiptemplates.set_storeid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshiptemplates.AllInstances.storestidGet">
            <summary>设置 Storeshiptemplates.get_storestid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshiptemplates.AllInstances.storestidSetInt32">
            <summary>设置 Storeshiptemplates.set_storestid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshiptemplates.AllInstances.titleGet">
            <summary>设置 Storeshiptemplates.get_title() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshiptemplates.AllInstances.titleSetString">
            <summary>设置 Storeshiptemplates.set_title(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshiptemplates.AllInstances.typeGet">
            <summary>设置 Storeshiptemplates.get_type() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimStoreshiptemplates.AllInstances.typeSetInt32">
            <summary>设置 Storeshiptemplates.set_type(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimSuitproducts">
            <summary>YunXiu.Model.Suitproducts 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimSuitproducts.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimSuitproducts.#ctor(YunXiu.Model.Suitproducts)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimSuitproducts.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimSuitproducts.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitproducts.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitproducts.Constructor">
            <summary>设置 Suitproducts.Suitproducts() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitproducts.discountGet">
            <summary>设置 Suitproducts.get_discount() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitproducts.discountSetInt32">
            <summary>设置 Suitproducts.set_discount(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitproducts.numberGet">
            <summary>设置 Suitproducts.get_number() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitproducts.numberSetInt32">
            <summary>设置 Suitproducts.set_number(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitproducts.pidGet">
            <summary>设置 Suitproducts.get_pid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitproducts.pidSetInt32">
            <summary>设置 Suitproducts.set_pid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitproducts.pmidGet">
            <summary>设置 Suitproducts.get_pmid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitproducts.pmidSetInt32">
            <summary>设置 Suitproducts.set_pmid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitproducts.recordidGet">
            <summary>设置 Suitproducts.get_recordid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitproducts.recordidSetInt32">
            <summary>设置 Suitproducts.set_recordid(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimSuitproducts.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitproducts.AllInstances.discountGet">
            <summary>设置 Suitproducts.get_discount() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitproducts.AllInstances.discountSetInt32">
            <summary>设置 Suitproducts.set_discount(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitproducts.AllInstances.numberGet">
            <summary>设置 Suitproducts.get_number() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitproducts.AllInstances.numberSetInt32">
            <summary>设置 Suitproducts.set_number(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitproducts.AllInstances.pidGet">
            <summary>设置 Suitproducts.get_pid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitproducts.AllInstances.pidSetInt32">
            <summary>设置 Suitproducts.set_pid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitproducts.AllInstances.pmidGet">
            <summary>设置 Suitproducts.get_pmid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitproducts.AllInstances.pmidSetInt32">
            <summary>设置 Suitproducts.set_pmid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitproducts.AllInstances.recordidGet">
            <summary>设置 Suitproducts.get_recordid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitproducts.AllInstances.recordidSetInt32">
            <summary>设置 Suitproducts.set_recordid(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimSuitpromotions">
            <summary>YunXiu.Model.Suitpromotions 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimSuitpromotions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimSuitpromotions.#ctor(YunXiu.Model.Suitpromotions)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimSuitpromotions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimSuitpromotions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.Constructor">
            <summary>设置 Suitpromotions.Suitpromotions() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.endtime1Get">
            <summary>设置 Suitpromotions.get_endtime1() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.endtime1SetDateTime">
            <summary>设置 Suitpromotions.set_endtime1(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.endtime2Get">
            <summary>设置 Suitpromotions.get_endtime2() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.endtime2SetDateTime">
            <summary>设置 Suitpromotions.set_endtime2(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.endtime3Get">
            <summary>设置 Suitpromotions.get_endtime3() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.endtime3SetDateTime">
            <summary>设置 Suitpromotions.set_endtime3(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.nameGet">
            <summary>设置 Suitpromotions.get_name() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.nameSetString">
            <summary>设置 Suitpromotions.set_name(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.onlyonceGet">
            <summary>设置 Suitpromotions.get_onlyonce() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.onlyonceSetInt32">
            <summary>设置 Suitpromotions.set_onlyonce(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.pmidGet">
            <summary>设置 Suitpromotions.get_pmid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.pmidSetInt32">
            <summary>设置 Suitpromotions.set_pmid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.quotaupperGet">
            <summary>设置 Suitpromotions.get_quotaupper() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.quotaupperSetInt32">
            <summary>设置 Suitpromotions.set_quotaupper(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.starttime1Get">
            <summary>设置 Suitpromotions.get_starttime1() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.starttime1SetDateTime">
            <summary>设置 Suitpromotions.set_starttime1(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.starttime2Get">
            <summary>设置 Suitpromotions.get_starttime2() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.starttime2SetDateTime">
            <summary>设置 Suitpromotions.set_starttime2(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.starttime3Get">
            <summary>设置 Suitpromotions.get_starttime3() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.starttime3SetDateTime">
            <summary>设置 Suitpromotions.set_starttime3(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.stateGet">
            <summary>设置 Suitpromotions.get_state() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.stateSetInt32">
            <summary>设置 Suitpromotions.set_state(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.storeidGet">
            <summary>设置 Suitpromotions.get_storeid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.storeidSetInt32">
            <summary>设置 Suitpromotions.set_storeid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.userranklowerGet">
            <summary>设置 Suitpromotions.get_userranklower() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.userranklowerSetInt32">
            <summary>设置 Suitpromotions.set_userranklower(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimSuitpromotions.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.AllInstances.endtime1Get">
            <summary>设置 Suitpromotions.get_endtime1() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.AllInstances.endtime1SetDateTime">
            <summary>设置 Suitpromotions.set_endtime1(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.AllInstances.endtime2Get">
            <summary>设置 Suitpromotions.get_endtime2() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.AllInstances.endtime2SetDateTime">
            <summary>设置 Suitpromotions.set_endtime2(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.AllInstances.endtime3Get">
            <summary>设置 Suitpromotions.get_endtime3() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.AllInstances.endtime3SetDateTime">
            <summary>设置 Suitpromotions.set_endtime3(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.AllInstances.nameGet">
            <summary>设置 Suitpromotions.get_name() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.AllInstances.nameSetString">
            <summary>设置 Suitpromotions.set_name(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.AllInstances.onlyonceGet">
            <summary>设置 Suitpromotions.get_onlyonce() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.AllInstances.onlyonceSetInt32">
            <summary>设置 Suitpromotions.set_onlyonce(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.AllInstances.pmidGet">
            <summary>设置 Suitpromotions.get_pmid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.AllInstances.pmidSetInt32">
            <summary>设置 Suitpromotions.set_pmid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.AllInstances.quotaupperGet">
            <summary>设置 Suitpromotions.get_quotaupper() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.AllInstances.quotaupperSetInt32">
            <summary>设置 Suitpromotions.set_quotaupper(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.AllInstances.starttime1Get">
            <summary>设置 Suitpromotions.get_starttime1() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.AllInstances.starttime1SetDateTime">
            <summary>设置 Suitpromotions.set_starttime1(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.AllInstances.starttime2Get">
            <summary>设置 Suitpromotions.get_starttime2() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.AllInstances.starttime2SetDateTime">
            <summary>设置 Suitpromotions.set_starttime2(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.AllInstances.starttime3Get">
            <summary>设置 Suitpromotions.get_starttime3() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.AllInstances.starttime3SetDateTime">
            <summary>设置 Suitpromotions.set_starttime3(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.AllInstances.stateGet">
            <summary>设置 Suitpromotions.get_state() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.AllInstances.stateSetInt32">
            <summary>设置 Suitpromotions.set_state(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.AllInstances.storeidGet">
            <summary>设置 Suitpromotions.get_storeid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.AllInstances.storeidSetInt32">
            <summary>设置 Suitpromotions.set_storeid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.AllInstances.userranklowerGet">
            <summary>设置 Suitpromotions.get_userranklower() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimSuitpromotions.AllInstances.userranklowerSetInt32">
            <summary>设置 Suitpromotions.set_userranklower(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimTFUser">
            <summary>YunXiu.Model.TFUser 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimTFUser.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimTFUser.#ctor(YunXiu.Model.TFUser)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimTFUser.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimTFUser.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.Constructor">
            <summary>设置 TFUser.TFUser() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.addressGet">
            <summary>设置 TFUser.get_address() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.addressSetString">
            <summary>设置 TFUser.set_address(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.agentcreatetimeGet">
            <summary>设置 TFUser.get_agentcreatetime() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.agentcreatetimeSetDateTime">
            <summary>设置 TFUser.set_agentcreatetime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.answerGet">
            <summary>设置 TFUser.get_answer() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.answerSetString">
            <summary>设置 TFUser.set_answer(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.birthdayGet">
            <summary>设置 TFUser.get_birthday() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.birthdaySetString">
            <summary>设置 TFUser.set_birthday(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.businessscaleGet">
            <summary>设置 TFUser.get_businessscale() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.businessscaleSetString">
            <summary>设置 TFUser.set_businessscale(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.businesstypeGet">
            <summary>设置 TFUser.get_businesstype() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.businesstypeSetString">
            <summary>设置 TFUser.set_businesstype(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.cellphoneGet">
            <summary>设置 TFUser.get_cellphone() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.cellphoneSetString">
            <summary>设置 TFUser.set_cellphone(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.client_guidGet">
            <summary>设置 TFUser.get_client_guid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.client_guidSetGuid">
            <summary>设置 TFUser.set_client_guid(Guid value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.client_logoGet">
            <summary>设置 TFUser.get_client_logo() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.client_logoSetString">
            <summary>设置 TFUser.set_client_logo(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.client_nameGet">
            <summary>设置 TFUser.get_client_name() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.client_nameSetString">
            <summary>设置 TFUser.set_client_name(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.codeGet">
            <summary>设置 TFUser.get_code() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.codeSetInt32">
            <summary>设置 TFUser.set_code(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.company_nameGet">
            <summary>设置 TFUser.get_company_name() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.company_nameSetString">
            <summary>设置 TFUser.set_company_name(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.contact_nameGet">
            <summary>设置 TFUser.get_contact_name() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.contact_nameSetString">
            <summary>设置 TFUser.set_contact_name(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.contact_phoneGet">
            <summary>设置 TFUser.get_contact_phone() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.contact_phoneSetString">
            <summary>设置 TFUser.set_contact_phone(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.countryGet">
            <summary>设置 TFUser.get_country() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.countrySetString">
            <summary>设置 TFUser.set_country(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.create_dateGet">
            <summary>设置 TFUser.get_create_date() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.create_dateSetDateTime">
            <summary>设置 TFUser.set_create_date(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.educatiolGet">
            <summary>设置 TFUser.get_educatiol() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.educatiolSetString">
            <summary>设置 TFUser.set_educatiol(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.emailGet">
            <summary>设置 TFUser.get_email() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.emailSetString">
            <summary>设置 TFUser.set_email(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.emailstatusGet">
            <summary>设置 TFUser.get_emailstatus() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.emailstatusSetString">
            <summary>设置 TFUser.set_emailstatus(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.faxGet">
            <summary>设置 TFUser.get_fax() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.faxSetString">
            <summary>设置 TFUser.set_fax(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.group_codeGet">
            <summary>设置 TFUser.get_group_code() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.group_codeSetString">
            <summary>设置 TFUser.set_group_code(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.isadminGet">
            <summary>设置 TFUser.get_isadmin() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.isadminSetBoolean">
            <summary>设置 TFUser.set_isadmin(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.iscompanyagentGet">
            <summary>设置 TFUser.get_iscompanyagent() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.iscompanyagentSetString">
            <summary>设置 TFUser.set_iscompanyagent(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.isvirtualGet">
            <summary>设置 TFUser.get_isvirtual() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.isvirtualSetString">
            <summary>设置 TFUser.set_isvirtual(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.last_lcidGet">
            <summary>设置 TFUser.get_last_lcid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.last_lcidSetGuid">
            <summary>设置 TFUser.set_last_lcid(Guid value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.lastloginipGet">
            <summary>设置 TFUser.get_lastloginip() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.lastloginipSetString">
            <summary>设置 TFUser.set_lastloginip(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.lastlogintimeGet">
            <summary>设置 TFUser.get_lastlogintime() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.lastlogintimeSetString">
            <summary>设置 TFUser.set_lastlogintime(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.logintimesGet">
            <summary>设置 TFUser.get_logintimes() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.logintimesSetString">
            <summary>设置 TFUser.set_logintimes(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.merriagestatusGet">
            <summary>设置 TFUser.get_merriagestatus() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.merriagestatusSetString">
            <summary>设置 TFUser.set_merriagestatus(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.openagentstatusGet">
            <summary>设置 TFUser.get_openagentstatus() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.openagentstatusSetString">
            <summary>设置 TFUser.set_openagentstatus(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.passport_noGet">
            <summary>设置 TFUser.get_passport_no() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.passport_noSetString">
            <summary>设置 TFUser.set_passport_no(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.passport_typeGet">
            <summary>设置 TFUser.get_passport_type() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.passport_typeSetString">
            <summary>设置 TFUser.set_passport_type(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.questionGet">
            <summary>设置 TFUser.get_question() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.questionSetString">
            <summary>设置 TFUser.set_question(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.questionstatusGet">
            <summary>设置 TFUser.get_questionstatus() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.questionstatusSetString">
            <summary>设置 TFUser.set_questionstatus(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.realstatusGet">
            <summary>设置 TFUser.get_realstatus() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.realstatusSetString">
            <summary>设置 TFUser.set_realstatus(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.registertimeGet">
            <summary>设置 TFUser.get_registertime() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.registertimeSetString">
            <summary>设置 TFUser.set_registertime(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.role_typeGet">
            <summary>设置 TFUser.get_role_type() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.role_typeSetGuid">
            <summary>设置 TFUser.set_role_type(Guid value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.schoolGet">
            <summary>设置 TFUser.get_school() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.schoolSetString">
            <summary>设置 TFUser.set_school(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.sexGet">
            <summary>设置 TFUser.get_sex() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.sexSetInt32">
            <summary>设置 TFUser.set_sex(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.stateGet">
            <summary>设置 TFUser.get_state() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.stateSetString">
            <summary>设置 TFUser.set_state(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.statusGet">
            <summary>设置 TFUser.get_status() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.statusSetBoolean">
            <summary>设置 TFUser.set_status(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.systemstatusGet">
            <summary>设置 TFUser.get_systemstatus() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.systemstatusSetInt32">
            <summary>设置 TFUser.set_systemstatus(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.telephoneGet">
            <summary>设置 TFUser.get_telephone() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.telephoneSetString">
            <summary>设置 TFUser.set_telephone(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.truenameGet">
            <summary>设置 TFUser.get_truename() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.truenameSetString">
            <summary>设置 TFUser.set_truename(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.userpositionGet">
            <summary>设置 TFUser.get_userposition() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.userpositionSetString">
            <summary>设置 TFUser.set_userposition(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.zipGet">
            <summary>设置 TFUser.get_zip() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.zipSetString">
            <summary>设置 TFUser.set_zip(String value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimTFUser.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.addressGet">
            <summary>设置 TFUser.get_address() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.addressSetString">
            <summary>设置 TFUser.set_address(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.agentcreatetimeGet">
            <summary>设置 TFUser.get_agentcreatetime() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.agentcreatetimeSetDateTime">
            <summary>设置 TFUser.set_agentcreatetime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.answerGet">
            <summary>设置 TFUser.get_answer() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.answerSetString">
            <summary>设置 TFUser.set_answer(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.birthdayGet">
            <summary>设置 TFUser.get_birthday() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.birthdaySetString">
            <summary>设置 TFUser.set_birthday(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.businessscaleGet">
            <summary>设置 TFUser.get_businessscale() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.businessscaleSetString">
            <summary>设置 TFUser.set_businessscale(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.businesstypeGet">
            <summary>设置 TFUser.get_businesstype() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.businesstypeSetString">
            <summary>设置 TFUser.set_businesstype(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.cellphoneGet">
            <summary>设置 TFUser.get_cellphone() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.cellphoneSetString">
            <summary>设置 TFUser.set_cellphone(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.client_guidGet">
            <summary>设置 TFUser.get_client_guid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.client_guidSetGuid">
            <summary>设置 TFUser.set_client_guid(Guid value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.client_logoGet">
            <summary>设置 TFUser.get_client_logo() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.client_logoSetString">
            <summary>设置 TFUser.set_client_logo(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.client_nameGet">
            <summary>设置 TFUser.get_client_name() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.client_nameSetString">
            <summary>设置 TFUser.set_client_name(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.codeGet">
            <summary>设置 TFUser.get_code() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.codeSetInt32">
            <summary>设置 TFUser.set_code(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.company_nameGet">
            <summary>设置 TFUser.get_company_name() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.company_nameSetString">
            <summary>设置 TFUser.set_company_name(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.contact_nameGet">
            <summary>设置 TFUser.get_contact_name() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.contact_nameSetString">
            <summary>设置 TFUser.set_contact_name(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.contact_phoneGet">
            <summary>设置 TFUser.get_contact_phone() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.contact_phoneSetString">
            <summary>设置 TFUser.set_contact_phone(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.countryGet">
            <summary>设置 TFUser.get_country() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.countrySetString">
            <summary>设置 TFUser.set_country(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.create_dateGet">
            <summary>设置 TFUser.get_create_date() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.create_dateSetDateTime">
            <summary>设置 TFUser.set_create_date(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.educatiolGet">
            <summary>设置 TFUser.get_educatiol() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.educatiolSetString">
            <summary>设置 TFUser.set_educatiol(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.emailGet">
            <summary>设置 TFUser.get_email() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.emailSetString">
            <summary>设置 TFUser.set_email(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.emailstatusGet">
            <summary>设置 TFUser.get_emailstatus() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.emailstatusSetString">
            <summary>设置 TFUser.set_emailstatus(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.faxGet">
            <summary>设置 TFUser.get_fax() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.faxSetString">
            <summary>设置 TFUser.set_fax(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.group_codeGet">
            <summary>设置 TFUser.get_group_code() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.group_codeSetString">
            <summary>设置 TFUser.set_group_code(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.isadminGet">
            <summary>设置 TFUser.get_isadmin() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.isadminSetBoolean">
            <summary>设置 TFUser.set_isadmin(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.iscompanyagentGet">
            <summary>设置 TFUser.get_iscompanyagent() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.iscompanyagentSetString">
            <summary>设置 TFUser.set_iscompanyagent(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.isvirtualGet">
            <summary>设置 TFUser.get_isvirtual() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.isvirtualSetString">
            <summary>设置 TFUser.set_isvirtual(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.last_lcidGet">
            <summary>设置 TFUser.get_last_lcid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.last_lcidSetGuid">
            <summary>设置 TFUser.set_last_lcid(Guid value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.lastloginipGet">
            <summary>设置 TFUser.get_lastloginip() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.lastloginipSetString">
            <summary>设置 TFUser.set_lastloginip(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.lastlogintimeGet">
            <summary>设置 TFUser.get_lastlogintime() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.lastlogintimeSetString">
            <summary>设置 TFUser.set_lastlogintime(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.logintimesGet">
            <summary>设置 TFUser.get_logintimes() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.logintimesSetString">
            <summary>设置 TFUser.set_logintimes(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.merriagestatusGet">
            <summary>设置 TFUser.get_merriagestatus() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.merriagestatusSetString">
            <summary>设置 TFUser.set_merriagestatus(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.openagentstatusGet">
            <summary>设置 TFUser.get_openagentstatus() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.openagentstatusSetString">
            <summary>设置 TFUser.set_openagentstatus(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.passport_noGet">
            <summary>设置 TFUser.get_passport_no() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.passport_noSetString">
            <summary>设置 TFUser.set_passport_no(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.passport_typeGet">
            <summary>设置 TFUser.get_passport_type() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.passport_typeSetString">
            <summary>设置 TFUser.set_passport_type(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.questionGet">
            <summary>设置 TFUser.get_question() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.questionSetString">
            <summary>设置 TFUser.set_question(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.questionstatusGet">
            <summary>设置 TFUser.get_questionstatus() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.questionstatusSetString">
            <summary>设置 TFUser.set_questionstatus(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.realstatusGet">
            <summary>设置 TFUser.get_realstatus() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.realstatusSetString">
            <summary>设置 TFUser.set_realstatus(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.registertimeGet">
            <summary>设置 TFUser.get_registertime() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.registertimeSetString">
            <summary>设置 TFUser.set_registertime(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.role_typeGet">
            <summary>设置 TFUser.get_role_type() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.role_typeSetGuid">
            <summary>设置 TFUser.set_role_type(Guid value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.schoolGet">
            <summary>设置 TFUser.get_school() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.schoolSetString">
            <summary>设置 TFUser.set_school(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.sexGet">
            <summary>设置 TFUser.get_sex() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.sexSetInt32">
            <summary>设置 TFUser.set_sex(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.stateGet">
            <summary>设置 TFUser.get_state() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.stateSetString">
            <summary>设置 TFUser.set_state(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.statusGet">
            <summary>设置 TFUser.get_status() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.statusSetBoolean">
            <summary>设置 TFUser.set_status(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.systemstatusGet">
            <summary>设置 TFUser.get_systemstatus() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.systemstatusSetInt32">
            <summary>设置 TFUser.set_systemstatus(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.telephoneGet">
            <summary>设置 TFUser.get_telephone() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.telephoneSetString">
            <summary>设置 TFUser.set_telephone(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.truenameGet">
            <summary>设置 TFUser.get_truename() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.truenameSetString">
            <summary>设置 TFUser.set_truename(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.userpositionGet">
            <summary>设置 TFUser.get_userposition() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.userpositionSetString">
            <summary>设置 TFUser.set_userposition(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.zipGet">
            <summary>设置 TFUser.get_zip() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTFUser.AllInstances.zipSetString">
            <summary>设置 TFUser.set_zip(String value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimTender">
            <summary>YunXiu.Model.Tender 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimTender.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimTender.#ctor(YunXiu.Model.Tender)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimTender.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimTender.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTender.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTender.CategoryGet">
            <summary>设置 Tender.get_Category() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTender.CategorySetCategory">
            <summary>设置 Tender.set_Category(Category value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTender.Constructor">
            <summary>设置 Tender.Tender() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTender.DetailsDescriptGet">
            <summary>设置 Tender.get_DetailsDescript() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTender.DetailsDescriptSetString">
            <summary>设置 Tender.set_DetailsDescript(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTender.KeyWordGet">
            <summary>设置 Tender.get_KeyWord() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTender.KeyWordSetString">
            <summary>设置 Tender.set_KeyWord(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTender.StateGet">
            <summary>设置 Tender.get_State() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTender.StateSetString">
            <summary>设置 Tender.set_State(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTender.TTIdGet">
            <summary>设置 Tender.get_TTId() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTender.TTIdSetInt32">
            <summary>设置 Tender.set_TTId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTender.TenderAreaGet">
            <summary>设置 Tender.get_TenderArea() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTender.TenderAreaSetString">
            <summary>设置 Tender.set_TenderArea(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTender.TenderEndDateGet">
            <summary>设置 Tender.get_TenderEndDate() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTender.TenderEndDateSetDateTime">
            <summary>设置 Tender.set_TenderEndDate(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTender.TenderInvokeOrganizationGet">
            <summary>设置 Tender.get_TenderInvokeOrganization() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTender.TenderInvokeOrganizationSetString">
            <summary>设置 Tender.set_TenderInvokeOrganization(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTender.TenderSalesAddressGet">
            <summary>设置 Tender.get_TenderSalesAddress() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTender.TenderSalesAddressSetString">
            <summary>设置 Tender.set_TenderSalesAddress(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTender.TenderStartDateGet">
            <summary>设置 Tender.get_TenderStartDate() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTender.TenderStartDateSetDateTime">
            <summary>设置 Tender.set_TenderStartDate(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTender.TitleGet">
            <summary>设置 Tender.get_Title() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTender.TitleSetString">
            <summary>设置 Tender.set_Title(String value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimTender.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTender.AllInstances.CategoryGet">
            <summary>设置 Tender.get_Category() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTender.AllInstances.CategorySetCategory">
            <summary>设置 Tender.set_Category(Category value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTender.AllInstances.DetailsDescriptGet">
            <summary>设置 Tender.get_DetailsDescript() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTender.AllInstances.DetailsDescriptSetString">
            <summary>设置 Tender.set_DetailsDescript(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTender.AllInstances.KeyWordGet">
            <summary>设置 Tender.get_KeyWord() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTender.AllInstances.KeyWordSetString">
            <summary>设置 Tender.set_KeyWord(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTender.AllInstances.StateGet">
            <summary>设置 Tender.get_State() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTender.AllInstances.StateSetString">
            <summary>设置 Tender.set_State(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTender.AllInstances.TTIdGet">
            <summary>设置 Tender.get_TTId() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTender.AllInstances.TTIdSetInt32">
            <summary>设置 Tender.set_TTId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTender.AllInstances.TenderAreaGet">
            <summary>设置 Tender.get_TenderArea() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTender.AllInstances.TenderAreaSetString">
            <summary>设置 Tender.set_TenderArea(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTender.AllInstances.TenderEndDateGet">
            <summary>设置 Tender.get_TenderEndDate() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTender.AllInstances.TenderEndDateSetDateTime">
            <summary>设置 Tender.set_TenderEndDate(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTender.AllInstances.TenderInvokeOrganizationGet">
            <summary>设置 Tender.get_TenderInvokeOrganization() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTender.AllInstances.TenderInvokeOrganizationSetString">
            <summary>设置 Tender.set_TenderInvokeOrganization(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTender.AllInstances.TenderSalesAddressGet">
            <summary>设置 Tender.get_TenderSalesAddress() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTender.AllInstances.TenderSalesAddressSetString">
            <summary>设置 Tender.set_TenderSalesAddress(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTender.AllInstances.TenderStartDateGet">
            <summary>设置 Tender.get_TenderStartDate() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTender.AllInstances.TenderStartDateSetDateTime">
            <summary>设置 Tender.set_TenderStartDate(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTender.AllInstances.TitleGet">
            <summary>设置 Tender.get_Title() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTender.AllInstances.TitleSetString">
            <summary>设置 Tender.set_Title(String value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimTenderAccept">
            <summary>YunXiu.Model.TenderAccept 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimTenderAccept.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimTenderAccept.#ctor(YunXiu.Model.TenderAccept)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimTenderAccept.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimTenderAccept.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTenderAccept.AIDGet">
            <summary>设置 TenderAccept.get_AID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTenderAccept.AIDSetInt32">
            <summary>设置 TenderAccept.set_AID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTenderAccept.AcceptBidIDGet">
            <summary>设置 TenderAccept.get_AcceptBidID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTenderAccept.AcceptBidIDSetBid">
            <summary>设置 TenderAccept.set_AcceptBidID(Bid value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTenderAccept.AcceptStoreGet">
            <summary>设置 TenderAccept.get_AcceptStore() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTenderAccept.AcceptStoreSetStore">
            <summary>设置 TenderAccept.set_AcceptStore(Store value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTenderAccept.AcceptTenderGet">
            <summary>设置 TenderAccept.get_AcceptTender() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTenderAccept.AcceptTenderSetTender">
            <summary>设置 TenderAccept.set_AcceptTender(Tender value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTenderAccept.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTenderAccept.Constructor">
            <summary>设置 TenderAccept.TenderAccept() 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimTenderAccept.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTenderAccept.AllInstances.AIDGet">
            <summary>设置 TenderAccept.get_AID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTenderAccept.AllInstances.AIDSetInt32">
            <summary>设置 TenderAccept.set_AID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTenderAccept.AllInstances.AcceptBidIDGet">
            <summary>设置 TenderAccept.get_AcceptBidID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTenderAccept.AllInstances.AcceptBidIDSetBid">
            <summary>设置 TenderAccept.set_AcceptBidID(Bid value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTenderAccept.AllInstances.AcceptStoreGet">
            <summary>设置 TenderAccept.get_AcceptStore() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTenderAccept.AllInstances.AcceptStoreSetStore">
            <summary>设置 TenderAccept.set_AcceptStore(Store value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTenderAccept.AllInstances.AcceptTenderGet">
            <summary>设置 TenderAccept.get_AcceptTender() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTenderAccept.AllInstances.AcceptTenderSetTender">
            <summary>设置 TenderAccept.set_AcceptTender(Tender value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimTenderView">
            <summary>YunXiu.Model.TenderView 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimTenderView.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimTenderView.#ctor(YunXiu.Model.TenderView)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimTenderView.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimTenderView.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTenderView.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTenderView.Constructor">
            <summary>设置 TenderView.TenderView() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTenderView.ExtListGet">
            <summary>设置 TenderView.get_ExtList() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTenderView.ExtListSetListOfExtTable">
            <summary>设置 TenderView.set_ExtList(List`1&lt;ExtTable&gt; value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTenderView.ItemGet">
            <summary>设置 TenderView.get_Item() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTenderView.ItemSetTender">
            <summary>设置 TenderView.set_Item(Tender value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimTenderView.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTenderView.AllInstances.ExtListGet">
            <summary>设置 TenderView.get_ExtList() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTenderView.AllInstances.ExtListSetListOfExtTable">
            <summary>设置 TenderView.set_ExtList(List`1&lt;ExtTable&gt; value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTenderView.AllInstances.ItemGet">
            <summary>设置 TenderView.get_Item() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTenderView.AllInstances.ItemSetTender">
            <summary>设置 TenderView.set_Item(Tender value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimTimeproducts">
            <summary>YunXiu.Model.Timeproducts 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimTimeproducts.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimTimeproducts.#ctor(YunXiu.Model.Timeproducts)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimTimeproducts.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimTimeproducts.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTimeproducts.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTimeproducts.Constructor">
            <summary>设置 Timeproducts.Timeproducts() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTimeproducts.onsalestateGet">
            <summary>设置 Timeproducts.get_onsalestate() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTimeproducts.onsalestateSetInt32">
            <summary>设置 Timeproducts.set_onsalestate(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTimeproducts.onsaletimeGet">
            <summary>设置 Timeproducts.get_onsaletime() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTimeproducts.onsaletimeSetDateTime">
            <summary>设置 Timeproducts.set_onsaletime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTimeproducts.outsalestateGet">
            <summary>设置 Timeproducts.get_outsalestate() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTimeproducts.outsalestateSetInt32">
            <summary>设置 Timeproducts.set_outsalestate(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTimeproducts.outsaletimeGet">
            <summary>设置 Timeproducts.get_outsaletime() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTimeproducts.outsaletimeSetDateTime">
            <summary>设置 Timeproducts.set_outsaletime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTimeproducts.pidGet">
            <summary>设置 Timeproducts.get_pid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTimeproducts.pidSetInt32">
            <summary>设置 Timeproducts.set_pid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTimeproducts.recordidGet">
            <summary>设置 Timeproducts.get_recordid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTimeproducts.recordidSetInt32">
            <summary>设置 Timeproducts.set_recordid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTimeproducts.storeidGet">
            <summary>设置 Timeproducts.get_storeid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTimeproducts.storeidSetInt32">
            <summary>设置 Timeproducts.set_storeid(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimTimeproducts.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTimeproducts.AllInstances.onsalestateGet">
            <summary>设置 Timeproducts.get_onsalestate() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTimeproducts.AllInstances.onsalestateSetInt32">
            <summary>设置 Timeproducts.set_onsalestate(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTimeproducts.AllInstances.onsaletimeGet">
            <summary>设置 Timeproducts.get_onsaletime() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTimeproducts.AllInstances.onsaletimeSetDateTime">
            <summary>设置 Timeproducts.set_onsaletime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTimeproducts.AllInstances.outsalestateGet">
            <summary>设置 Timeproducts.get_outsalestate() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTimeproducts.AllInstances.outsalestateSetInt32">
            <summary>设置 Timeproducts.set_outsalestate(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTimeproducts.AllInstances.outsaletimeGet">
            <summary>设置 Timeproducts.get_outsaletime() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTimeproducts.AllInstances.outsaletimeSetDateTime">
            <summary>设置 Timeproducts.set_outsaletime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTimeproducts.AllInstances.pidGet">
            <summary>设置 Timeproducts.get_pid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTimeproducts.AllInstances.pidSetInt32">
            <summary>设置 Timeproducts.set_pid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTimeproducts.AllInstances.recordidGet">
            <summary>设置 Timeproducts.get_recordid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTimeproducts.AllInstances.recordidSetInt32">
            <summary>设置 Timeproducts.set_recordid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTimeproducts.AllInstances.storeidGet">
            <summary>设置 Timeproducts.get_storeid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTimeproducts.AllInstances.storeidSetInt32">
            <summary>设置 Timeproducts.set_storeid(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimTopics">
            <summary>YunXiu.Model.Topics 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimTopics.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimTopics.#ctor(YunXiu.Model.Topics)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimTopics.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimTopics.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTopics.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTopics.Constructor">
            <summary>设置 Topics.Topics() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTopics.bodyhtmlGet">
            <summary>设置 Topics.get_bodyhtml() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTopics.bodyhtmlSetString">
            <summary>设置 Topics.set_bodyhtml(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTopics.endtimeGet">
            <summary>设置 Topics.get_endtime() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTopics.endtimeSetDateTime">
            <summary>设置 Topics.set_endtime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTopics.headhtmlGet">
            <summary>设置 Topics.get_headhtml() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTopics.headhtmlSetString">
            <summary>设置 Topics.set_headhtml(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTopics.isshowGet">
            <summary>设置 Topics.get_isshow() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTopics.isshowSetInt32">
            <summary>设置 Topics.set_isshow(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTopics.snGet">
            <summary>设置 Topics.get_sn() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTopics.snSetString">
            <summary>设置 Topics.set_sn(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTopics.starttimeGet">
            <summary>设置 Topics.get_starttime() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTopics.starttimeSetDateTime">
            <summary>设置 Topics.set_starttime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTopics.titleGet">
            <summary>设置 Topics.get_title() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTopics.titleSetString">
            <summary>设置 Topics.set_title(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTopics.topicidGet">
            <summary>设置 Topics.get_topicid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTopics.topicidSetInt32">
            <summary>设置 Topics.set_topicid(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimTopics.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTopics.AllInstances.bodyhtmlGet">
            <summary>设置 Topics.get_bodyhtml() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTopics.AllInstances.bodyhtmlSetString">
            <summary>设置 Topics.set_bodyhtml(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTopics.AllInstances.endtimeGet">
            <summary>设置 Topics.get_endtime() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTopics.AllInstances.endtimeSetDateTime">
            <summary>设置 Topics.set_endtime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTopics.AllInstances.headhtmlGet">
            <summary>设置 Topics.get_headhtml() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTopics.AllInstances.headhtmlSetString">
            <summary>设置 Topics.set_headhtml(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTopics.AllInstances.isshowGet">
            <summary>设置 Topics.get_isshow() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTopics.AllInstances.isshowSetInt32">
            <summary>设置 Topics.set_isshow(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTopics.AllInstances.snGet">
            <summary>设置 Topics.get_sn() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTopics.AllInstances.snSetString">
            <summary>设置 Topics.set_sn(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTopics.AllInstances.starttimeGet">
            <summary>设置 Topics.get_starttime() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTopics.AllInstances.starttimeSetDateTime">
            <summary>设置 Topics.set_starttime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTopics.AllInstances.titleGet">
            <summary>设置 Topics.get_title() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTopics.AllInstances.titleSetString">
            <summary>设置 Topics.set_title(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTopics.AllInstances.topicidGet">
            <summary>设置 Topics.get_topicid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTopics.AllInstances.topicidSetInt32">
            <summary>设置 Topics.set_topicid(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimTrace">
            <summary>YunXiu.Model.Trace 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimTrace.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimTrace.#ctor(YunXiu.Model.Trace)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimTrace.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimTrace.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTrace.AcceptStationGet">
            <summary>设置 Trace.get_AcceptStation() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTrace.AcceptStationSetString">
            <summary>设置 Trace.set_AcceptStation(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTrace.AcceptTimeGet">
            <summary>设置 Trace.get_AcceptTime() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTrace.AcceptTimeSetString">
            <summary>设置 Trace.set_AcceptTime(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTrace.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTrace.Constructor">
            <summary>设置 Trace.Trace() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTrace.IDGet">
            <summary>设置 Trace.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTrace.IDSetInt32">
            <summary>设置 Trace.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTrace.RemarkGet">
            <summary>设置 Trace.get_Remark() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTrace.RemarkSetString">
            <summary>设置 Trace.set_Remark(String value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimTrace.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTrace.AllInstances.AcceptStationGet">
            <summary>设置 Trace.get_AcceptStation() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTrace.AllInstances.AcceptStationSetString">
            <summary>设置 Trace.set_AcceptStation(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTrace.AllInstances.AcceptTimeGet">
            <summary>设置 Trace.get_AcceptTime() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTrace.AllInstances.AcceptTimeSetString">
            <summary>设置 Trace.set_AcceptTime(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTrace.AllInstances.IDGet">
            <summary>设置 Trace.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTrace.AllInstances.IDSetInt32">
            <summary>设置 Trace.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTrace.AllInstances.RemarkGet">
            <summary>设置 Trace.get_Remark() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimTrace.AllInstances.RemarkSetString">
            <summary>设置 Trace.set_Remark(String value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimUser">
            <summary>YunXiu.Model.User 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimUser.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimUser.#ctor(YunXiu.Model.User)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimUser.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimUser.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.AvatarGet">
            <summary>设置 User.get_Avatar() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.AvatarSetString">
            <summary>设置 User.set_Avatar(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.Constructor">
            <summary>设置 User.User() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.LiftBanTimeGet">
            <summary>设置 User.get_LiftBanTime() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.LiftBanTimeSetDateTime">
            <summary>设置 User.set_LiftBanTime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.MallaGIDGet">
            <summary>设置 User.get_MallaGID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.MallaGIDSetInt32">
            <summary>设置 User.set_MallaGID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.PayCreditsGet">
            <summary>设置 User.get_PayCredits() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.PayCreditsSetInt32">
            <summary>设置 User.set_PayCredits(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.PermissionsGet">
            <summary>设置 User.get_Permissions() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.PermissionsSetListOfPermission">
            <summary>设置 User.set_Permissions(List`1&lt;Permission&gt; value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.RankCreditsGet">
            <summary>设置 User.get_RankCredits() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.RankCreditsSetInt32">
            <summary>设置 User.set_RankCredits(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.RolesGet">
            <summary>设置 User.get_Roles() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.RolesSetListOfRole">
            <summary>设置 User.set_Roles(List`1&lt;Role&gt; value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.SaltGet">
            <summary>设置 User.get_Salt() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.SaltSetString">
            <summary>设置 User.set_Salt(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.TFUserGet">
            <summary>设置 User.get_TFUser() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.TFUserSetTFUser">
            <summary>设置 User.set_TFUser(TFUser value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.UIDGet">
            <summary>设置 User.get_UID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.UIDSetInt32">
            <summary>设置 User.set_UID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.UStoreGet">
            <summary>设置 User.get_UStore() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.UStoreSetStore">
            <summary>设置 User.set_UStore(Store value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.UserRIDGet">
            <summary>设置 User.get_UserRID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.UserRIDSetInt32">
            <summary>设置 User.set_UserRID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.client_guidGet">
            <summary>设置 User.get_client_guid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.client_guidSetGuid">
            <summary>设置 User.set_client_guid(Guid value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimUser.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.AllInstances.AvatarGet">
            <summary>设置 User.get_Avatar() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.AllInstances.AvatarSetString">
            <summary>设置 User.set_Avatar(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.AllInstances.LiftBanTimeGet">
            <summary>设置 User.get_LiftBanTime() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.AllInstances.LiftBanTimeSetDateTime">
            <summary>设置 User.set_LiftBanTime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.AllInstances.MallaGIDGet">
            <summary>设置 User.get_MallaGID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.AllInstances.MallaGIDSetInt32">
            <summary>设置 User.set_MallaGID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.AllInstances.PayCreditsGet">
            <summary>设置 User.get_PayCredits() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.AllInstances.PayCreditsSetInt32">
            <summary>设置 User.set_PayCredits(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.AllInstances.PermissionsGet">
            <summary>设置 User.get_Permissions() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.AllInstances.PermissionsSetListOfPermission">
            <summary>设置 User.set_Permissions(List`1&lt;Permission&gt; value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.AllInstances.RankCreditsGet">
            <summary>设置 User.get_RankCredits() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.AllInstances.RankCreditsSetInt32">
            <summary>设置 User.set_RankCredits(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.AllInstances.RolesGet">
            <summary>设置 User.get_Roles() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.AllInstances.RolesSetListOfRole">
            <summary>设置 User.set_Roles(List`1&lt;Role&gt; value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.AllInstances.SaltGet">
            <summary>设置 User.get_Salt() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.AllInstances.SaltSetString">
            <summary>设置 User.set_Salt(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.AllInstances.TFUserGet">
            <summary>设置 User.get_TFUser() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.AllInstances.TFUserSetTFUser">
            <summary>设置 User.set_TFUser(TFUser value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.AllInstances.UIDGet">
            <summary>设置 User.get_UID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.AllInstances.UIDSetInt32">
            <summary>设置 User.set_UID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.AllInstances.UStoreGet">
            <summary>设置 User.get_UStore() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.AllInstances.UStoreSetStore">
            <summary>设置 User.set_UStore(Store value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.AllInstances.UserRIDGet">
            <summary>设置 User.get_UserRID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.AllInstances.UserRIDSetInt32">
            <summary>设置 User.set_UserRID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.AllInstances.client_guidGet">
            <summary>设置 User.get_client_guid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUser.AllInstances.client_guidSetGuid">
            <summary>设置 User.set_client_guid(Guid value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimUserRanks">
            <summary>YunXiu.Model.UserRanks 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimUserRanks.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimUserRanks.#ctor(YunXiu.Model.UserRanks)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimUserRanks.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimUserRanks.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserRanks.AvatarGet">
            <summary>设置 UserRanks.get_Avatar() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserRanks.AvatarSetString">
            <summary>设置 UserRanks.set_Avatar(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserRanks.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserRanks.Constructor">
            <summary>设置 UserRanks.UserRanks() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserRanks.CreditsLowerGet">
            <summary>设置 UserRanks.get_CreditsLower() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserRanks.CreditsLowerSetInt32">
            <summary>设置 UserRanks.set_CreditsLower(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserRanks.CreditsUpperGet">
            <summary>设置 UserRanks.get_CreditsUpper() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserRanks.CreditsUpperSetInt32">
            <summary>设置 UserRanks.set_CreditsUpper(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserRanks.LimitDaysGet">
            <summary>设置 UserRanks.get_LimitDays() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserRanks.LimitDaysSetInt32">
            <summary>设置 UserRanks.set_LimitDays(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserRanks.SystemGet">
            <summary>设置 UserRanks.get_System() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserRanks.SystemSetInt32">
            <summary>设置 UserRanks.set_System(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserRanks.TitleGet">
            <summary>设置 UserRanks.get_Title() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserRanks.TitleSetString">
            <summary>设置 UserRanks.set_Title(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserRanks.UserRidGet">
            <summary>设置 UserRanks.get_UserRid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserRanks.UserRidSetInt32">
            <summary>设置 UserRanks.set_UserRid(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimUserRanks.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserRanks.AllInstances.AvatarGet">
            <summary>设置 UserRanks.get_Avatar() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserRanks.AllInstances.AvatarSetString">
            <summary>设置 UserRanks.set_Avatar(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserRanks.AllInstances.CreditsLowerGet">
            <summary>设置 UserRanks.get_CreditsLower() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserRanks.AllInstances.CreditsLowerSetInt32">
            <summary>设置 UserRanks.set_CreditsLower(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserRanks.AllInstances.CreditsUpperGet">
            <summary>设置 UserRanks.get_CreditsUpper() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserRanks.AllInstances.CreditsUpperSetInt32">
            <summary>设置 UserRanks.set_CreditsUpper(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserRanks.AllInstances.LimitDaysGet">
            <summary>设置 UserRanks.get_LimitDays() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserRanks.AllInstances.LimitDaysSetInt32">
            <summary>设置 UserRanks.set_LimitDays(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserRanks.AllInstances.SystemGet">
            <summary>设置 UserRanks.get_System() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserRanks.AllInstances.SystemSetInt32">
            <summary>设置 UserRanks.set_System(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserRanks.AllInstances.TitleGet">
            <summary>设置 UserRanks.get_Title() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserRanks.AllInstances.TitleSetString">
            <summary>设置 UserRanks.set_Title(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserRanks.AllInstances.UserRidGet">
            <summary>设置 UserRanks.get_UserRid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserRanks.AllInstances.UserRidSetInt32">
            <summary>设置 UserRanks.set_UserRid(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimUserdetails">
            <summary>YunXiu.Model.Userdetails 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimUserdetails.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimUserdetails.#ctor(YunXiu.Model.Userdetails)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimUserdetails.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimUserdetails.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.Constructor">
            <summary>设置 Userdetails.Userdetails() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.addressGet">
            <summary>设置 Userdetails.get_address() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.addressSetString">
            <summary>设置 Userdetails.set_address(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.bdayGet">
            <summary>设置 Userdetails.get_bday() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.bdaySetString">
            <summary>设置 Userdetails.set_bday(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.bioGet">
            <summary>设置 Userdetails.get_bio() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.bioSetString">
            <summary>设置 Userdetails.set_bio(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.genderGet">
            <summary>设置 Userdetails.get_gender() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.genderSetInt32">
            <summary>设置 Userdetails.set_gender(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.idcardGet">
            <summary>设置 Userdetails.get_idcard() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.idcardSetString">
            <summary>设置 Userdetails.set_idcard(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.lastvisitipGet">
            <summary>设置 Userdetails.get_lastvisitip() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.lastvisitipSetString">
            <summary>设置 Userdetails.set_lastvisitip(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.lastvisitrgidGet">
            <summary>设置 Userdetails.get_lastvisitrgid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.lastvisitrgidSetInt32">
            <summary>设置 Userdetails.set_lastvisitrgid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.lastvisittimeGet">
            <summary>设置 Userdetails.get_lastvisittime() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.lastvisittimeSetDateTime">
            <summary>设置 Userdetails.set_lastvisittime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.realnameGet">
            <summary>设置 Userdetails.get_realname() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.realnameSetString">
            <summary>设置 Userdetails.set_realname(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.regionidGet">
            <summary>设置 Userdetails.get_regionid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.regionidSetInt32">
            <summary>设置 Userdetails.set_regionid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.registeripGet">
            <summary>设置 Userdetails.get_registerip() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.registeripSetString">
            <summary>设置 Userdetails.set_registerip(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.registerrgidGet">
            <summary>设置 Userdetails.get_registerrgid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.registerrgidSetInt32">
            <summary>设置 Userdetails.set_registerrgid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.registertimeGet">
            <summary>设置 Userdetails.get_registertime() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.registertimeSetDateTime">
            <summary>设置 Userdetails.set_registertime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.uidGet">
            <summary>设置 Userdetails.get_uid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.uidSetInt32">
            <summary>设置 Userdetails.set_uid(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimUserdetails.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.AllInstances.addressGet">
            <summary>设置 Userdetails.get_address() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.AllInstances.addressSetString">
            <summary>设置 Userdetails.set_address(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.AllInstances.bdayGet">
            <summary>设置 Userdetails.get_bday() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.AllInstances.bdaySetString">
            <summary>设置 Userdetails.set_bday(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.AllInstances.bioGet">
            <summary>设置 Userdetails.get_bio() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.AllInstances.bioSetString">
            <summary>设置 Userdetails.set_bio(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.AllInstances.genderGet">
            <summary>设置 Userdetails.get_gender() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.AllInstances.genderSetInt32">
            <summary>设置 Userdetails.set_gender(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.AllInstances.idcardGet">
            <summary>设置 Userdetails.get_idcard() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.AllInstances.idcardSetString">
            <summary>设置 Userdetails.set_idcard(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.AllInstances.lastvisitipGet">
            <summary>设置 Userdetails.get_lastvisitip() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.AllInstances.lastvisitipSetString">
            <summary>设置 Userdetails.set_lastvisitip(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.AllInstances.lastvisitrgidGet">
            <summary>设置 Userdetails.get_lastvisitrgid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.AllInstances.lastvisitrgidSetInt32">
            <summary>设置 Userdetails.set_lastvisitrgid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.AllInstances.lastvisittimeGet">
            <summary>设置 Userdetails.get_lastvisittime() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.AllInstances.lastvisittimeSetDateTime">
            <summary>设置 Userdetails.set_lastvisittime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.AllInstances.realnameGet">
            <summary>设置 Userdetails.get_realname() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.AllInstances.realnameSetString">
            <summary>设置 Userdetails.set_realname(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.AllInstances.regionidGet">
            <summary>设置 Userdetails.get_regionid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.AllInstances.regionidSetInt32">
            <summary>设置 Userdetails.set_regionid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.AllInstances.registeripGet">
            <summary>设置 Userdetails.get_registerip() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.AllInstances.registeripSetString">
            <summary>设置 Userdetails.set_registerip(String value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.AllInstances.registerrgidGet">
            <summary>设置 Userdetails.get_registerrgid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.AllInstances.registerrgidSetInt32">
            <summary>设置 Userdetails.set_registerrgid(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.AllInstances.registertimeGet">
            <summary>设置 Userdetails.get_registertime() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.AllInstances.registertimeSetDateTime">
            <summary>设置 Userdetails.set_registertime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.AllInstances.uidGet">
            <summary>设置 Userdetails.get_uid() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimUserdetails.AllInstances.uidSetInt32">
            <summary>设置 Userdetails.set_uid(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimVisitorBrowse">
            <summary>YunXiu.Model.VisitorBrowse 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimVisitorBrowse.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimVisitorBrowse.#ctor(YunXiu.Model.VisitorBrowse)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimVisitorBrowse.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimVisitorBrowse.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimVisitorBrowse.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimVisitorBrowse.Constructor">
            <summary>设置 VisitorBrowse.VisitorBrowse() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimVisitorBrowse.IDGet">
            <summary>设置 VisitorBrowse.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimVisitorBrowse.IDSetInt32">
            <summary>设置 VisitorBrowse.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimVisitorBrowse.IPGet">
            <summary>设置 VisitorBrowse.get_IP() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimVisitorBrowse.IPSetString">
            <summary>设置 VisitorBrowse.set_IP(String value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimVisitorBrowse.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimVisitorBrowse.AllInstances.IDGet">
            <summary>设置 VisitorBrowse.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimVisitorBrowse.AllInstances.IDSetInt32">
            <summary>设置 VisitorBrowse.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimVisitorBrowse.AllInstances.IPGet">
            <summary>设置 VisitorBrowse.get_IP() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimVisitorBrowse.AllInstances.IPSetString">
            <summary>设置 VisitorBrowse.set_IP(String value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimWithdrawalsApply">
            <summary>YunXiu.Model.WithdrawalsApply 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimWithdrawalsApply.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimWithdrawalsApply.#ctor(YunXiu.Model.WithdrawalsApply)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimWithdrawalsApply.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.ShimWithdrawalsApply.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimWithdrawalsApply.ApplyAmountGet">
            <summary>设置 WithdrawalsApply.get_ApplyAmount() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimWithdrawalsApply.ApplyAmountSetDecimal">
            <summary>设置 WithdrawalsApply.set_ApplyAmount(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimWithdrawalsApply.ApplyStatusGet">
            <summary>设置 WithdrawalsApply.get_ApplyStatus() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimWithdrawalsApply.ApplyStatusSetInt32">
            <summary>设置 WithdrawalsApply.set_ApplyStatus(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimWithdrawalsApply.ApplyUserGet">
            <summary>设置 WithdrawalsApply.get_ApplyUser() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimWithdrawalsApply.ApplyUserSetUser">
            <summary>设置 WithdrawalsApply.set_ApplyUser(User value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimWithdrawalsApply.ApproversUserGet">
            <summary>设置 WithdrawalsApply.get_ApproversUser() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimWithdrawalsApply.ApproversUserSetUser">
            <summary>设置 WithdrawalsApply.set_ApproversUser(User value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimWithdrawalsApply.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimWithdrawalsApply.Constructor">
            <summary>设置 WithdrawalsApply.WithdrawalsApply() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimWithdrawalsApply.IDGet">
            <summary>设置 WithdrawalsApply.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimWithdrawalsApply.IDSetInt32">
            <summary>设置 WithdrawalsApply.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.ShimWithdrawalsApply.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimWithdrawalsApply.AllInstances.ApplyAmountGet">
            <summary>设置 WithdrawalsApply.get_ApplyAmount() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimWithdrawalsApply.AllInstances.ApplyAmountSetDecimal">
            <summary>设置 WithdrawalsApply.set_ApplyAmount(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimWithdrawalsApply.AllInstances.ApplyStatusGet">
            <summary>设置 WithdrawalsApply.get_ApplyStatus() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimWithdrawalsApply.AllInstances.ApplyStatusSetInt32">
            <summary>设置 WithdrawalsApply.set_ApplyStatus(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimWithdrawalsApply.AllInstances.ApplyUserGet">
            <summary>设置 WithdrawalsApply.get_ApplyUser() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimWithdrawalsApply.AllInstances.ApplyUserSetUser">
            <summary>设置 WithdrawalsApply.set_ApplyUser(User value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimWithdrawalsApply.AllInstances.ApproversUserGet">
            <summary>设置 WithdrawalsApply.get_ApproversUser() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimWithdrawalsApply.AllInstances.ApproversUserSetUser">
            <summary>设置 WithdrawalsApply.set_ApproversUser(User value) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimWithdrawalsApply.AllInstances.IDGet">
            <summary>设置 WithdrawalsApply.get_ID() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.ShimWithdrawalsApply.AllInstances.IDSetInt32">
            <summary>设置 WithdrawalsApply.set_ID(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubAttributeValue">
            <summary>YunXiu.Model.AttributeValue 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubAttributeValue.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubAttributeValue.InitializeStub">
            <summary>初始化 type StubAttributeValue 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubAttributeValue.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubAttributeValue.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubAttributeValue.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubBanner">
            <summary>YunXiu.Model.Banner 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubBanner.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubBanner.InitializeStub">
            <summary>初始化 type StubBanner 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubBanner.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubBanner.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubBanner.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubBase">
            <summary>YunXiu.Model.Base 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubBase.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubBase.InitializeStub">
            <summary>初始化 type StubBase 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubBase.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubBase.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubBase.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubBid">
            <summary>YunXiu.Model.Bid 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubBid.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubBid.InitializeStub">
            <summary>初始化 type StubBid 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubBid.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubBid.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubBid.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubBrand">
            <summary>YunXiu.Model.Brand 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubBrand.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubBrand.InitializeStub">
            <summary>初始化 type StubBrand 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubBrand.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubBrand.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubBrand.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubBrowseHistorie">
            <summary>YunXiu.Model.BrowseHistorie 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubBrowseHistorie.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubBrowseHistorie.InitializeStub">
            <summary>初始化 type StubBrowseHistorie 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubBrowseHistorie.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubBrowseHistorie.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubBrowseHistorie.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubBuyApply">
            <summary>YunXiu.Model.BuyApply 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubBuyApply.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubBuyApply.InitializeStub">
            <summary>初始化 type StubBuyApply 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubBuyApply.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubBuyApply.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubBuyApply.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubBuyProduct">
            <summary>YunXiu.Model.BuyProduct 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubBuyProduct.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubBuyProduct.InitializeStub">
            <summary>初始化 type StubBuyProduct 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubBuyProduct.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubBuyProduct.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubBuyProduct.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubCateAttribute">
            <summary>YunXiu.Model.CateAttribute 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubCateAttribute.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubCateAttribute.InitializeStub">
            <summary>初始化 type StubCateAttribute 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubCateAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubCateAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubCateAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubCategory">
            <summary>YunXiu.Model.Category 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubCategory.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubCategory.InitializeStub">
            <summary>初始化 type StubCategory 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubCategory.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubCategory.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubCategory.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubCertificate">
            <summary>YunXiu.Model.Certificate 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubCertificate.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubCertificate.InitializeStub">
            <summary>初始化 type StubCertificate 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubCertificate.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubCertificate.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubCertificate.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubCertificateType">
            <summary>YunXiu.Model.CertificateType 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubCertificateType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubCertificateType.InitializeStub">
            <summary>初始化 type StubCertificateType 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubCertificateType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubCertificateType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubCertificateType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubConsultation">
            <summary>YunXiu.Model.Consultation 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubConsultation.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubConsultation.InitializeStub">
            <summary>初始化 type StubConsultation 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubConsultation.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubConsultation.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubConsultation.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubConsultationReply">
            <summary>YunXiu.Model.ConsultationReply 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubConsultationReply.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubConsultationReply.InitializeStub">
            <summary>初始化 type StubConsultationReply 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubConsultationReply.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubConsultationReply.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubConsultationReply.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubConsultationResult">
            <summary>YunXiu.Model.ConsultationResult 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubConsultationResult.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubConsultationResult.InitializeStub">
            <summary>初始化 type StubConsultationResult 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubConsultationResult.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubConsultationResult.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubConsultationResult.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubConsultationType">
            <summary>YunXiu.Model.ConsultationType 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubConsultationType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubConsultationType.InitializeStub">
            <summary>初始化 type StubConsultationType 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubConsultationType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubConsultationType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubConsultationType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubExtTable">
            <summary>YunXiu.Model.ExtTable 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubExtTable.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubExtTable.InitializeStub">
            <summary>初始化 type StubExtTable 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubExtTable.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubExtTable.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubExtTable.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubFavoriteProduct">
            <summary>YunXiu.Model.FavoriteProduct 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubFavoriteProduct.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubFavoriteProduct.InitializeStub">
            <summary>初始化 type StubFavoriteProduct 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubFavoriteProduct.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubFavoriteProduct.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubFavoriteProduct.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubFavoriteProductModel">
            <summary>YunXiu.Model.FavoriteProductModel 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubFavoriteProductModel.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubFavoriteProductModel.InitializeStub">
            <summary>初始化 type StubFavoriteProductModel 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubFavoriteProductModel.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubFavoriteProductModel.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubFavoriteProductModel.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubFavoriteStore">
            <summary>YunXiu.Model.FavoriteStore 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubFavoriteStore.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubFavoriteStore.InitializeStub">
            <summary>初始化 type StubFavoriteStore 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubFavoriteStore.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubFavoriteStore.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubFavoriteStore.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubFavoriteStoreModel">
            <summary>YunXiu.Model.FavoriteStoreModel 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubFavoriteStoreModel.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubFavoriteStoreModel.InitializeStub">
            <summary>初始化 type StubFavoriteStoreModel 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubFavoriteStoreModel.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubFavoriteStoreModel.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubFavoriteStoreModel.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubInvoice">
            <summary>YunXiu.Model.Invoice 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubInvoice.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubInvoice.InitializeStub">
            <summary>初始化 type StubInvoice 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubInvoice.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubInvoice.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubInvoice.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubLoginInfo">
            <summary>YunXiu.Model.LoginInfo 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubLoginInfo.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubLoginInfo.InitializeStub">
            <summary>初始化 type StubLoginInfo 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubLoginInfo.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubLoginInfo.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubLoginInfo.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubLoginfaillogs">
            <summary>YunXiu.Model.Loginfaillogs 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubLoginfaillogs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubLoginfaillogs.InitializeStub">
            <summary>初始化 type StubLoginfaillogs 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubLoginfaillogs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubLoginfaillogs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubLoginfaillogs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubLogistics">
            <summary>YunXiu.Model.Logistics 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubLogistics.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubLogistics.InitializeStub">
            <summary>初始化 type StubLogistics 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubLogistics.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubLogistics.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubLogistics.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubMessageTb">
            <summary>YunXiu.Model.MessageTb 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubMessageTb.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubMessageTb.InitializeStub">
            <summary>初始化 type StubMessageTb 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubMessageTb.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubMessageTb.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubMessageTb.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubOrder">
            <summary>YunXiu.Model.Order 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubOrder.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubOrder.InitializeStub">
            <summary>初始化 type StubOrder 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubOrder.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubOrder.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubOrder.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubOrderPayOrder">
            <summary>YunXiu.Model.OrderPayOrder 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubOrderPayOrder.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubOrderPayOrder.InitializeStub">
            <summary>初始化 type StubOrderPayOrder 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubOrderPayOrder.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubOrderPayOrder.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubOrderPayOrder.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubOutStore">
            <summary>YunXiu.Model.OutStore 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubOutStore.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubOutStore.InitializeStub">
            <summary>初始化 type StubOutStore 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubOutStore.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubOutStore.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubOutStore.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubPageResult`1">
            <summary>YunXiu.Model.PageResult`1 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubPageResult`1.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubPageResult`1.InitializeStub">
            <summary>初始化 type StubPageResult 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubPageResult`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubPageResult`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubPageResult`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubPayOrder">
            <summary>YunXiu.Model.PayOrder 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubPayOrder.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubPayOrder.InitializeStub">
            <summary>初始化 type StubPayOrder 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubPayOrder.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubPayOrder.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubPayOrder.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubPermission">
            <summary>YunXiu.Model.Permission 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubPermission.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubPermission.InitializeStub">
            <summary>初始化 type StubPermission 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubPermission.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubPermission.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubPermission.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubPermissionType">
            <summary>YunXiu.Model.PermissionType 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubPermissionType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubPermissionType.InitializeStub">
            <summary>初始化 type StubPermissionType 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubPermissionType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubPermissionType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubPermissionType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubProduct">
            <summary>YunXiu.Model.Product 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubProduct.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubProduct.InitializeStub">
            <summary>初始化 type StubProduct 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubProduct.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubProduct.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubProduct.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubProductAttr">
            <summary>YunXiu.Model.ProductAttr 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubProductAttr.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubProductAttr.InitializeStub">
            <summary>初始化 type StubProductAttr 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubProductAttr.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubProductAttr.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubProductAttr.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubProductConsultTypes">
            <summary>YunXiu.Model.ProductConsultTypes 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubProductConsultTypes.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubProductConsultTypes.InitializeStub">
            <summary>初始化 type StubProductConsultTypes 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubProductConsultTypes.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubProductConsultTypes.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubProductConsultTypes.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubProductConsults">
            <summary>YunXiu.Model.ProductConsults 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubProductConsults.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubProductConsults.InitializeStub">
            <summary>初始化 type StubProductConsults 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubProductConsults.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubProductConsults.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubProductConsults.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubProductConsultsModel">
            <summary>YunXiu.Model.ProductConsultsModel 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubProductConsultsModel.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubProductConsultsModel.InitializeStub">
            <summary>初始化 type StubProductConsultsModel 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubProductConsultsModel.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubProductConsultsModel.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubProductConsultsModel.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubProductImage">
            <summary>YunXiu.Model.ProductImage 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubProductImage.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubProductImage.InitializeStub">
            <summary>初始化 type StubProductImage 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubProductImage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubProductImage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubProductImage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubProductKeyWords">
            <summary>YunXiu.Model.ProductKeyWords 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubProductKeyWords.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubProductKeyWords.InitializeStub">
            <summary>初始化 type StubProductKeyWords 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubProductKeyWords.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubProductKeyWords.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubProductKeyWords.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubProductReview">
            <summary>YunXiu.Model.ProductReview 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubProductReview.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubProductReview.InitializeStub">
            <summary>初始化 type StubProductReview 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubProductReview.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubProductReview.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubProductReview.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubProductReviewQuality">
            <summary>YunXiu.Model.ProductReviewQuality 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubProductReviewQuality.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubProductReviewQuality.InitializeStub">
            <summary>初始化 type StubProductReviewQuality 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubProductReviewQuality.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubProductReviewQuality.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubProductReviewQuality.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubProductStock">
            <summary>YunXiu.Model.ProductStock 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubProductStock.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubProductStock.InitializeStub">
            <summary>初始化 type StubProductStock 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubProductStock.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubProductStock.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubProductStock.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubProductStorage">
            <summary>YunXiu.Model.ProductStorage 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubProductStorage.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubProductStorage.InitializeStub">
            <summary>初始化 type StubProductStorage 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubProductStorage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubProductStorage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubProductStorage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubProductskus">
            <summary>YunXiu.Model.Productskus 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubProductskus.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubProductskus.InitializeStub">
            <summary>初始化 type StubProductskus 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubProductskus.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubProductskus.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubProductskus.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubProductstats">
            <summary>YunXiu.Model.Productstats 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubProductstats.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubProductstats.InitializeStub">
            <summary>初始化 type StubProductstats 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubProductstats.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubProductstats.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubProductstats.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubPurchaseOfferAccept">
            <summary>YunXiu.Model.PurchaseOfferAccept 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubPurchaseOfferAccept.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubPurchaseOfferAccept.InitializeStub">
            <summary>初始化 type StubPurchaseOfferAccept 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubPurchaseOfferAccept.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubPurchaseOfferAccept.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubPurchaseOfferAccept.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubPurchasePlan">
            <summary>YunXiu.Model.PurchasePlan 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubPurchasePlan.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubPurchasePlan.InitializeStub">
            <summary>初始化 type StubPurchasePlan 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubPurchasePlan.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubPurchasePlan.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubPurchasePlan.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubPurchasePlanModel">
            <summary>YunXiu.Model.PurchasePlanModel 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubPurchasePlanModel.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubPurchasePlanModel.InitializeStub">
            <summary>初始化 type StubPurchasePlanModel 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubPurchasePlanModel.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubPurchasePlanModel.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubPurchasePlanModel.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubPurchasePlanOffer">
            <summary>YunXiu.Model.PurchasePlanOffer 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubPurchasePlanOffer.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubPurchasePlanOffer.InitializeStub">
            <summary>初始化 type StubPurchasePlanOffer 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubPurchasePlanOffer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubPurchasePlanOffer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubPurchasePlanOffer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubPurchasePlanView">
            <summary>YunXiu.Model.PurchasePlanView 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubPurchasePlanView.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubPurchasePlanView.InitializeStub">
            <summary>初始化 type StubPurchasePlanView 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubPurchasePlanView.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubPurchasePlanView.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubPurchasePlanView.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubPvstats">
            <summary>YunXiu.Model.Pvstats 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubPvstats.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubPvstats.InitializeStub">
            <summary>初始化 type StubPvstats 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubPvstats.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubPvstats.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubPvstats.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubReceiptAddress">
            <summary>YunXiu.Model.ReceiptAddress 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubReceiptAddress.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubReceiptAddress.InitializeStub">
            <summary>初始化 type StubReceiptAddress 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubReceiptAddress.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubReceiptAddress.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubReceiptAddress.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubRefundProducts">
            <summary>YunXiu.Model.RefundProducts 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubRefundProducts.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubRefundProducts.InitializeStub">
            <summary>初始化 type StubRefundProducts 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubRefundProducts.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubRefundProducts.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubRefundProducts.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubRegions">
            <summary>YunXiu.Model.Regions 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubRegions.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubRegions.InitializeStub">
            <summary>初始化 type StubRegions 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubRegions.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubRegions.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubRegions.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubRelateproducts">
            <summary>YunXiu.Model.Relateproducts 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubRelateproducts.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubRelateproducts.InitializeStub">
            <summary>初始化 type StubRelateproducts 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubRelateproducts.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubRelateproducts.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubRelateproducts.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubRole">
            <summary>YunXiu.Model.Role 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubRole.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubRole.InitializeStub">
            <summary>初始化 type StubRole 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubRole.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubRole.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubRole.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubSMS">
            <summary>YunXiu.Model.SMS 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubSMS.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubSMS.InitializeStub">
            <summary>初始化 type StubSMS 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubSMS.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubSMS.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubSMS.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubSearchhistories">
            <summary>YunXiu.Model.Searchhistories 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubSearchhistories.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubSearchhistories.InitializeStub">
            <summary>初始化 type StubSearchhistories 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubSearchhistories.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubSearchhistories.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubSearchhistories.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubShipaddresses">
            <summary>YunXiu.Model.Shipaddresses 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubShipaddresses.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubShipaddresses.InitializeStub">
            <summary>初始化 type StubShipaddresses 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubShipaddresses.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubShipaddresses.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubShipaddresses.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubShipcompanies">
            <summary>YunXiu.Model.Shipcompanies 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubShipcompanies.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubShipcompanies.InitializeStub">
            <summary>初始化 type StubShipcompanies 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubShipcompanies.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubShipcompanies.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubShipcompanies.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubShoppingCart">
            <summary>YunXiu.Model.ShoppingCart 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubShoppingCart.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubShoppingCart.InitializeStub">
            <summary>初始化 type StubShoppingCart 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubShoppingCart.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubShoppingCart.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubShoppingCart.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubSinglepromotions">
            <summary>YunXiu.Model.Singlepromotions 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubSinglepromotions.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubSinglepromotions.InitializeStub">
            <summary>初始化 type StubSinglepromotions 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubSinglepromotions.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubSinglepromotions.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubSinglepromotions.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubStore">
            <summary>YunXiu.Model.Store 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubStore.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubStore.InitializeStub">
            <summary>初始化 type StubStore 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStore.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStore.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStore.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubStoreBanners">
            <summary>YunXiu.Model.StoreBanners 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubStoreBanners.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubStoreBanners.InitializeStub">
            <summary>初始化 type StubStoreBanners 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoreBanners.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoreBanners.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoreBanners.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubStoreHome">
            <summary>YunXiu.Model.StoreHome 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubStoreHome.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubStoreHome.InitializeStub">
            <summary>初始化 type StubStoreHome 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoreHome.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoreHome.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoreHome.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubStoreImg">
            <summary>YunXiu.Model.StoreImg 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubStoreImg.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubStoreImg.InitializeStub">
            <summary>初始化 type StubStoreImg 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoreImg.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoreImg.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoreImg.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubStoreNavigation">
            <summary>YunXiu.Model.StoreNavigation 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubStoreNavigation.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubStoreNavigation.InitializeStub">
            <summary>初始化 type StubStoreNavigation 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoreNavigation.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoreNavigation.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoreNavigation.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubStoreStaff">
            <summary>YunXiu.Model.StoreStaff 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubStoreStaff.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubStoreStaff.InitializeStub">
            <summary>初始化 type StubStoreStaff 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoreStaff.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoreStaff.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoreStaff.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubStoreUser">
            <summary>YunXiu.Model.StoreUser 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubStoreUser.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubStoreUser.InitializeStub">
            <summary>初始化 type StubStoreUser 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoreUser.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoreUser.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoreUser.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubStoreUserGroup">
            <summary>YunXiu.Model.StoreUserGroup 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubStoreUserGroup.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubStoreUserGroup.InitializeStub">
            <summary>初始化 type StubStoreUserGroup 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoreUserGroup.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoreUserGroup.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoreUserGroup.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubStoreUserGroupStoreUser">
            <summary>YunXiu.Model.StoreUserGroupStoreUser 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubStoreUserGroupStoreUser.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubStoreUserGroupStoreUser.InitializeStub">
            <summary>初始化 type StubStoreUserGroupStoreUser 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoreUserGroupStoreUser.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoreUserGroupStoreUser.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoreUserGroupStoreUser.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubStoreadminlogs">
            <summary>YunXiu.Model.Storeadminlogs 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubStoreadminlogs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubStoreadminlogs.InitializeStub">
            <summary>初始化 type StubStoreadminlogs 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoreadminlogs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoreadminlogs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoreadminlogs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubStoreclasses">
            <summary>YunXiu.Model.Storeclasses 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubStoreclasses.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubStoreclasses.InitializeStub">
            <summary>初始化 type StubStoreclasses 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoreclasses.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoreclasses.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoreclasses.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubStoreindustries">
            <summary>YunXiu.Model.Storeindustries 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubStoreindustries.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubStoreindustries.InitializeStub">
            <summary>初始化 type StubStoreindustries 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoreindustries.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoreindustries.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoreindustries.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubStorekeepers">
            <summary>YunXiu.Model.Storekeepers 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubStorekeepers.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubStorekeepers.InitializeStub">
            <summary>初始化 type StubStorekeepers 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStorekeepers.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStorekeepers.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStorekeepers.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubStoreranks">
            <summary>YunXiu.Model.Storeranks 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubStoreranks.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubStoreranks.InitializeStub">
            <summary>初始化 type StubStoreranks 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoreranks.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoreranks.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoreranks.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubStorereviews">
            <summary>YunXiu.Model.Storereviews 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubStorereviews.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubStorereviews.InitializeStub">
            <summary>初始化 type StubStorereviews 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStorereviews.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStorereviews.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStorereviews.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubStoresApply_Company2_">
            <summary>YunXiu.Model.StoresApply_Company2_ 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubStoresApply_Company2_.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubStoresApply_Company2_.InitializeStub">
            <summary>初始化 type StubStoresApply_Company2_ 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoresApply_Company2_.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoresApply_Company2_.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoresApply_Company2_.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubStoresApply_Company_">
            <summary>YunXiu.Model.StoresApply_Company_ 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubStoresApply_Company_.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubStoresApply_Company_.InitializeStub">
            <summary>初始化 type StubStoresApply_Company_ 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoresApply_Company_.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoresApply_Company_.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoresApply_Company_.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubStoresApply_public">
            <summary>YunXiu.Model.StoresApply_public 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubStoresApply_public.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubStoresApply_public.InitializeStub">
            <summary>初始化 type StubStoresApply_public 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoresApply_public.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoresApply_public.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoresApply_public.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubStoreshipfees">
            <summary>YunXiu.Model.Storeshipfees 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubStoreshipfees.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubStoreshipfees.InitializeStub">
            <summary>初始化 type StubStoreshipfees 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoreshipfees.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoreshipfees.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoreshipfees.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubStoreshiptemplates">
            <summary>YunXiu.Model.Storeshiptemplates 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubStoreshiptemplates.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubStoreshiptemplates.InitializeStub">
            <summary>初始化 type StubStoreshiptemplates 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoreshiptemplates.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoreshiptemplates.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubStoreshiptemplates.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubSuitproducts">
            <summary>YunXiu.Model.Suitproducts 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubSuitproducts.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubSuitproducts.InitializeStub">
            <summary>初始化 type StubSuitproducts 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubSuitproducts.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubSuitproducts.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubSuitproducts.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubSuitpromotions">
            <summary>YunXiu.Model.Suitpromotions 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubSuitpromotions.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubSuitpromotions.InitializeStub">
            <summary>初始化 type StubSuitpromotions 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubSuitpromotions.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubSuitpromotions.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubSuitpromotions.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubTFUser">
            <summary>YunXiu.Model.TFUser 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubTFUser.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubTFUser.InitializeStub">
            <summary>初始化 type StubTFUser 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubTFUser.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubTFUser.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubTFUser.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubTender">
            <summary>YunXiu.Model.Tender 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubTender.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubTender.InitializeStub">
            <summary>初始化 type StubTender 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubTender.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubTender.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubTender.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubTenderAccept">
            <summary>YunXiu.Model.TenderAccept 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubTenderAccept.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubTenderAccept.InitializeStub">
            <summary>初始化 type StubTenderAccept 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubTenderAccept.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubTenderAccept.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubTenderAccept.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubTenderView">
            <summary>YunXiu.Model.TenderView 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubTenderView.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubTenderView.InitializeStub">
            <summary>初始化 type StubTenderView 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubTenderView.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubTenderView.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubTenderView.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubTimeproducts">
            <summary>YunXiu.Model.Timeproducts 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubTimeproducts.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubTimeproducts.InitializeStub">
            <summary>初始化 type StubTimeproducts 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubTimeproducts.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubTimeproducts.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubTimeproducts.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubTopics">
            <summary>YunXiu.Model.Topics 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubTopics.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubTopics.InitializeStub">
            <summary>初始化 type StubTopics 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubTopics.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubTopics.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubTopics.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubTrace">
            <summary>YunXiu.Model.Trace 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubTrace.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubTrace.InitializeStub">
            <summary>初始化 type StubTrace 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubTrace.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubTrace.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubTrace.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubUser">
            <summary>YunXiu.Model.User 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubUser.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubUser.InitializeStub">
            <summary>初始化 type StubUser 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubUser.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubUser.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubUser.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubUserRanks">
            <summary>YunXiu.Model.UserRanks 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubUserRanks.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubUserRanks.InitializeStub">
            <summary>初始化 type StubUserRanks 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubUserRanks.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubUserRanks.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubUserRanks.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubUserdetails">
            <summary>YunXiu.Model.Userdetails 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubUserdetails.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubUserdetails.InitializeStub">
            <summary>初始化 type StubUserdetails 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubUserdetails.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubUserdetails.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubUserdetails.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubVisitorBrowse">
            <summary>YunXiu.Model.VisitorBrowse 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubVisitorBrowse.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubVisitorBrowse.InitializeStub">
            <summary>初始化 type StubVisitorBrowse 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubVisitorBrowse.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubVisitorBrowse.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubVisitorBrowse.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Fakes.StubWithdrawalsApply">
            <summary>YunXiu.Model.WithdrawalsApply 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubWithdrawalsApply.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Fakes.StubWithdrawalsApply.InitializeStub">
            <summary>初始化 type StubWithdrawalsApply 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubWithdrawalsApply.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubWithdrawalsApply.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Fakes.StubWithdrawalsApply.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Global.Fakes.ShimGlobalDictionary">
            <summary>YunXiu.Model.Global.GlobalDictionary 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Global.Fakes.ShimGlobalDictionary.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Global.Fakes.ShimGlobalDictionary.#ctor(YunXiu.Model.Global.GlobalDictionary)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Global.Fakes.ShimGlobalDictionary.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Global.Fakes.ShimGlobalDictionary.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Global.Fakes.ShimGlobalDictionary.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Global.Fakes.ShimGlobalDictionary.Constructor">
            <summary>设置 GlobalDictionary.GlobalDictionary() 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Global.Fakes.ShimGlobalDictionary.GetSMSConfValString">
            <summary>设置 GlobalDictionary.GetSMSConfVal(String key) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Global.Fakes.ShimGlobalDictionary.GetSysConfValString">
            <summary>设置 GlobalDictionary.GetSysConfVal(String key) 的 填充码</summary>
        </member>
        <member name="P:YunXiu.Model.Global.Fakes.ShimGlobalDictionary.StaticConstructor">
            <summary>设置 GlobalDictionary.GlobalDictionary() 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Global.Fakes.ShimGlobalDictionary.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Global.Fakes.ShimGlobalList">
            <summary>YunXiu.Model.Global.GlobalList 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Global.Fakes.ShimGlobalList.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Global.Fakes.ShimGlobalList.#ctor(YunXiu.Model.Global.GlobalList)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Global.Fakes.ShimGlobalList.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Global.Fakes.ShimGlobalList.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Global.Fakes.ShimGlobalList.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Global.Fakes.ShimGlobalList.Constructor">
            <summary>设置 GlobalList.GlobalList() 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Global.Fakes.ShimGlobalList.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Global.Fakes.ShimGlobalQueue">
            <summary>YunXiu.Model.Global.GlobalQueue 的填充码类型</summary>
        </member>
        <member name="M:YunXiu.Model.Global.Fakes.ShimGlobalQueue.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:YunXiu.Model.Global.Fakes.ShimGlobalQueue.#ctor(YunXiu.Model.Global.GlobalQueue)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:YunXiu.Model.Global.Fakes.ShimGlobalQueue.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:YunXiu.Model.Global.Fakes.ShimGlobalQueue.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:YunXiu.Model.Global.Fakes.ShimGlobalQueue.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:YunXiu.Model.Global.Fakes.ShimGlobalQueue.Constructor">
            <summary>设置 GlobalQueue.GlobalQueue() 的 填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Global.Fakes.ShimGlobalQueue.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:YunXiu.Model.Global.Fakes.StubGlobalDictionary">
            <summary>YunXiu.Model.Global.GlobalDictionary 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Global.Fakes.StubGlobalDictionary.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Global.Fakes.StubGlobalDictionary.InitializeStub">
            <summary>初始化 type StubGlobalDictionary 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Global.Fakes.StubGlobalDictionary.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Global.Fakes.StubGlobalDictionary.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Global.Fakes.StubGlobalDictionary.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Global.Fakes.StubGlobalList">
            <summary>YunXiu.Model.Global.GlobalList 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Global.Fakes.StubGlobalList.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Global.Fakes.StubGlobalList.InitializeStub">
            <summary>初始化 type StubGlobalList 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Global.Fakes.StubGlobalList.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Global.Fakes.StubGlobalList.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Global.Fakes.StubGlobalList.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:YunXiu.Model.Global.Fakes.StubGlobalQueue">
            <summary>YunXiu.Model.Global.GlobalQueue 的存根类型</summary>
        </member>
        <member name="M:YunXiu.Model.Global.Fakes.StubGlobalQueue.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:YunXiu.Model.Global.Fakes.StubGlobalQueue.InitializeStub">
            <summary>初始化 type StubGlobalQueue 的新实例</summary>
        </member>
        <member name="P:YunXiu.Model.Global.Fakes.StubGlobalQueue.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:YunXiu.Model.Global.Fakes.StubGlobalQueue.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:YunXiu.Model.Global.Fakes.StubGlobalQueue.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
    </members>
</doc>
